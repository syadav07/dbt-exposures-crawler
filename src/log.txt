Signed in successfully!
local
2023-10-19 10:53:01,714 — exposurescrawler — INFO — 🔍 Parsing GraphQL result: looking for custom SQL tables
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,715 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Customer MRR Retention | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,716 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Cash Flow Forecast | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Domain Retention | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,717 — exposurescrawler — DEBUG —  ➕ ViewerX Funnel & Core Metrics Monitoring | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ [BETA] - Tableau Cockpit Loom | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Monthly ARR Movement Summary | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ ViewerX Funnel & Core Metrics Monitoring | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ MRR Exports | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,718 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — INFO — 🔍 Found 25 workbooks with custom SQL
2023-10-19 10:53:01,719 — exposurescrawler — INFO — ⚙️ Parsing SQL: looking for references to models
select 
video_id
, user_id
, client
, recording_client
, recording_type
, service
, recording_start_at_utc
, recording_cancelled_at_utc
, recording_stopped_at_utc
, recording_complete_at_utc
, duration_of_completed_video
, coalesce(upload_method, 'us-west-2') as upload_method
, r.country_code
, cc.country_name
, recording_stability_1d
, case when recording_cancelled_at_utc is null then 0 else 1 end as is_not_cancelled
, latency
, speed_test_result
, upload_throughput
, avg_bit_rate
, width * height as video_resolution
, resolution
, ttv_seconds
, ttv_normalized
from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
    on r.country_code = cc.country_code
where coalesce(ttv_seconds,0) >>= 0
and coalesce(ttv_seconds,0) <<= 1200 
and service not in ('desktop')
and coalesce(date(recording_start_at_utc),'2021-01-01') >>= dateadd('day',-91,current_date)
and coalesce(date(recording_start_at_utc),'2021-01-01') << current_date
select 
  sub.*,
  case 
  when date_trunc('week', week) = date_trunc('week', sysdate()) then '2. current week'
  when date_trunc('week', week) = date_trunc('week', sysdate()) - interval '1 week' then '1. previous week'
  else 'error' end as weekly_status
  from (
        select 
          date_trunc('week',recording_start_at_utc) as week,
          service,
          avg(ttv_seconds) as avg_ttv_seconds,
            count(video_id) as video_count
        from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
        left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
            on r.country_code = cc.country_code
        where coalesce(ttv_seconds,0) >>= 0
          and coalesce(ttv_seconds,0) <<= 1200 
          and date_trunc('week', recording_start_at_utc) <<= date_trunc('week', sysdate())
          and date_trunc('week', recording_start_at_utc) >>= date_trunc('week', sysdate()) - interval '1 week'
        group by 1,2
  ) sub
select 
    sub.*,
    case 
    when date_trunc('quarter', quarter) = date_trunc('quarter', sysdate()) then '2. current quarter'
    when date_trunc('quarter', quarter) = date_trunc('quarter', sysdate()) - interval '1 quarter' then '1. previous quarter'
    else 'error' end as quarterly_status
    from (
          select 
            date_trunc('quarter',recording_start_at_utc) as quarter,
            service,
            avg(ttv_seconds) as avg_ttv_seconds
          from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
          left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
              on r.country_code = cc.country_code
          where coalesce(ttv_seconds,0) >>= 0
            and coalesce(ttv_seconds,0) <<= 1200 
            and date_trunc('quarter', recording_start_at_utc) <<= date_trunc('quarter', sysdate())
            and date_trunc('quarter', recording_start_at_utc) >>= date_trunc('quarter', sysdate()) - interval '1 quarter'
          group by 1,2
    ) sub
2023-10-19 10:53:01,723 — exposurescrawler — DEBUG —  ❌ TTV Stability Dashboard: found no models
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, recorder_device order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_total_recorders_by_device
      order by agg_type, recorder_device, date_day)
select *, lag(trailing_4_week) over (partition by agg_type, METRIC_NAME, account_segment order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(METRIC_VALUE, 0))
                                                   OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then SUM(coalesce(METRIC_VALUE, 0))
                                                  OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then SUM(coalesce(METRIC_VALUE, 0))
                                                    OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then SUM(coalesce(METRIC_VALUE, 0))
                                                      OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then SUM(coalesce(METRIC_VALUE, 0))
                                                   OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_sales_metrics
      order by agg_type, account_segment, date_day)
where date_day <<= (select max(date_day) from ANALYTICS.analytics.reporting_executive_dashboard_sales_metrics
where metric_name = 'total_sql')
select *
from analytics.analytics.reporting_executive_dashboard_top_vfvers
select * from analytics.analytics.reporting_executive_dashboard_domains_with_seats
select *
from analytics.analytics.reporting_executive_dashboard_top_viewers
select *
from analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
select *, lag(trailing_4_week) over (partition by agg_type, subservice_category order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then AVG(coalesce(success_rate, 0))
                                                   OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then AVG(coalesce(success_rate, 0))
                                                  OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then AVG(coalesce(success_rate, 0))
                                                    OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then AVG(coalesce(success_rate, 0))
                                                      OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then AVG(coalesce(success_rate, 0))
                                                   OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_recording_stability_metrics
      order by agg_type, subservice_category, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders
select *
from analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, sales_type, user_classification order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from analytics.analytics.reporting_executive_dashboard_revenue_metrics
      order by agg_type, SALES_TYPE, USER_CLASSIFICATION, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, sales_type, user_classification order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from analytics.analytics.reporting_executive_dashboard_metrics
      order by agg_type, SALES_TYPE, USER_CLASSIFICATION, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_viral_looms
select * from analytics.analytics.reporting_executive_dashboard_domains_with_contractions
select "metric_date" as DATE_DAY,
       TIME_FRAME  as AGG_TYPE,
       PLAN,
       FILTER,
       METRIC as METRIC_NAME,
       "metric_value" as METRIC_VALUE,
       YOY_TO_DATE,
       POP_TO_DATE
from ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
where METRIC_VALUE is not null
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
select * from analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
select * from analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:53:01,741 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
select * from analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
select *
from analytics.analytics.reporting_executive_dashboard_top_viral_looms
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders
select *
from ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
select *
from (
select date_day,
    lower("Time Frame") as agg_type,
    "Plan" as plan,
    "Filter" as filter,
    "Metric" as metric_name,
    metric_value,
    case when agg_type = 'monthly' then LAG(metric_value, 12) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY )
         when agg_type = 'quarterly' then LAG(metric_value, 4) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY ) end AS YOY_TO_DATE,
    LAG(metric_value, 1) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY ) AS POP_TO_DATE

from (
    select *, TO_DATE("Date", 'MM/DD/YY') as date_day, CASE WHEN SUBSTR("Value", -1, 1) = '%' THEN (regexp_replace("Value", '[^0-9.-]+', '')/100)::DOUBLE ELSE regexp_replace("Value", '[^0-9.-]+')::DOUBLE END as metric_value
    from analytics_dev.dbt_karan.exec_finance_pivot
    )
    )
where metric_value is not null
select * from analytics.analytics.reporting_executive_dashboard_domains_with_contractions
select *
from analytics.analytics.reporting_executive_dashboard_sales_metrics
select *
from analytics.analytics.reporting_executive_dashboard_top_viewers
select *
from analytics.analytics.reporting_executive_dashboard_top_vfvers
select * from analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
select * from analytics.analytics.reporting_executive_dashboard_domains_with_seats
select *
from analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
select *
    from  ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
    where date_day <<= ( select max(DATE_DAY)
    from  ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
    where metric_name = 'unique_viewers')
select *
from analytics.analytics.reporting_executive_dashboard_revenue_metrics
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:53:01,751 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
with 
max_timestamp as (
  select  
    max(date_pt) as last_run_at
  from 
    analytics.analytics.fact_recording_reports hf 
  where 
    date_pt >>= dateadd('day',-1,current_timestamp())

)

select 
hf.*,
split_part(segment, ',', 1) as split,
 recording_attempts::float/sum(recording_attempts) over (partition by date_pt,population) as hour_share,
recording_attempts::float/sum(recording_attempts) over (partition by date_pt,population,split_part(segment, ',', 1)) as segment_hour_share
from analytics.analytics.fact_recording_reports hf 
cross join max_timestamp m 

where date_pt << dateadd('hour',-1,m.last_run_at) -- - date_trunc('hour', convert_timezone('UTC', 'America/Los_Angeles', getdate()))   - interval '1 hours'
 and date_trunc('day', date_pt) >>= date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '7 days'
 and time_Aggregation = 'hourly'
with

base as (
select
sub.*,
datediff('days',date_trunc('day',date_pt),date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))) as days_from_today,
recording_attempts::float/sum(recording_attempts) over (partition by population,split_part(sub.segment,',',1),date_pt) as segment_weight,
recording_attempts::float/sum(recording_attempts) over (partition by population,date_pt) as daily_weight
from (
select * from analytics.analytics.fact_recording_reports f 
 where date_pt << date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
  and time_aggregation = 'daily'

)sub
)


select *
from (
select 
 sub.*,
 split_part(sub.segment,',',1) as micro_segment,
 b1.rate_recording_Stability_1d as first_date_rate,
 b2.rate_recording_Stability_1d as last_success_rate_as_majority,
 b1.segment_weight as first_weight,
 b2.segment_weight as last_weight,
 rank() over (partition by split_part(sub.segment,',',1),sub.population order by sub.last_date_as_majority desc,b2.segment_weight desc) as ranker
from (
select
 population,
 segment,
 min(date_pt) as first_date_as_majority,
 max(date_pt) as last_date_as_majority
from base
where segment_weight >>= 0.1 -- only pull cases where segment weight >>= 0.5

group by 1,2
) sub 
left join base b1 on b1.population = sub.population and b1.segment = sub.segment and b1.date_pt = sub.first_date_as_majority
left join base b2 on b2.population = sub.population and b2.segment = sub.segment and b2.date_pt = sub.last_date_as_majority
)
where ranker <<= 2 
 and population = 'subservice and client version'
 and micro_segment not in ('no subservice data','desktop')
with recent_quarter as (
select date_pt as quarter_comparison,days_from_quarter_start
from (
select 
  sub.*,
  row_number() over (order by days_from_quarter_start asc) as ranker
from (
select distinct 
 date_trunc('quarter',date_pt) as quarter,
 date_pt,
 abs(datediff('days',date_trunc('quarter',date_pt),date_pt)) as days_from_quarter_start
 
from analytics.analytics.fact_recording_reports r 
 where time_aggregation = 'weekly'
 order by date_pt asc
 ) sub
 ) sub2
 where ranker = 1
),


quarter as (
select 
 date_pt,
 segment,
 population,
 time_aggregation,
 rate_recording_stability_1d,
 'beginning of quarter'::text as status
 

from analytics.analytics.fact_recording_reports r 
 join recent_quarter rq on rq.quarter_comparison = r.date_pt
 
where time_aggregation = 'weekly'
 and population in ('subservice','aggregate')
),

recent_week as (

select 
 week as date_pt,
 subservice as segment,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  'weekly' as time_aggregation,
  rate_recording_stability_1d,
  'current week'::text as status
from (
select 
 week,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(weekly_share) as weekly_share_represented
from (
select 
 week,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by week,subservice) as weekly_share
from (
select 
 date_trunc('week', date_pt) as week,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'daily'
 and date_trunc('week', date_pt) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where weekly_share >>= .05
group by 1,2
) sub3
order by subservice,week
)

select * from recent_week 
union all 
select * from quarter
with recent_day as (
select 
 day as date_pt,
   'daily' as time_aggregation,
 subservice as segment,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  rate_recording_stability_1d,
  '2. most recent complete day'::text as status
from (
select 
 day,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(daily_share) as daily_share_represented
from (
select 
 day,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by day,subservice) as daily_share
from (
select 
 date_trunc('day', date_pt) as day,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'hourly'
 and date_trunc('day', date_pt) = date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 day'
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where daily_share >>= .05
group by 1,2
) sub3
  ),
  

  recent_week as (
 select 
   date_pt,
   time_aggregation,
   segment,
   population,
   RATE_RECORDING_STABILITY_1D,
   '1. most recent complete week'::text as status
from analytics.analytics.fact_recording_reports r
where 
  population in ('subservice','aggregate')
  and time_aggregation = 'weekly'
  and date_trunc('week', date_pt) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week'
  )
  
  select * from recent_day 
  union all 
  select * from recent_week
with

base as (
select
sub.*,
datediff('days',date_trunc('day',date_pt),date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) ) as days_from_today,
recording_attempts::float/sum(recording_attempts) over (partition by population,split_part(sub.segment,',',1),date_pt) as segment_weight,
recording_attempts::float/sum(recording_attempts) over (partition by population,date_pt) as daily_weight
from (
select * 
from analytics.analytics.fact_recording_reports 
where 
  date_pt <<= date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) 
  and time_aggregation = 'daily'
)sub
),



first_day as (
select
 population,
 segment,
 first_date,
 rank() over (partition by split_part(sub.segment,',',1) order by first_date desc) as ranker
from (
select
 population,
 segment,
 min(date_pt) as first_date
from base

group by 1,2
) sub
),

last_day as (
select *
from (
 select
  sub.population,
  sub.segment,
  sub.first_date,
  b.date_pt,
  b.rate_recording_stability_1d,
  rank() over (partition by b.population,split_part(b.segment,',',1) order by b.date_pt desc) as day_ranker
from (
  select population,segment,first_date from first_day where ranker = 2
) sub
left join base b on b.population = sub.population and b.segment = sub.segment and segment_weight >>= 0.5
) sub2
where day_ranker = 1
)


select
 sub.*,
 case
  when segment_version_rank = 1 then 'show'
  when segment_version_rank = 2 then 'dont show'
  else 'dont show' end as show_status,
 ld.segment as last_segment,
 ld.rate_recording_stability_1d as previous_best,
 ld.date_pt as previous_day

from (
select
 b.*,
 fd.first_date,
 split_part(b.segment,',',1) as split,
 rank() over (partition by b.date_pt,b.population,split_part(b.segment,',',1) order by b.segment_weight desc) as segment_weight_rank,
 rank() over (partition by b.date_pt,b.population,split_part(b.segment,',',1) order by fd.first_date desc) as segment_version_rank
from base b
 left join first_day fd on fd.segment = b.segment and fd.population = b.population
) sub
left join last_day ld on ld.population = sub.population and split_part(sub.segment,',',1) = split_part(ld.segment,',',1)


where days_from_today >> 0 and days_from_today <<= 30
select 
 sub3.*,
 subservice as segment,
 week as date_pt,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  case 
  when date_trunc('week', week) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) then '2. current week'
  when date_trunc('week', week) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week' then '1. previous week'
  else 'error' end as weekly_status
from (
select 
 week,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(weekly_share) as weekly_share_represented
from (
select 
 week,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by week,subservice) as weekly_share
from (
select 
 date_trunc('week', date_pt) as week,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'daily'
 and date_trunc('week', date_pt) <<= date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
 and date_trunc('week', date_pt) >>= date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week'
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where weekly_share >>= .05
group by 1,2
) sub3
order by subservice,week
select 
 ttv.*,
 split_part(segment,',',1) as segment_split

from analytics.analytics.fact_recording_ttv ttv
2023-10-19 10:53:01,765 — exposurescrawler — DEBUG —  ❌ Recording Stability Dashboard: found no models
with paid_self_serve_orgs as (
    select
        organization_id, date_day, mrr_ending as mrr, seats_ending as seats
    from analytics.analytics.fact_mrr_movement_by_customer_by_day
    where date_day >>= '2022-01-01'
    and mrr>>0
)
select
    a.user_id,
    a.organization_id,
    b.role,
    case when b.role in ('creator', 'admin') then 'Yes' else 'No' end as is_paid_role,
    case when p.organization_id is not null then 'Yes' else 'No' end as is_paid_org,    
    a.segment_timestamp_utc as auto_join_date
from analytics.analytics.staging_nodejs_auto_join_workspace a 
join analytics.analytics.fact_user_by_workspace_by_day b
    on a.user_id = b.user_id
    and a.organization_id = b.organization_id
    and date(a.segment_timestamp_utc) = b.date_day
join analytics.analytics.fact_organization orgs
    on a.organization_id = orgs.organization_id
left join paid_self_serve_orgs p
    on p.organization_id = a.organization_id
    and p.date_day = date(a.segment_timestamp_utc)
where orgs.sales_support_type = 'self_serve'
and b.member_status='active'
and a.segment_timestamp_utc >>= '2022-01-01'
with nav_button as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'P&B via Nav Button' as step_name
from analytics.analytics.staging_website_navigation_item_clicked 
where primary_nav_item='settings_workspace' 
    and secondary_nav_item='plan_billing'
    and segment_timestamp_utc >>= '2022-08-01'
)
, plan_page_visits as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'P&B Page via Link' as step_name
from analytics.analytics.base_website_pages 
where context_page_url like '%?scrollTo=allPlansSectionTitle%' 
    and segment_timestamp_utc >>= '2022-08-01'
)
, modal_rendered as (
select
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'Change Plan Modal Rendered' as step_name
from analytics.analytics.staging_website_change_plan_modal_rendered
where segment_timestamp_utc >>= '2022-08-01'
)
, upgrade_steps as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    case
        when step=0 then 'Choose Creators Page'
        when step=1 then 'Payment Details Page'
        when step=2 then 'Upgrade Success Page'
    end as step_name,
    row_number() over (partition by user_id, event_date,step_name order by segment_timestamp_utc) rnk
from analytics.analytics.staging_website_streamline_upgrade_page_step 
where segment_timestamp_utc >>= '2022-08-01'
)
, raw_settings_data as (
select * from nav_button
union all
select * from plan_page_visits
union all
select * from modal_rendered
)
, final_settings_data as (
select
    user_id,
    organization_id,
    event_date,
    segment_timestamp_utc,
    step_name,
    row_number() over (partition by user_id, event_date order by segment_timestamp_utc) rnk
from raw_settings_data
)
select * from final_settings_data where rnk=1
union all
select * from upgrade_steps where rnk=1
select
date_week as the_date,
'Weekly' as period_length,
organization_id,
plan_interval,
sum(mrr_net_change) as mrr_change,
sum(mrr_new) as mrr_new,
sum(mrr_expansion) as mrr_expansion,
sum(mrr_contraction) as mrr_contraction,
sum(mrr_churn) as mrr_churn,
sum(mrr_reactivation) as mrr_reactivation,
sum(mrr_starting) as mrr_starting,
sum(seats_churn) as seats_churn,
sum(seats_contraction) as seats_contraction
from analytics.analytics.fact_mrr_movement_by_customer_by_week
where date_week >>= '2020-10-01'
and sales_support_type_ending='self_serve'
group by 1,2,3,4
union all 
select
date_month as the_date,
'Monthly' as period_length,
organization_id,
plan_interval,
sum(mrr_net_change) as mrr_change,
sum(mrr_new) as mrr_new,
sum(mrr_expansion) as mrr_expansion,
sum(mrr_contraction) as mrr_contraction,
sum(mrr_churn) as mrr_churn,
sum(mrr_reactivation) as mrr_reactivation,
sum(mrr_starting) as mrr_starting,
sum(seats_churn) as seats_churn,
sum(seats_contraction) as seats_contraction
from analytics.analytics.fact_mrr_movement_by_customer_by_month
where date_month >>= '2020-10-01'
and sales_support_type_ending='self_serve'
group by 1,2,3,4
select
d.*,
trim(replace(r.value,'|',',')) as selected_reason
from analytics.analytics.staging_website_workspace_downgraded_with_reason d,
lateral split_to_table(replace(selected_reasons,'This is temporary, I','This is temporary| I'), ',') as r
with invited_via_link as (
    select 
    i.inviter_id as inviter_user_id,
    i.organization_id,
    i.role as invitee_role,
    f.email as invitee_email,
    min(a.segment_timestamp_utc) as segment_timestamp_utc
    from analytics.analytics.base_website_user_copied_invite_link c
    join analytics.analytics.base_app_invite_link i
        on i.inviter_id::varchar = c.user_id::varchar
        and date_trunc('minute',c.segment_timestamp_utc) = date_trunc('minute',i.created_at)
    join analytics.analytics.base_nodejs_invite_link_accessed a
        on a.invite_link_id = i.invite_link_id
    join analytics.analytics.fact_user f
        on f.user_id = a.user_id
    group by 1, 2, 3, 4
),

paid_self_serve_orgs as (
    select
        organization_id, date_day, mrr_ending as mrr, seats_ending as seats
    from analytics.analytics.fact_mrr_movement_by_customer_by_day
    where date_day >>= '2022-01-01'
    and mrr>>0
),

slack_sent as (
    select
        s.segment_timestamp_utc,
        s.user_id as inviter_user_id,
        s.video_workspace_id as organization_id,
        'slack invites' as source,
        parse_json(f1.value):email::varchar as invitee_email,
        parse_json(f1.value):name::varchar as name, --noqa
        parse_json(f1.value):orgInviteToken::varchar as org_invite_token,
        parse_json(f1.value):slackId::varchar as slack_id,
        parse_json(f1.value):orgRole::varchar as invitee_role
    from analytics.analytics.staging_integrations_slack_app_invite_nudge_invites_sent as s,
    lateral flatten(input =>> parse_json(invitees)) as f1
),


unioned_invites as (
    select 
        inviter_user_id, organization_id, invitee_email, invitee_member_role as invitee_role, segment_timestamp_utc,
    null as invite_accepted, case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from analytics.analytics.base_nodejs_teammates_invited
        union all
    select 
        inviter_user_id, organization_id, invitee_email, invitee_role, segment_timestamp_utc,
    null as invite_accepted, case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from invited_via_link
        union all
    select 
        s.inviter_user_id, s.organization_id, s.invitee_email, s.invitee_role,s.segment_timestamp_utc,
        case when sa.org_invite_token is not null then 'Y' else 'N' end as invite_accepted,
        case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from slack_sent s
    left join analytics.analytics.staging_nodejs_slack_invite_nudge_dm_accepted as sa
        on s.org_invite_token = sa.org_invite_token
)

select
date_trunc('week', u.segment_timestamp_utc) as invite_week,
--date_trunc('month',segment_timestamp_utc) as invite_month,
is_paid_invite,
case when p.organization_id is not null then 'Yes' else 'No' end as is_paid_org,
count(u.invitee_email) as invite_count,
count(case 
        when accept.invitee_email is not null then u.invitee_email 
        -- when coalesce(u.invite_accepted, 'N') = 'Y' then u.invitee_email
      end) as accepted_invite_count
from unioned_invites u
left join paid_self_serve_orgs p
    on p.organization_id = u.organization_id
    and p.date_day = date(u.segment_timestamp_utc)
left join analytics.analytics.fact_invitee_funnel as accept
    on u.invitee_email = accept.invitee_email
    and u.organization_id::varchar = accept.organization_id::varchar
    and accept.invitee_funnel_step = 'invite accepted'
    and accept.invitee_funnel_step_timestamp >>= u.segment_timestamp_utc
where u.segment_timestamp_utc>>= '2022-01-01'
and u.inviter_user_id not in ('14644139','9767154','11376952')
group by 1,2,3
with first_paying_week as (
select
    organization_id,
    plan_interval,
    min(date_week) as first_paid_week
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
where mrr_ending>>0
group by 1,2
)
, first_active_week as (
    select
        organization_id,
        plan_interval,
        date_trunc('week', min(first_active_day)) as first_active_week
    from analytics.analytics.fact_mrr_by_subscription_by_day
    group by 1,2
)
, orgs_per_start_week as (
select
    first_paid_week,
    plan_interval,
    count(organization_id) as cohort_org_size
from first_paying_week
group by 1,2
)
select 
datediff('week',p.first_paid_week, date_week) as weeks_since_start,
a.first_active_week,
p.first_paid_week,
date_week,
m.organization_id,
m.organization_type,
m.plan_interval,
sales_support_type_ending as sales_support_type,
mrr_ending as mrr,
seats_ending as seats,
mrr_net_change_category as customer_change_category,
case when mrr_ending>>0 then 'Y' else 'N' end as is_paid_yn,
case when mrr_ending=0 then 'Y' else 'N' end as is_churned_yn,
o.cohort_org_size
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week m
join first_paying_week p
    on m.organization_id = p.organization_id
    and m.date_week >>= p.first_paid_week
    and m.plan_interval = p.plan_interval
join orgs_per_start_week o
    on o.first_paid_week = p.first_paid_week
    and o.plan_interval = p.plan_interval
join first_active_week a
    on m.organization_id = a.organization_id
    and m.plan_interval = a.plan_interval
with requests as (
select distinct
    u.user_id,
    u.organization_id,
    u.upgrade_request_id,
    first_value(r.role) over (partition by u.upgrade_request_id order by u.segment_timestamp_utc) as role,
    first_value(u.segment_timestamp_utc) over (partition by u.upgrade_request_id order by u.segment_timestamp_utc) as request_time_utc
from ANALYTICS.analytics.base_nodejs_request_to_upgrade_workspace u
join analytics.analytics.user_role_by_day r
        on r.user_id = u.user_id
        and r.date_day = dateadd('day',-1,date(u.segment_timestamp_utc))
where u.upgrade_type='role'
    and r.role in ('creator_lite','viewer')
)
, approvals as (
select distinct
    requesting_user_id,
    user_id as approving_user_id,
    organization_id,
    upgrade_request_id,
    first_value(segment_timestamp_utc) over (partition by upgrade_request_id order by segment_timestamp_utc) as approval_time_utc
from analytics.analytics.base_nodejs_approve_role_upgrade_request
)
, role_changes as (
select
    user_id,
    organization_id,
    previous_role,
    new_role,
    source,
    segment_timestamp_utc as role_update_utc
from analytics.analytics.base_nodejs_membership_role_updated
where source != 'unknown'
)
select
r.user_id,
r.organization_id,
r.upgrade_request_id,
r.role,
r.request_time_utc,
a.approval_time_utc,
a.approving_user_id,
c.previous_role,
c.new_role,
c.source,
c.role_update_utc,
row_number() over (partition by r.upgrade_request_id order by role_update_utc) as rnk
from requests r
left join role_changes c
    on c.user_id = r.user_id
    and c.organization_id = r.organization_id
    and c.previous_role = r.role
    and c.role_update_utc >>= r.request_time_utc
left join approvals a
    on r.user_id = a.requesting_user_id
    and r.upgrade_request_id = a.upgrade_request_id
    and date_trunc('min',c.role_update_utc) = date_trunc('min',a.approval_time_utc)
where r.request_time_utc >>= '2021-01-01'
qualify rnk=1
with first_paying_month as (
select
    organization_id,
    plan_interval,
    min(date_month) as first_paid_month
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
where mrr_ending>>0
group by 1,2  
)
, orgs_per_start_month as (
select
    first_paid_month,
    plan_interval,
    count(organization_id) as cohort_org_size
from first_paying_month
group by 1,2
)
, final_data as (
select 
datediff('month',p.first_paid_month, date_month) as months_since_start,

p.first_paid_month,
date_month,
m.organization_id,
organization_type,
m.plan_interval,
sales_support_type_ending as sales_support_Type,
mrr_ending as mrr,
seats_ending as seats,
mrr_net_change_category as customer_change_category,
case when mrr_ending>>0 then 'Y' else 'N' end as is_paid_yn,
case when mrr_ending=0 then 'Y' else 'N' end as is_churned_yn,
o.cohort_org_size
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month m
join first_paying_month p
    on m.organization_id = p.organization_id
    and m.date_month >>= p.first_paid_month
join orgs_per_start_month o
    on o.first_paid_month = p.first_paid_month
    and o.plan_interval = p.plan_interval
)
select * from final_data
select 
s.*,
o.organization_id,
w_start.date_day as start_day,
w_start.mapped_plan_type as start_type,
w_end.date_day as end_day,
w_end.mapped_plan_type as end_type,
case when w_end.mapped_plan_type in ('enterprise','business') then 'Y' else 'N' end as converted_yn
from analytics.analytics.staging_stripe_trial_starts s
join analytics.analytics.fact_organization o
    on o.external_customer_id = s.customer_id
join analytics.analytics.fact_workspace_by_day w_start
    on w_start.organization_id = o.organization_id
    and w_start.date_day = s.trial_start_date_utc
join analytics.analytics.fact_workspace_by_day w_end
    on w_end.organization_id = o.organization_id
    and w_end.date_day = dateadd('day',1,s.trial_end_date_utc)
where s.trial_start_date_utc >>= '2022-02-01'
and s.trial_end_date_utc << current_date()
2023-10-19 10:53:01,785 — exposurescrawler — DEBUG —  ❌ Monetization KPIs: found no models
with date_boundaries as (
select
    'month' as window,
    date_trunc('month', date_day) as the_date,
    min( case when date_trunc('week', date_day) >>= date_trunc('month', date_day) 
            then date_trunc('week', date_day) end) as first_week,
    max( date_trunc('week', date_day)) as last_week
from analytics.analytics.days
    where date_day >>= '2022-01-01'
    and date_day <<= dateadd('month', 1, current_date())
    group by 1,2
union all
select
    'quarter' as window,
    date_trunc('quarter', date_day) as the_date,
    min( case when date_trunc('week', date_day) >>= date_trunc('month', date_day) 
            then date_trunc('week', date_day) end) as first_week,
    max( date_trunc('week', date_day)) as last_week
from analytics.analytics.days
    where date_day >>= '2022-01-01'
    and date_day <<= dateadd('month', 1, current_date())
    group by 1,2  
)
, weekly_data as (
    select 
        date_day as date_week,  
        sum(total_active_users) as WAU
    from analytics.analytics.reporting_metric_active_users_unioned 
    where agg_type = 'weekly' 
    and user_classification = 'work' 
    group by date_week
)
, monthly_data as (
    select 
        d.the_date as date_month,
        avg(WAU) as month_WAU
    from weekly_data w
    join date_boundaries d
        on w.date_week >>= d.first_week
        and w.date_week <<= d.last_week
    where w.date_week >>= '2021-12-01'
    and w.date_week << date_trunc('week', current_date())
    and d.window='month'
    group by the_date
),
quarterly_data as (
    select 
        d.the_date as date_quarter,
        avg(WAU) as quarter_WAU
    from weekly_data w
    join date_boundaries d
        on w.date_week >>= d.first_week
        and w.date_week <<= d.last_week
    where w.date_week >>= '2021-12-01'
    and w.date_week << date_trunc('week', current_date())
    and d.window='quarter'
    group by the_date
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()
),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Work WAUs'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.month_WAU,
q.quarter_WAU,
yoy.month_WAU as yoy_month_WAU,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Work WAUs'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with traffic_data as (
    select 
        date(event_date_utc) as visit_date, 
        sum(total_visits) as total_visits
    from analytics.analytics.reporting_traffic
    where path_category='marketing_site'
    and event_date_utc >>= dateadd('month',-13,current_date())
    group by 1
)
, views_data as (
    select
        date(f.segment_timestamp_utc) as view_date, 
        count(f.video_id) as total_views,
        count(case when u.user_classification='work' then f.video_id end) as work_views,
        count(case when f.is_logged_in_view=0 and u.user_classification='work' then f.video_id end) as anon_work_views,
        count(case when f.is_logged_in_view=1 and u.user_classification='work' then f.video_id end) as logged_in_work_views
    from analytics.analytics.fact_video_views f
    join analytics.analytics.fact_user u
        on f.owner_id::varchar = u.user_id::varchar
    where f.segment_timestamp_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, vfv_data as (
    select
        date(video_first_view_at_utc) as vfv_date,
        count(video_id) as total_vfvs,
        count(case when u.user_classification='work' then video_id end) as work_vfvs
    from analytics.analytics.fact_recording f
    join analytics.analytics.fact_user u
        on f.user_id::varchar = u.user_id::varchar
    where video_first_view_at_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, total_traffic as (
    select distinct
        t_now.visit_date,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_visits,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_visits 
    from traffic_data t_now
    left join traffic_data t_wow
        on t_now.visit_date = dateadd('day',7,t_wow.visit_date)
    left join traffic_data t_yoy
        on t_now.visit_date = dateadd('year',1,t_yoy.visit_date)
)
, total_views as (
    select distinct
        t_now.view_date,
        sum(t_now.total_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_views,
        sum(t_now.total_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_views,
        sum(t_now.work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_views,  
        sum(t_now.work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_work_views, 
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_anon_work_views, 
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_anon_work_views, 
        sum(t_now.logged_in_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_logged_in_work_views,
        sum(t_wow.logged_in_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_logged_in_work_views,
        sum(t_yoy.logged_in_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_logged_in_work_views , 
        sum(t_now.logged_in_work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_logged_in_work_views,
        sum(t_wow.logged_in_work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_logged_in_work_views,
        sum(t_yoy.logged_in_work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_logged_in_work_views
    from views_data t_now
    left join views_data t_wow
        on t_now.view_date = dateadd('day',7,t_wow.view_date)
    left join views_data t_yoy
        on t_now.view_date = dateadd('year',1,t_yoy.view_date)
)
, total_vfvs as (
    select distinct
        t_now.vfv_date,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_vfvs,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_vfvs,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_vfvs  ,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_work_vfvs
    from vfv_data t_now
    left join vfv_data t_wow
        on t_now.vfv_date = dateadd('day',7,t_wow.vfv_date)
    left join vfv_data t_yoy
        on t_now.vfv_date = dateadd('year',1,t_yoy.vfv_date)
)
, final_data as (
select 'Website Traffic' as metric, visit_date as the_date, t7_total_visits as t7_value, wow_total_visits as wow_value, yoy_total_visits as yoy_value,
            t30_total_visits as t30_value, wow30_total_visits as wow30_value, yoy30_total_visits as yoy30_value from total_traffic
    union all
select 'Total Views' as metric, view_date as the_date, t7_total_views as t7_value, wow_total_views as wow_value, yoy_total_views as yoy_value,
            t30_total_views as t30_value, wow30_total_views as wow30_value, yoy30_total_views as yoy30_value from total_views
    union all
select 'Work Views' as metric, view_date as the_date, t7_work_views as t7_value, wow_work_views as wow_value, yoy_work_views as yoy_value,
             t30_work_views as t30_value, wow30_work_views as wow30_value, yoy30_work_views as yoy30_value from total_views
    union all
select 'Anon Work Views' as metric, view_date as the_date, t7_anon_work_views as t7_value, wow_anon_work_views as wow_value, yoy_anon_work_views as yoy_value,
        t30_anon_work_views as t30_value, wow30_anon_work_views as wow30_value, yoy30_anon_work_views as yoy30_value from total_views
    union all
select 'Logged In Work Views' as metric, view_date as the_date, t7_logged_in_work_views as t7_value, wow_logged_in_work_views as wow_value, yoy_logged_in_work_views as yoy_value,
       t30_logged_in_work_views as t30_value, wow30_logged_in_work_views as wow30_value, yoy30_logged_in_work_views as yoy30_value from total_views
    union all
select 'Total VFVs' as metric, vfv_date as the_date, t7_total_vfvs as t7_value, wow_total_vfvs as wow_value, yoy_total_vfvs as yoy_value,
    t30_total_vfvs as t30_value, wow30_total_vfvs as wow30_value, yoy30_total_vfvs as yoy30_value from total_vfvs
    union all
select 'Work VFVs' as metric, vfv_date as the_date, t7_work_vfvs as t7_value, wow_work_vfvs as wow_value, yoy_work_vfvs as yoy_value,
    t30_work_vfvs as t30_value, wow30_work_vfvs as wow30_value, yoy30_work_vfvs as yoy30_value from total_vfvs
)
select * from final_data
where the_date << current_date()
---- MRR query

with net_monthly_mrr as (
    select
        date_month,
        coalesce(sum(mrr_starting),0) mrr_starting,
        coalesce(sum(case when mrr_net_change_category = 'new' then mrr_net_change end),0) mrr_new,
        coalesce(sum(case when mrr_net_change_category = 'change_from_sales_led' then mrr_net_change end),0) mrr_from_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'reactivation' then mrr_net_change end),0) mrr_reactivation,
        coalesce(sum(case when mrr_net_change_category = 'expansion' then mrr_net_change end),0) mrr_expansion,
        coalesce(sum(case when mrr_net_change_category = 'contraction' then mrr_net_change end),0) mrr_contraction,
        coalesce(sum(case when mrr_net_change_category = 'change_to_sales_led' then mrr_net_change end),0) mrr_to_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'churn' then mrr_net_change end),0) mrr_churn,
        coalesce(sum(mrr_ending),0) mrr_ending
    from analytics.analytics.fact_self_serve_mrr_by_customer_by_month
    group by 1
),

net_monthly_mrr_with_financial_metrics as (
    select
        *,
        -- BEFORE
        -- mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        -- mrr_expansion as mrr_expansion_finance,
        -- mrr_contraction + mrr_churn + mrr_to_sales_led as mrr_churn_finance,
        -- mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        -- mrr_new_finance + mrr_expansion_finance as mrr_total_finance

        -- AFTER
        mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        mrr_expansion as mrr_expansion_finance,
        mrr_contraction + mrr_churn as mrr_churn_finance,
        mrr_new_finance + mrr_expansion_finance + mrr_churn_finance + mrr_to_sales_led as mrr_net_new_finance,
        mrr_new_finance + mrr_expansion_finance as mrr_total_finance,
        mrr_to_sales_led as mrr_graduate_to_sales
    from net_monthly_mrr
)
-- select * from net_monthly_mrr_with_financial_metrics where date_month='2022-09-01'

, dates as (
    select 
        date_trunc('month',date_day) as date_month,
        max(case when date_day << current_date() then date_day end) as month_last_day,
        max(date_part('day',case when date_day << current_date() then date_day end)) as month_last_day_num,
        max(date_part('day',date_day)) as max_month_day_num,
        month_last_day_num/max_month_day_num as percent_thru_month
    from analytics.analytics.days
    group by 1
)

, monthly_data as (   
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Net New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_net_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Total New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_total_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'New + Reactivation' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Expansion' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_expansion_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Churn' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_churn) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Contraction' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_contraction) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Graduate to Sales' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_graduate_to_sales) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
)
, quarterly_data as (
    select
        the_quarter,
        channel,
        max(month_last_day) as quarter_last_day,
        sum(value) as value
    from monthly_data
    group by 1,2
)
, monthly_goals_data as (
    select
        case
            when metric = 'Net New' then 'Net New ARR' 
            when metric = 'New Revenue' then 'Total New ARR'
            when metric = 'New Revenue (New + Reactivation)' then 'New + Reactivation' -- part of 'Total New ARR'
            when metric = 'Expansion Revenue' then 'Expansion' -- part of 'Total New ARR'
            when metric = 'Churn Revenue' then 'Churn' -- part of 'Total New ARR'
            when metric = 'Contraction Revenue' then 'Contraction' -- part of 'Total New ARR'
            when metric = 'Contraction and Churn Revenue' then 'Churn + Contraction'
        end as clean_metric,
        *
    from analytics.analytics.reporting_score_card_goals
    where metric not in ('AWS','Signups')
)
, quarter_goals_data as (
    select
        quarter,
        model_grouping,
        clean_metric,
        sum(metric_value) as metric_value
    from monthly_goals_data
    group by 1, 2, 3
)
select
coalesce(g.clean_metric, m.channel) as channel,
m.the_month,
m.the_quarter,
dateadd('day',-1,dateadd('quarter',1,m.the_quarter)) as quarter_max_day,
coalesce(g.metric_value,m.value) as month_goal,
m.value as month_actual,
m.value/nullif(m.percent_thru_month,0) as month_pacing,
m.value/nullif(month_goal * m.percent_thru_month,0) as month_pacing_pct,
last_year.value as last_year_actual,
(month_pacing/nullif(last_year.value,0)) - 1 as YoY_percent,
coalesce(qg.metric_value,q.value) as quarter_goal,
q.value as quarter_actual,
datediff('day',q.the_quarter, q.quarter_last_day)/nullif(datediff('day', q.the_quarter, quarter_max_day),0) as percent_thru_quarter,
q.value/nullif(quarter_goal * percent_thru_quarter,0) as quarter_pacing
from monthly_data m
left join monthly_goals_data g
    on g.month = m.the_month
    and m.channel = g.clean_metric
left join quarter_goals_data qg
    on qg.quarter = g.quarter
    and qg.model_grouping = g.model_grouping
    and qg.clean_metric = g.clean_metric
join quarterly_data q
    on m.the_quarter = q.the_quarter
    and m.channel = q.channel
left join monthly_data as last_year
    on m.the_month = dateadd('year',1,last_year.the_month)
    and m.channel = last_year.channel
with monthly_data as (
    select 
        date_day as date_month, 
        date_trunc('quarter', date_day) as date_quarter,
        sum(total_video_first_views) as month_vfv
    from analytics.analytics.reporting_metric_video_first_views_unioned
    where agg_type='monthly'
        and user_classification = 'work' 
    group by 1, 2
),
quarterly_data as (
    select 
        date_day as date_quarter, 
        sum(total_video_first_views) as quarter_vfv
    from analytics.analytics.reporting_metric_video_first_views_unioned
    where agg_type='quarterly'
        and user_classification = 'work' 
    group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()
),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        sum(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Work VFVs'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.month_vfv as month_vfv,
q.quarter_vfv as quarter_vfv,
yoy.month_vfv as yoy_month_vfv,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Work VFVs'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with conversions as (
    -- find organizations that converted, and the first day they were paid
select 
    a.organization_id, min(date_day) as conversion_date
  from analytics.analytics.fact_mrr_movement_by_customer_by_day a
  where mrr_net_change_category in ('new')
  and sales_support_type_ending = 'self_serve'
  and date_day >> '2021-01-01'
  and mrr_new>>0
    group by 1
),
new_conversions_data as(
    -- find all organizations and left join to conversion data
    select 
        o.organization_id, o.created_at, c.conversion_date
    from analytics.analytics.fact_organization o
    left join conversions c
        on c.organization_id = o.organization_id
    where o.created_at >>= '2021-01-01'
),
daily_data as (
    -- for each day, look at the orgs that were created in the 30-day window from 51 days ago to 21 days ago
    -- which is 30 days of orgs that have had the full 21 days to convert as of that day
    select
        d.date_day as the_date,
        date_trunc('month', d.date_day) as signup_month,
        date_trunc('quarter', d.date_day) as signup_quarter,
        count(n.organization_id) as org_count,
        count(case when n.conversion_date is not null then n.organization_id end) as converted_org_count,
        count(case when datediff(day, n.created_at, n.conversion_date) <<= 21 then n.organization_id end) as converted_21d_org_count,
        converted_21d_org_count/org_count as conv_rate_21d,
        min(n.created_at) as min_created_at,
        max(n.created_at) as max_created_at,
        row_number() over (partition by signup_month order by d.date_day desc) as month_rnk,
        row_number() over (partition by signup_quarter order by d.date_day desc) as quarter_rnk
    from analytics.analytics.days d
    left join new_conversions_data n
        on n.created_at >>= dateadd('day', -51, d.date_day)
        and n.created_at <<= dateadd('day', -21, d.date_day)
    where d.date_day >>= '2021-08-01'
    and d.date_day << current_date()
    group by 1

),
monthly_data as (
    select
        now.signup_month,
        now.the_date,
        now.org_count,
        now.converted_org_count,
        now.converted_21d_org_count,
        now.conv_rate_21d,
        yoy.org_count as yoy_org_count,
        yoy.converted_org_count as yoy_converted_org_count,
        yoy.converted_21d_org_count as yoy_converted_21d_org_count,
        yoy.conv_rate_21d  as yoy_conv_rate_21d       
    from daily_data as now
    left join daily_data as yoy
        on now.the_date = dateadd('y',1,yoy.the_date)
    where now.month_rnk=1
),
quarterly_data as (
    select
        signup_quarter,
        sum(org_count) as org_count,
        sum(converted_org_count) as converted_org_count,
        sum(converted_21d_org_count) as converted_21d_org_count,
        sum(converted_21d_org_count)/sum(org_count) as conv_rate_21d
    from daily_data
    where month_rnk=1
    group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = '21d Conversion Rate'
    group by 1
)
select
m.signup_month,
q.signup_quarter,
m.org_count as month_org_count,
m.converted_21d_org_count as month_converted_21d_org_count,
m.conv_rate_21d as month_conv_rate_21d,
q.org_count as quarter_org_count,
q.converted_21d_org_count as quarter_converted_21d_org_count,
q.conv_rate_21d as quarter_conv_rate_21d,
m.yoy_org_count,
m.yoy_converted_21d_org_count,
m.yoy_conv_rate_21d,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
-- left join monthly_data yoy
--     on m.signup_month = dateadd('y',1,yoy.signup_month)
left join quarterly_data q
    on date_trunc('quarter', m.signup_month) = q.signup_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.signup_month = mg.month
    and mg.metric='21d Conversion Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.signup_month) = qg.the_quarter
cross join max_date_cte
where m.signup_month >>= '2022-01-01'
with daily_data as (
    -- for each day, look at the prior 28d rolling window
    -- get a distinct count of paying orgs and expanding orgs
    select
        d.date_day as the_date,
        date_trunc('month', d.date_day) as date_month,
        date_trunc('quarter', d.date_day) as date_quarter,
        count(distinct case when mrr_starting >> 0 then organization_id end) as paying_org_count,
        count(distinct case when mrr_expansion >> 0 then organization_id end) as expanding_org_count,
        row_number() over (partition by date_month order by d.date_day desc) as month_rnk,
        row_number() over (partition by date_quarter order by d.date_day desc) as quarter_rnk
    from analytics.analytics.days d
    left join analytics.analytics.fact_mrr_movement_by_customer_by_day m
        on m.date_day <<= d.date_day
        and m.date_day >>= dateadd('day', -28, d.date_day)
    where d.date_day >>= '2021-08-01'
    and d.date_day << current_date()
    group by 1, 2, 3      
)
, monthly_data as (
    select
        now.date_month,
        now.the_date,
        now.paying_org_count,
        now.expanding_org_count,
        now.expanding_org_count/now.paying_org_count as expanding_perc,
        yoy.paying_org_count as yoy_paying_org_count,
        yoy.expanding_org_count as yoy_expanding_org_count,
        yoy.expanding_org_count/yoy.paying_org_count as yoy_expanding_perc
    from daily_data as now
    left join daily_data as yoy
        on now.the_date = dateadd('y',1,yoy.the_date)
    where now.month_rnk=1
)
, quarterly_data as (
    select
        date_quarter,
        sum(paying_org_count) as paying_org_count_quarter,
        sum(expanding_org_count) as expanding_org_count_quarter,
        sum(expanding_org_count)/sum(paying_org_count) as expanding_perc_quarter
    from daily_data
    where month_rnk=1
    group by 1
)
, max_date_cte as (

    select 
        to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

)
, quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Expanding Workspaces Rate'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.paying_org_count as month_org_count,
m.expanding_org_count as month_expanding_org_count,
m.expanding_perc as month_expanding_perc,
q.paying_org_count_quarter as quarter_org_count,
q.expanding_org_count_quarter as quarter_expanding_org_count,
q.expanding_perc_quarter as quarter_expanding_perc,
m.yoy_paying_org_count as yoy_org_count,
m.yoy_expanding_org_count as yoy_expanding_org_count,
m.yoy_expanding_perc as yoy_expanding_perc,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Expanding Workspaces Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
2023-10-19 10:53:01,815 — exposurescrawler — DEBUG —  ❌ Self-Serve Pacing Scorecard: found no models
with experiment_list as (
select
*
from ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
where end_date >>= dateadd('month', -6, current_date())

)
, non_total_kpi as (
select
r.experiment_name, r.metric_name,user_classification, 
replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta::float as delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Y-Pos' 
    when prob_var_beats_con<<=0.05 then 'Y-Neg'
    else 'No' 
end as significant,
LOWER_DELTA_CREDIBLE_INTERVAL, UPPER_DELTA_CREDIBLE_INTERVAL,
is_default_metric,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join experiment_list e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/B'
and is_full_experiment=1
and r.metric_name not like 'Total%'
and (r.metric_name not like 'Average%' or r.metric_name like 'Average Time%')
)
, total_kpi as (
select
r.experiment_name, r.metric_name, user_classification, 
case
    when r.metric_name like 'Average Unique Views per Workspace%' then replace(r.metric_name,'Average Unique Views per Workspace','Workspace with Viewing User')
    when r.metric_name like 'Average VWMs%' then replace(r.metric_name,'Average VWMs','Workspace with VWM')
    when r.metric_name like 'Total Recorder Menu%' then replace(r.metric_name, 'Total Recorder Menu Opens', 'Opened Recorder Menu')
    else replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') 
end as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta::float as delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
annualized_impact,
total_annual_volume,
annualized_impact_percent
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join experiment_list e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/B'
and is_full_experiment=1
and (r.metric_name like 'Total%' or r.metric_name like 'Average%')
and m.simulation_type in  ('permutation', 'gamma')
)

select
n.experiment_name,
n.user_classification,
n.shared_metric_name,
n.control_value as rate_control_value,
n.variant_value as rate_variant_value,
n.control_total_count as rate_control_total_count,
n.variant_total_count as rate_variant_total_count,
n.delta as rate_delta,
n.prob_var_beats_con as rate_prob_var_beats_con,
n.significant as rate_significant,
n.LOWER_DELTA_CREDIBLE_INTERVAL,
n.UPPER_DELTA_CREDIBLE_INTERVAL,
t.control_value as total_control_value,
t.variant_value as total_variant_value,
t.control_total_count as total_control_total_count,
t.variant_total_count as total_variant_total_count,
t.delta as total_delta,
t.prob_var_beats_con as total_prob_var_beats_con,
t.significant as total_significant,
case when n.shared_metric_name like '%exp%' then 'Y' else 'N' end as experiment_length_yn,
n.is_default_metric,
t.annualized_impact,
t.total_annual_volume,
t.annualized_impact_percent,
n.filter_experiment_name
from non_total_kpi n
left join total_kpi t
    on t.experiment_name = n.experiment_name
    and t.user_classification = n.user_classification
    and t.shared_metric_name = n.shared_metric_name
with exp_results as (
select
r.experiment_name, metric_name, user_classification, 
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and e.end_date >>= dateadd('month', -6, current_date())
and is_full_experiment=1
)
, all_percentiles as (
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
where clean_experiment_name not in (select distinct clean_experiment_name
from analytics.analytics.reporting_experiment_ab_metric_percentiles)
union all
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics.analytics.reporting_experiment_ab_metric_percentiles
)
select 
a.clean_experiment_name as experiment_name,
m.clean_metric_name as metric_name,
a.user_classification,
a.percent_group,
case
    when a.percent_group='All Users' then 1
    when a.percent_group='Bottom 10%' then 2
    when a.percent_group='Lower Middle (Middle 11-50%)' then 3
    when a.percent_group='Upper Middle (Middle 51-90%)' then 4
    when a.percent_group='Top 10%' then 5
    when a.percent_group='Top 1%' then 6
end as percent_group_rnk,
a.variant_value,
a.control_value,
a.variant_count,
a.control_count,
a.variant_over_zero,
a.control_over_zero,
case when a.percent_group = 'All Users' then e.variant_base end as variant_base,
case when a.percent_group = 'All Users' then e.control_base end as control_base,
case 
    when a.percent_group = 'All Users' then e.delta 
    when a.control_value=0 then null
    else (a.variant_value - a.control_value)/(a.control_value)
end as delta,
case when a.percent_group = 'All Users' then e.prob_var_beats_con end as prob_var_beats_con,
case when a.percent_group = 'All Users' then e.significant end as significant,
m.default_yn,
e.filter_experiment_name
from all_percentiles a
join analytics.analytics.base_ab_metrics_list m
    on m.metric_col_name = a.metric_col_name
join exp_results e
    on e.experiment_name = a.clean_experiment_name
    and a.user_classification = e.user_classification
    and m.clean_metric_name = e.metric_name
with last_dates as (
    select
        max(r.as_of_date) as last_as_of_date,
        max(r.end_date) as last_end_date,
        max(date(b.end_date)) as expected_last_end_date,
        current_date() as today
    from analytics.analytics.reporting_experiment_ab_bayes_summary r
    join analytics.analytics.base_ab_experiments b
        on b.experiment_name = r.experiment_name
)
select 
*,
datediff('day',last_as_of_date,today) as days_since_as_of,
case
    when expected_last_end_date>>=today then datediff('day',last_end_date,today)
    else 0
end as days_since_end
from last_dates
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
, exp_groups as (
    select
    experiment_flag_name, control_name, count(distinct variant_name)
    from analytics.analytics.staging_ab_experiments_and_holdouts
    where end_date >>= dateadd('month', -6, current_date())
    group by 1,2
    having count(distinct variant_name)>>1
)
, experiment_list as (
select
b.*,
row_number() over (partition by b.experiment_flag_name, b.control_name order by b.variant_name) as exp_number
from analytics.analytics.staging_ab_experiments_and_holdouts b
join exp_groups e
    on b.experiment_flag_name = e.experiment_flag_name
    and b.control_name = e.control_name
where b.end_date >>= dateadd('month', -6, current_date())
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
e.control_name,
e.variant_name,
e.experiment_flag_name,
case when metric_name like '%(1d|7d)%' then 'Y' else 'N' end as longterm_metric,
row_number() over (partition by e.experiment_flag_name, r.metric_name, r.user_classification order by delta desc) as metric_rnk
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join experiment_list e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and is_full_experiment=1
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
case
    when date(e.end_date) >> current_date() then datediff('day',e.start_date,current_date())
    else datediff('day',e.start_date,e.end_date)
end as experiment_days_passed,
e.assignment_level,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and e.end_date >>= dateadd('month', -6, current_date())
2023-10-19 10:53:01,828 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard: found no models
SELECT
distinct 
o.SALES_SUPPORT_TYPE,
invoices.CREATED_AT_UTC,
DUE_DATE_UTC,
invoices.CUSTOMER_ID,
invoices.SUBSCRIPTION_ID,
base.DESCRIPTION,
invoices.invoice_date_utc,
sp.name as plan_name,
sub.plan_id,
sub.PLAN_INTERVAL,
invoices.INVOICE_ID,
INVOICE_NUMBER,
base.IS_PAID,
invoices.STATUS,
o.organization_id,
o.organization_name,
acc.account_id,
exc.name as account_executive_name,
acc.account_name,
invoices.AMOUNT_DUE,
datediff('day', DATE(base.DUE_DATE_UTC), current_date) as days_overdue,
case when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 0 then base.AMOUNT_DUE
else 0
end as "Open Invoices",

case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 90 then base.AMOUNT_DUE
else 0
end as "AR_aging_>>90",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 90
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 60 then base.AMOUNT_DUE
else 0
end as "AR_aging_90_60",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 60
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 30 then base.AMOUNT_DUE
else 0
end as "AR_aging_60_30",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 30 
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 0 then base.AMOUNT_DUE
else 0
end as "AR_aging_<<30",
-- csm info
csm.name as csm_name,
csm.username as csm_email
FROM
ANALYTICS.ANALYTICS.STRIPE_INVOICES invoices
join ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES base on base.invoice_id = invoices.invoice_id
JOIN ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS customers on invoices.CUSTOMER_ID = customers.CUSTOMER_ID
left outer JOIN ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS as sub on invoices.SUBSCRIPTION_ID = sub.SUBSCRIPTION_ID
left outer join ANALYTICS.ANALYTICS.stripe_plans sp on sp.plan_id = sub.plan_id
LEFT OUTER JOIN analytics.analytics.fact_organization as o on invoices.customer_id = o.external_customer_id
left outer join analytics.analytics.staging_salesforce_workspace w on w.loom_workspace_id  = o.organization_id
left outer join analytics.staging_salesforce_account as acc on w.account_id = acc.account_id 
left outer join analytics.base_salesforce_user as csm on acc.customer_success_manager = csm.user_id and csm.is_active = 'TRUE'
left outer join analytics.base_salesforce_user as exc on acc.account_executive = exc.user_id --and exc.is_active = 'TRUE'

WHERE
base.IS_PAID = 'false'
AND invoices.STATUS = 'open'
order by invoices.CUSTOMER_ID, invoices.INVOICE_ID
2023-10-19 10:53:01,831 — exposurescrawler — DEBUG —  ❌ Sales Led Accounts Receivables Report: found no models
with non_total_kpi as (
select
r.experiment_name, r.metric_name,user_classification, 
replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Y-Pos' 
    when prob_var_beats_con<<=0.05 then 'Y-Neg'
    else 'No' 
end as significant,
LOWER_DELTA_CREDIBLE_INTERVAL, UPPER_DELTA_CREDIBLE_INTERVAL,
is_default_metric
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/A'
and is_full_experiment=1
and r.metric_name not like 'Total%'
and (r.metric_name not like 'Average%' or r.metric_name like 'Average Time%')
)
, total_kpi as (
select
r.experiment_name, r.metric_name, user_classification, 
case
    when r.metric_name like 'Average Unique Views per Workspace%' then replace(r.metric_name,'Average Unique Views per Workspace','Workspace with Viewing User')
    when r.metric_name like 'Average VWMs%' then replace(r.metric_name,'Average VWMs','Workspace with VWM')
    else replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') 
end as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
annualized_impact
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/A'
and is_full_experiment=1
and (r.metric_name like 'Total%' or r.metric_name like 'Average%')
and m.simulation_type in  ('permutation', 'gamma')
)

select
n.experiment_name,
n.user_classification,
n.shared_metric_name,
n.control_value as rate_control_value,
n.variant_value as rate_variant_value,
n.control_total_count as rate_control_total_count,
n.variant_total_count as rate_variant_total_count,
n.delta as rate_delta,
n.prob_var_beats_con as rate_prob_var_beats_con,
n.significant as rate_significant,
n.LOWER_DELTA_CREDIBLE_INTERVAL,
n.UPPER_DELTA_CREDIBLE_INTERVAL,
t.control_value as total_control_value,
t.variant_value as total_variant_value,
t.control_total_count as total_control_total_count,
t.variant_total_count as total_variant_total_count,
t.delta as total_delta,
t.prob_var_beats_con as total_prob_var_beats_con,
t.significant as total_significant,
case when n.shared_metric_name like '%exp%' then 'Y' else 'N' end as experiment_length_yn,
n.is_default_metric,
t.annualized_impact
from non_total_kpi n
left join total_kpi t
    on t.experiment_name = n.experiment_name
    and t.user_classification = n.user_classification
    and t.shared_metric_name = n.shared_metric_name
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
, exp_groups as (
    select
    experiment_flag_name, control_name, count(distinct variant_name)
    from analytics.analytics.base_ab_experiments
    group by 1,2
    having count(distinct variant_name)>>1
)
, experiment_list as (
select
b.*,
row_number() over (partition by b.experiment_flag_name, b.control_name order by b.variant_name) as exp_number
from analytics.analytics.base_ab_experiments b
join exp_groups e
    on b.experiment_flag_name = e.experiment_flag_name
    and b.control_name = e.control_name
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
e.control_name,
e.variant_name,
e.experiment_flag_name,
case when metric_name like '%(1d|7d)%' then 'Y' else 'N' end as longterm_metric,
row_number() over (partition by e.experiment_flag_name, r.metric_name, r.user_classification order by delta desc) as metric_rnk
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join experiment_list e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
and is_full_experiment=1
with exp_results as (
select
r.experiment_name, metric_name, user_classification, 
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
and is_full_experiment=1
and metric_name not like '%(exp)%'
)
, all_percentiles as (
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
where clean_experiment_name not in (select distinct clean_experiment_name
from analytics.analytics.reporting_experiment_ab_metric_percentiles)
union all
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics.analytics.reporting_experiment_ab_metric_percentiles
)
select 
a.clean_experiment_name as experiment_name,
m.clean_metric_name as metric_name,
a.user_classification,
a.percent_group,
case
    when a.percent_group='All Users' then 1
    when a.percent_group='Bottom 10%' then 2
    when a.percent_group='Lower Middle (Middle 11-50%)' then 3
    when a.percent_group='Upper Middle (Middle 51-90%)' then 4
    when a.percent_group='Top 10%' then 5
    when a.percent_group='Top 1%' then 6
end as percent_group_rnk,
a.variant_value,
a.control_value,
a.variant_count,
a.control_count,
a.variant_over_zero,
a.control_over_zero,
case when a.percent_group = 'All Users' then e.variant_base end as variant_base,
case when a.percent_group = 'All Users' then e.control_base end as control_base,
case 
    when a.percent_group = 'All Users' then e.delta 
    when a.control_value=0 then null
    else (a.variant_value - a.control_value)/(a.control_value)
end as delta,
case when a.percent_group = 'All Users' then e.prob_var_beats_con end as prob_var_beats_con,
case when a.percent_group = 'All Users' then e.significant end as significant,
m.default_yn
from all_percentiles a
join analytics.analytics.base_ab_metrics_list m
    on m.metric_col_name = a.metric_col_name
join exp_results e
    on e.experiment_name = a.clean_experiment_name
    and a.user_classification = e.user_classification
    and m.clean_metric_name = e.metric_name
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
case
    when date(e.end_date) >> current_date() then datediff('day',e.start_date,current_date())
    else datediff('day',e.start_date,e.end_date)
end as experiment_days_passed,
e.assignment_level
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
with last_dates as (
    select
        max(r.as_of_date) as last_as_of_date,
        max(r.end_date) as last_end_date,
        max(date(b.end_date)) as expected_last_end_date,
        current_date() as today
    from analytics.analytics.reporting_experiment_ab_bayes_summary r
    join analytics.analytics.base_ab_experiments b
        on b.experiment_name = r.experiment_name
)
select 
*,
datediff('day',last_as_of_date,today) as days_since_as_of,
case
    when expected_last_end_date>>=today then datediff('day',last_end_date,today)
    else 0
end as days_since_end
from last_dates
2023-10-19 10:53:01,843 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard - A/A Experiments: found no models
select 
*, 
min(date_month) over (partition by customer_id order by date_month) as customer_first_mrr_month
from analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:53:01,844 — exposurescrawler — DEBUG —  ❌ Customer MRR Retention: found no models
select customer_id, min(period_start_utc) period_start, max(period_end_utc) period_end
from analytics.analytics.stripe_subscription_events
group by customer_id
2023-10-19 10:53:01,845 — exposurescrawler — DEBUG —  ❌ Customer Balance as of Date: found no models
with monthly_data as (
    select
        date_month,
        count(case when mrr_starting >> 0 then organization_id end) as paying_org_count,
        count(case when mrr_expansion >> 0 then organization_id end) as expanding_org_count,
        expanding_org_count/paying_org_count as expanding_perc
    from analytics.analytics.fact_mrr_movement_by_customer_by_month
    where date_month >>= '2021-01-01'
    group by 1
)
, quarterly_data as (
    select
        date_trunc('quarter', date_month) as date_quarter,
        sum(paying_org_count) as paying_org_count_quarter,
        sum(expanding_org_count) as expanding_org_count_quarter,
        expanding_org_count_quarter/paying_org_count_quarter as expanding_perc_quarter
    from monthly_data
    group by 1
)
, max_date_cte as (

    select 
        to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

)
, quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Expanding Workspaces Rate'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.paying_org_count as month_org_count,
m.expanding_org_count as month_expanding_org_count,
m.expanding_perc as month_expanding_perc,
q.paying_org_count_quarter as quarter_org_count,
q.expanding_org_count_quarter as quarter_expanding_org_count,
q.expanding_perc_quarter as quarter_expanding_perc,
yoy.paying_org_count as yoy_org_count,
yoy.expanding_org_count as yoy_expanding_org_count,
yoy.expanding_perc as yoy_expanding_perc,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Expanding Workspaces Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with topline as (
select 'VFV' as metric_type, total_video_first_views as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
union all 
select 'Views' as metric_type, total_views as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_video_views_unioned
union all 
select 'Signups' as metric_type, total_signups as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_signups_unioned
union all
select 'Total Recordings' as metric_type, total_recordings as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_recordings_unioned
union all 
select 'Total Recorders' as metric_type, total_recorders as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_recorders_unioned
union all 
select 'DAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'daily'
union all 
select 'WAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'weekly'
union all 
select 'MAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'monthly'
union all 
select 'Habit' as metric_type, total_habit_moment_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_habit_moment_users_unioned
union all 
select 'AwS' as metric_type, total_activated_work_signups as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_activated_work_signups_unioned
union all
select 'Domain with 7+ WAUs' as metric_type, total_domains_with_7_plus_work_active_users as metric_value, date_day, agg_type, user_classification, '' as country, '' as signup_attribution_type, '' as mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_domain_with_active_users_by_week
union all 
select 'NNARR' as metric_type, net_new_arr as metric_value, date_day, agg_type, '' as user_classification, '' as country, '' as signup_attribution_type, '' as mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_revenue_by_month
)


select * from topline
where date_day >>= '2020-01-01' and date_day <<= current_date()
with net_monthly_mrr as (
    select
        date_month,
        coalesce(sum(mrr_starting),0) mrr_starting,
        coalesce(sum(case when mrr_net_change_category = 'new' then mrr_net_change end),0) mrr_new,
        coalesce(sum(case when mrr_net_change_category = 'change_from_sales_led' then mrr_net_change end),0) mrr_from_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'reactivation' then mrr_net_change end),0) mrr_reactivation,
        coalesce(sum(case when mrr_net_change_category = 'expansion' then mrr_net_change end),0) mrr_expansion,
        coalesce(sum(case when mrr_net_change_category = 'contraction' then mrr_net_change end),0) mrr_contraction,
        coalesce(sum(case when mrr_net_change_category = 'change_to_sales_led' then mrr_net_change end),0) mrr_to_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'churn' then mrr_net_change end),0) mrr_churn,
        coalesce(sum(mrr_ending),0) mrr_ending
    from analytics.analytics.fact_self_serve_mrr_by_customer_by_month
    group by 1
),

net_monthly_mrr_with_financial_metrics as (
    select
        *,
        -- BEFORE
        -- mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        -- mrr_expansion as mrr_expansion_finance,
        -- mrr_contraction + mrr_churn + mrr_to_sales_led as mrr_churn_finance,
        -- mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        -- mrr_new_finance + mrr_expansion_finance as mrr_total_finance

        -- AFTER
        mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        mrr_expansion as mrr_expansion_finance,
        mrr_contraction + mrr_churn as mrr_churn_finance,
        mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        mrr_new_finance + mrr_expansion_finance as mrr_total_finance
    from net_monthly_mrr
)
-- select * from net_monthly_mrr_with_financial_metrics where date_month='2022-09-01'

, dates as (
    select 
        date_trunc('month',date_day) as date_month,
        max(case when date_day << current_date() then date_day end) as month_last_day,
        max(date_part('day',case when date_day << current_date() then date_day end)) as month_last_day_num,
        max(date_part('day',date_day)) as max_month_day_num,
        month_last_day_num/max_month_day_num as percent_thru_month
    from analytics.analytics.days
    group by 1
)

, monthly_data as (   
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Net new ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_net_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Total New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_total_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'New' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Expansion' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_expansion_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Churn ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_churn_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
)
, quarterly_data as (
    select
        the_quarter,
        channel,
        max(month_last_day) as quarter_last_day,
        sum(value) as value
    from monthly_data
    group by 1,2
)
, monthly_goals_data as (
    select
        case
            when metric = 'Net New' then 'Net new ARR' 
            when metric = 'New Revenue' then 'Total New ARR'
            when metric = 'New Revenue (New + Reactivation)' then 'New' -- part of 'Total New ARR'
            when metric = 'Expansion Revenue' then 'Expansion' -- part of 'Total New ARR'
            when metric = 'Contraction and Churn Revenue' then 'Churn ARR'
        end as clean_metric,
        *
    from analytics.analytics.reporting_score_card_goals
    where metric not in ('AWS','Signups')
)
, quarter_goals_data as (
    select
        quarter,
        model_grouping,
        clean_metric,
        sum(metric_value) as metric_value
    from monthly_goals_data
    group by 1, 2, 3
)
select
g.clean_metric as channel,
m.the_month,
m.the_quarter,
dateadd('day',-1,dateadd('quarter',1,m.the_quarter)) as quarter_max_day,
g.metric_value as month_goal,
m.value as month_actual,
m.value/m.percent_thru_month as month_pacing,
m.value/(month_goal * m.percent_thru_month) as month_pacing_pct,
last_year.value as last_year_actual,
(month_pacing/last_year.value) - 1 as YoY_percent,
qg.metric_value as quarter_goal,
q.value as quarter_actual,
datediff('day',q.the_quarter, q.quarter_last_day)/datediff('day', q.the_quarter, quarter_max_day) as percent_thru_quarter,
q.value/(quarter_goal * percent_thru_quarter) as quarter_pacing
from monthly_data m
join monthly_goals_data g
    on g.month = m.the_month
    and m.channel = g.clean_metric
join quarter_goals_data qg
    on qg.quarter = g.quarter
    and qg.model_grouping = g.model_grouping
    and qg.clean_metric = g.clean_metric
join quarterly_data q
    on m.the_quarter = q.the_quarter
    and m.channel = q.channel
left join monthly_data as last_year
    on m.the_month = dateadd('year',1,last_year.the_month)
    and m.channel = last_year.channel
with conversions as (
select 
    a.organization_id, min(date_day) as conversion_date
  from analytics.analytics.fact_mrr_movement_by_customer_by_day a
  where mrr_net_change_category in ('new')
  and sales_support_type_ending = 'self_serve'
  and date_day >> '2021-01-01'
  and mrr_new>>0
    group by 1
),
new_conversions_data as(
    select 
        o.organization_id, o.created_at, c.conversion_date
    from analytics.analytics.fact_organization o
    left join conversions c
        on c.organization_id = o.organization_id
    where o.created_at >>= '2021-01-01'
),
monthly_data as (
select
date_trunc('month', created_at) as signup_month,
count(organization_id) as org_count,
count(case when conversion_date is not null then organization_id end) as converted_org_count,
count(case when datediff(day, created_at, conversion_date) <<= 21 then organization_id end) as converted_21d_org_count,
converted_21d_org_count/org_count as conv_rate_21d
from new_conversions_data
where created_at >>= '2021-09-01'
group by 1
),
quarterly_data as (
select
date_trunc('quarter', created_at) as signup_quarter,
count(organization_id) as org_count,
count(case when conversion_date is not null then organization_id end) as converted_org_count,
count(case when datediff(day, created_at, conversion_date) <<= 21 then organization_id end) as converted_21d_org_count,
converted_21d_org_count/org_count as conv_rate_21d
from new_conversions_data
where created_at >>= '2021-09-01'
group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = '21d Conversion Rate'
    group by 1
)
select
m.signup_month,
q.signup_quarter,
m.org_count as month_org_count,
m.converted_21d_org_count as month_converted_21d_org_count,
m.conv_rate_21d as month_conv_rate_21d,
q.org_count as quarter_org_count,
q.converted_21d_org_count as quarter_converted_21d_org_count,
q.conv_rate_21d as quarter_conv_rate_21d,
yoy.org_count as yoy_org_count,
yoy.converted_21d_org_count as yoy_converted_21d_org_count,
yoy.conv_rate_21d as yoy_conv_rate_21d,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.signup_month = dateadd('y',1,yoy.signup_month)
left join quarterly_data q
    on date_trunc('quarter', m.signup_month) = q.signup_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.signup_month = mg.month
    and mg.metric='21d Conversion Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.signup_month) = qg.the_quarter
cross join max_date_cte
where m.signup_month >>= '2022-01-01'
with traffic_data as (
    select 
        date(event_date_utc) as visit_date, 
        sum(total_visits) as total_visits
    from analytics.analytics.reporting_traffic
    where path_category='marketing_site'
    and event_date_utc >>= dateadd('month',-13,current_date())
    group by 1
)
, views_data as (
    select
        date(f.segment_timestamp_utc) as view_date, 
        count(f.video_id) as total_views,
        count(case when u.user_classification='work' then f.video_id end) as work_views,
        count(case when f.is_logged_in_view=0 and u.user_classification='work' then f.video_id end) as anon_work_views
    from analytics.analytics.fact_video_views f
    join analytics.analytics.fact_user u
        on f.owner_id::varchar = u.user_id::varchar
    where f.segment_timestamp_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, vfv_data as (
    select
        date(video_first_view_at_utc) as vfv_date,
        count(video_id) as total_vfvs,
        count(case when u.user_classification='work' then video_id end) as work_vfvs
    from analytics.analytics.fact_recording f
    join analytics.analytics.fact_user u
        on f.user_id::varchar = u.user_id::varchar
    where video_first_view_at_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, total_traffic as (
    select distinct
        t_now.visit_date,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_visits    
    from traffic_data t_now
    left join traffic_data t_wow
        on t_now.visit_date = dateadd('day',7,t_wow.visit_date)
    left join traffic_data t_yoy
        on t_now.visit_date = dateadd('year',1,t_yoy.visit_date)
)
, total_views as (
    select distinct
        t_now.view_date,
        sum(t_now.total_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_views,
        sum(t_now.work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_views,  
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_anon_work_views  
    from views_data t_now
    left join views_data t_wow
        on t_now.view_date = dateadd('day',7,t_wow.view_date)
    left join views_data t_yoy
        on t_now.view_date = dateadd('year',1,t_yoy.view_date)
)
, total_vfvs as (
    select distinct
        t_now.vfv_date,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_vfvs,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_vfvs  
    from vfv_data t_now
    left join vfv_data t_wow
        on t_now.vfv_date = dateadd('day',7,t_wow.vfv_date)
    left join vfv_data t_yoy
        on t_now.vfv_date = dateadd('year',1,t_yoy.vfv_date)
)
, final_data as (
select 'Website Traffic' as metric, visit_date as the_date, t7_total_visits as t7_value, wow_total_visits as wow_value, yoy_total_visits as yoy_value from total_traffic
    union all
select 'Total Views' as metric, view_date as the_date, t7_total_views as t7_value, wow_total_views as wow_value, yoy_total_views as yoy_value from total_views
    union all
select 'Work Views' as metric, view_date as the_date, t7_work_views as t7_value, wow_work_views as wow_value, yoy_work_views as yoy_value from total_views
    union all
select 'Anon Work Views' as metric, view_date as the_date, t7_anon_work_views as t7_value, wow_anon_work_views as wow_value, yoy_anon_work_views as yoy_value from total_views
    union all
select 'Total VFVs' as metric, vfv_date as the_date, t7_total_vfvs as t7_value, wow_total_vfvs as wow_value, yoy_total_vfvs as yoy_value from total_vfvs
    union all
select 'Work VFVs' as metric, vfv_date as the_date, t7_work_vfvs as t7_value, wow_work_vfvs as wow_value, yoy_work_vfvs as yoy_value from total_vfvs
)
select * from final_data
where the_date << current_date()
2023-10-19 10:53:01,868 — exposurescrawler — DEBUG —  ❌ Topline Metric: found no models
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_TOTAL_VIDEO_SHARED" AS "COUNT_TOTAL_VIDEO_SHARED",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_VIDEO_SHARED" AS "COUNT_UNIQUE_VIDEO_SHARED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED" "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_TOTAL_VIDEO_VIEWED" AS "COUNT_TOTAL_VIDEO_VIEWED",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_VIDEO_VIEWED" AS "COUNT_UNIQUE_VIDEO_VIEWED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED" "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."EVENT_DATE_UTC"  >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_TOTAL_VIDEO_PAGE_VIEWED" AS "COUNT_TOTAL_VIDEO_PAGE_VIEWED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED" "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_INSTALL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."COUNT_APP_INSTALLS" AS "COUNT_APP_INSTALLS"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL" "REPORTING_DAILY_MOBILE_APP_INSTALL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."SIGNUP_REFERRER" AS "SIGNUP_REFERRER",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."COUNT_SIGNUP_STARTS" AS "COUNT_SIGNUP_STARTS",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."COUNT_SIGNUP_COMPLETES" AS "COUNT_SIGNUP_COMPLETES"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL" "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."SIGNIN_REFERRER" AS "SIGNIN_REFERRER",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."COUNT_SIGNIN_STARTS" AS "COUNT_SIGNIN_STARTS",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."COUNT_SIGNIN_COMPLETES" AS "COUNT_SIGNIN_COMPLETES"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL" "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_OPEN"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."COUNT_APP_OPENS" AS "COUNT_APP_OPENS"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN" "REPORTING_DAILY_MOBILE_APP_OPEN"
where "EVENT_DATE_UTC" >>= '2019-12-01' and "EVENT_DATE_UTC" <<= '2030-01-01'
2023-10-19 10:53:01,882 — exposurescrawler — DEBUG —  ❌ Mobile Health Dashboard: found no models
-- Cash flow forecast from subscriptions active and trialing
with calendar_day as (
  select
  date,
    date_part(MONTH, date) as month_num,
    monthname(date) as month_name,
    date_part(YEAR, date) as year
  from
    (
      -- from the start of the previous year to the end of the following year ->> 3 year rolling window
      SELECT dateadd(day,seq8(0), DATE_TRUNC(year, dateadd(year,-1, CURRENT_DATE))) AS date
  FROM table (generator(rowcount =>> (1095)+1))
    )
),
subscriptions as (
  select 
  subscription_id, customer_id, s1.created_at_utc, s1.status as sub_status, s1.start_date_utc as start_date, s1.ended_at_utc as ended_at, --s1.current_period_start_utc, s1.current_period_end_utc,
  cancel_at_date_utc as cancel_at, s1.canceled_at_date_utc as canceled_at, s1.trial_start_utc, s1.trial_end_utc,
    s1.plan_interval, s1.plan_interval_count, s1.billing_cycle_anchor_utc, days_until_due,
           s1.plan_id, s1.plan_name, s1.plan_amount, s1.quantity
  from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" s1
),
refunds as (
    select c.customer_id, inv.subscription_id, c.invoice_id, date(c.refund_created_at_utc) as due_date , date(inv.period_start_utc) as period_start, date(inv.period_end_utc) as period_end, date(c.refund_created_at_utc) as updated_at,  inv.is_paid, c.amount_refunded * -1 as amount, null as quantity
--  c.invoice_id, c.customer_id, date(c.created_at_utc) as date_refunded, c.currency, c.amount_refunded
    from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_CHARGES" c
    left join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_INVOICES" inv on inv.invoice_id = c.invoice_id
    left join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" sub on sub.subscription_id = inv.subscription_id and sub.customer_id = inv.customer_id
    where c.is_livemode = true
  and c.amount_refunded <<>> 0
),
subs as (
  select sub.subscription_id, sub.customer_id, 
  sub.sub_status, date(sub.billing_cycle_anchor_utc) as billing_cycle_anchor, 
  sub.start_date, sub.ended_at, sub.cancel_at, sub.canceled_at,  sub.days_until_due,
  sub.trial_start_utc, sub.trial_end_utc,
  sub.quantity, sub.plan_amount as unit_amount, sub.plan_name, 
  sub.plan_interval as price_interval, sub.plan_interval_count as price_interval_count
  from subscriptions sub
  ),
invoice_items as (
  -- Pending invoice items
  select customer_id, subscription_id, null as invoice_id, date(invoice_date_utc) as due_date, date(period_start_utc) as period_start, date(period_end_utc) as period_end, date(created_at_utc) as updated_at, false as is_paid, sum(amount) as amount, max(quantity) as quantity
    from "ANALYTICS"."ANALYTICS"."STRIPE_INVOICE_ITEM_EVENTS" inv
    where invoice_id is null
  and not exists (select 1 from "ANALYTICS"."ANALYTICS"."STRIPE_INVOICE_ITEM_EVENTS" item where item.invoice_item_id = inv.invoice_item_id and (item.invoice_id is not null or item.event_type = 'invoiceitem.deleted'))
    group by customer_id, subscription_id, date(invoice_date_utc) , date(period_start_utc) , date(period_end_utc) , date(created_at_utc), plan_id
  union 
  -- Actual subscription invoices
  select inv.customer_id, inv.subscription_id, inv.invoice_id, date(inv.due_date_utc) as due_date , date(inv.period_start_utc) as period_start, date(inv.period_end_utc) as period_end, date(inv.updated_at_utc) as updated_at,  inv.is_paid, inv.amount_due as amount, sum(quantity) as quantity
  from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_INVOICES" inv
  join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" sub on sub.subscription_id = inv.subscription_id and sub.customer_id = inv.customer_id
  where inv.subscription_id is not null
  and inv.AMOUNT_DUE >> 0 
  and inv.status not in ('void', 'uncollectible', 'deleted') 
  group by inv.customer_id, inv.subscription_id, inv.invoice_id, date(inv.due_date_utc), date(inv.period_start_utc), date(inv.period_end_utc), date(inv.updated_at_utc),  inv.is_paid, inv.amount_due
  union
  --Refunds
  select customer_id, subscription_id, invoice_id, due_date, period_start, period_end, updated_at, is_paid, amount, quantity
  from refunds
  order by 4
),
actuals as (
    select 'Actuals' as type, inv.subscription_id, inv.customer_id, coalesce(cus.customer_name, cus.email) as customer_name, case when cus.metadata:"Contract" is not null then 'Contract' else 'Self-Serve' end as contract, 
        inv.invoice_id, case when inv.invoice_id is null then due_date + coalesce(subs.days_until_due,0) else case when inv.is_paid then inv.updated_at else inv.due_date end end as date, inv.period_start, inv.period_end, amount as amount, 
        coalesce(inv.quantity, subs.quantity) as quantity,
        subs.plan_name, subs.price_interval, price_interval_count, subs.sub_status
    from invoice_items inv
    join subs on subs.subscription_id = inv.subscription_id
    join "ANALYTICS"."ANALYTICS"."STRIPE_CUSTOMERS" cus on cus.customer_id = inv.customer_id
),
forecast as (
  select 'Forecast' as type, subs.subscription_id, subs.customer_id, coalesce(cus.customer_name, cus.email) as customer_name, case when cus.metadata:"Contract" is not null then 'Contract' else 'Self-Serve' end as contract, subs.sub_status, 
  subs.cancel_at, subs.canceled_at, billing_cycle_anchor,
  subs.plan_name, subs.price_interval, price_interval_count,
  cal.date + coalesce(subs.days_until_due, 0) as date, 
  subs.quantity, subs.quantity * (subs.unit_amount * 0.01) as billable_amount
  --sub.status, count(*)
  from subs
  join "ANALYTICS"."ANALYTICS"."STRIPE_CUSTOMERS" cus on cus.customer_id = subs.customer_id
  join calendar_day cal on cal.date >>= date(subs.billing_cycle_anchor) 
  where ( (subs.cancel_at is null and subs.canceled_at is null) or cal.date << date(coalesce(subs.cancel_at, subs.canceled_at)))
  --and subs.subscription_id in ('sub_1MtZmID0tZaJVqhDlzwIiNFr', 'sub_1MsEJDD0tZaJVqhDZX7ZoQ4u')
  --and cal.date >>= date(subs.current_period_end)
  and date_part(DAY, cal.date) = date_part(DAY, subs.billing_cycle_anchor)  
  and (case when subs.price_interval = 'year' then date_part(MONTH, cal.date) else '1' end) =(case when subs.price_interval = 'year' then date_part(MONTH, subs.billing_cycle_anchor) else '1' end)
  -- bill every 3 months interval
  and case when subs.price_interval_count >> 1 then cast(date_part(MONTH, cal.date) as int) else  0 end in 
    (cast(date_part(MONTH, subs.billing_cycle_anchor) as int), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + subs.price_interval_count, cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + (subs.price_interval_count * 2), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + (subs.price_interval_count * 3), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) - (subs.price_interval_count), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) -(subs.price_interval_count * 2), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) - (subs.price_interval_count * 3), 0)
  ),
consolidated as (  
  select 
  type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, null as invoice_id, date, quantity, billable_amount as amount
  --contract, sub_status, plan_name, date, sum(quantity) seats_count, sum(billable_amount) as cash_to_receive
  from forecast
  union
  select type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, invoice_id, date, quantity, amount
  from actuals 
  )
select type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, invoice_id, date, quantity, amount
  from consolidated
2023-10-19 10:53:01,890 — exposurescrawler — DEBUG —  ❌ Cash Flow Forecast: found no models
-- get data from day of domain conversion
with conversion_data as (
    select date_day as conversion_date_day, mapped_domain, domain_classification, primary_subscription_mapped_plan_name, mrr_ending, seats_ending, sales_support_type
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where date_day = domain_first_mrr_day
)

-- get most recent domain churn day per domain
, domain_last_churn_date as (
    select mapped_domain, max(date_day) as churn_date_day
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where mrr_churn << 0
    group by 1
)

-- get data from most recent domain churn day
, churn_data as (
    select domain_last_churn_date.churn_date_day, domain_last_churn_date.mapped_domain, mrr.domain_classification, mrr.mrr_starting, mrr.seats_starting, mrr.sales_support_type, mrr.primary_subscription_mapped_plan_name
    from analytics.analytics.fact_mrr_movement_by_domain_by_day mrr
    inner join domain_last_churn_date
        on domain_last_churn_date.mapped_domain = mrr.mapped_domain
        and domain_last_churn_date.churn_date_day = mrr.date_day
)

-- get current domain data
, current_data as (
    select date_day, mapped_domain, domain_classification, mrr_ending, seats_ending, sales_support_type, primary_subscription_mapped_plan_name
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where date_day = current_date - 1
)

-- max seats per domain
, max_seats as (
    select mapped_domain, max(seats_ending) as max_seats
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    group by 1
)

, final as (
    select
        conversion_data.mapped_domain
        , conversion_data.domain_classification -- this is updated for all historical records if it ever changes
        , coalesce(current_data.sales_support_type, churn_data.sales_support_type) as sales_support_type
        , case 
            when current_data.date_day is null then 'churned'
            else 'active' 
          end as domain_status
        , conversion_data.conversion_date_day
        , case 
            when domain_status = 'churned' then churn_data.churn_date_day
            else null
          end as churn_date_day
        , case 
            when domain_status = 'active' then datediff('months', conversion_date_day, current_data.date_day) -- currently active tenure
            else datediff('months', conversion_date_day, churn_date_day) -- churn tenure
          end as tenure_months
        -- metrics
        -- mrr
        , conversion_data.mrr_ending as mrr_at_conversion
        , current_data.mrr_ending as mrr_current
        , case 
            when domain_status = 'churned' then churn_data.mrr_starting
          end as mrr_at_churn
        -- seats
        , conversion_data.seats_ending as seats_at_conversion
        , current_data.seats_ending as seats_current
        , case 
            when domain_status = 'churned' then churn_data.seats_starting 
          end as seats_at_churn
        , max_seats.max_seats

    from conversion_data

    left join churn_data
        on churn_data.mapped_domain = conversion_data.mapped_domain

    left join current_data
        on current_data.mapped_domain = conversion_data.mapped_domain

    left join max_seats
        on max_seats.mapped_domain = conversion_data.mapped_domain
)

select *
from final
2023-10-19 10:53:01,895 — exposurescrawler — DEBUG —  ❌ Domain Retention: found no models
with daily_active_users as(
    select *
    from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS

),

fact_user as (
    select *
    from ANALYTICS.ANALYTICS.FACT_USER

),

transcript_accessed as (

    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_ACCESSED

),

video_views as (
    select *
    from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
),

share_page_viewed as (
    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_PAGES
    where name = 'Individual Video'
),

emoji_reactions as
    (
        select *
        from ANALYTICS.ANALYTICS.fact_emoji_reaction
),

comments_created as (

    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_CREATED

),

comment_reply_created  as (
select *
from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_REPLY_CREATED
),

views as (select 'Views' as Source,
                 date(SEGMENT_TIMESTAMP_UTC)  as date,
                 IS_LOGGED_IN_VIEW as is_logged_in,
                 USER_CLASSIFICATION,
                 device_type,
                 country,
                 case
                     when vv.embedded_on is not null and vv.PARENT_LOCATION like '%loom.com/share%' then 'Share Page'
                     when vv.embedded_on is not null and vv.PARENT_LOCATION like '%loom.com%'
                         then 'Embedded Across Loom HQ'
                     when vv.embedded_on is not null then 'Embedded Video'
                     else 'Share Page' end    as Viewed_ON,
                 count(distinct USER_ANON_ID) as users,
                 count(distinct event_id)     as actions
          from video_views vv
          left join fact_user fu on coalesce(vv.user_id, vv.ANONYMOUS_ID)::varchar = fu.user_id::varchar
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and OWNER_ID::varchar <<>>  coalesce(vv.user_id, vv.ANONYMOUS_ID)::varchar -- eliminate self views
          group by 1, 2, 3, 4, 5, 6, 7
),

comments as (
    select 'Comment Created' as Source,
    date(segment_timestamp_utc) as date,
    case when cc.user_id is not null then true else false end as is_logged_in,
    USER_CLASSIFICATION,
    null as device_type,
    country,
    null as Viewed_ON,
    count(distinct coalesce(cc.user_id, cc.ANONYMOUS_ID)) as users,
    count(distinct event_id) as actions
    from comments_created cc
    left join fact_user fu on coalesce(cc.user_id, cc.ANONYMOUS_ID) = fu.user_id
     where (coalesce(domain, 'anon') != 'loom.com' or domain is null)
    group by 1, 2, 3, 4, 5, 6, 7

),

emojis as (select 'Reactions'                                               as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when cc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                      as Viewed_ON,
                  count(distinct coalesce(cc.user_id, cc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                  as actions
           from emoji_reactions cc
                    left join fact_user fu on coalesce(cc.user_id, cc.ANONYMOUS_ID) = fu.user_id
          where (coalesce(domain, 'anon') != 'loom.com' or domain is null)
           group by 1, 2, 3, 4, 5, 6, 7
),

share_page as (select 'Visited Share Page'                                  as Source,
                  date(SEGMENT_TIMESTAMP_UTC)                               as date,
                  case when spv.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(spv.user_id, spv.ANONYMOUS_ID))     as users,
                  count(distinct EVENT_ID)                                          as actions
           from share_page_viewed spv
           left join fact_user fu on coalesce(spv.user_id, spv.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and is_owner = false
           group by 1, 2, 3, 4, 5, 6, 7
),

transcripts as (select 'Transcript Accessed On Share Page'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when ta.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(ta.user_id, ta.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from transcript_accessed ta
           left join fact_user fu on coalesce(ta.user_id, ta.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and current_user_is_owner = false
           group by 1, 2, 3, 4, 5, 6, 7
),
comment_reply_text as (select 'Comment Replies - Text'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when crc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(crc.user_id, crc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from comment_reply_created crc
           left join fact_user fu on coalesce(crc.user_id, crc.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and comment_reply_type = 'text'
           group by 1, 2, 3, 4, 5, 6, 7
),

comment_reply_emoji as (select 'Comment Replies - Emoji'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when crc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(crc.user_id, crc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from comment_reply_created crc
           left join fact_user fu on coalesce(crc.user_id, crc.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and comment_reply_type = 'emojiOnly'
           group by 1, 2, 3, 4, 5, 6, 7
)

select *
from (select *
      from views
      UNION ALL
      select *
      from comments
      UNION ALL
      select *
      from emojis
      UNION ALL
      select *
      from share_page
      UNION ALL
      select *
      from transcripts
      UNION ALL
      select *
      from comment_reply_text
      UNION ALL
      select *
      from comment_reply_emoji      )
where date >>= current_date - 730 and date <<= current_date
select date(timestamp) as date, referral_type, device, started_at, funnel, embedded_on, USER_CLASSIFICATION,
         count(distinct user_anon_id) as users, count(distinct event_id) as events

  from (select (timestamp)                                                                                     as timestamp,
               a.referral_type,
               device,
               started_at,
               funnel,
               embedded_on,
               user_anon_id,
               event_id,
               fu.USER_CLASSIFICATION,
               row_number() over (partition by user_anon_id, date(timestamp) order by user_anon_id, timestamp) as row_num

        from (select funnel,
                     date,
                     USER_ANON_ID,
                     event_id,
                     embedded_on,
                     first_value(referral_type)
                                 IGNORE NULLS over ( partition by (user_anon_id), date order by timestamp asc) as referral_type,
                     first_value(device)
                                 IGNORE NULLS over ( partition by (user_anon_id), date order by timestamp asc) as device,
                     -- num_visits_to_share_page,
                     -- unique_videos,
                     timestamp,
                     max(case when row_number = '1' then funnel else null end)
                         over (partition by user_anon_id, date order by timestamp asc)                            started_at
              from (select *,
                           row_number() over (partition by user_anon_id, date order by user_anon_id, timestamp asc) as row_number,
                           count(distinct funnel) over (partition by user_anon_id)                                  as unique_events_taken_by_user
                    from (select case
                                     when REFERRAL_TYPE = 'Embedded Videos' then 'share_page_view_from_embed'
                                     when REFERRAL_TYPE = 'Slack' then 'share_page_view_from_slack'
                                     else 'share_page_view' end as funnel,
                                 date,
                                 user_anon_id,
                                 embedded_on,
                                 referral_type,
                                 device,
                                 event_id                       as event_id,
                                 video_id                       as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                      AS timestamp
                          from ( (select date(SEGMENT_TIMESTAMP_UTC)                                                                                                          as date,
                                         SEGMENT_TIMESTAMP_UTC,
                                         coalesce(user_id, anonymous_id)                                                                                          as user_anon_id,
                                         null                                                                                                                     as embedded_on,
                                         EVENT_ID                                                                                                                       as event_id,
                                         video_id,
                                         case
                                             when referrer = 'https://www.loom.com/' or
                                                  referrer = 'https://www.loom.com' or
                                                  referrer = 'http://www.loom.com'
                                                 then 'Loom Website Home Page'
                                             when referrer like '%/embed%' then 'Embedded Videos'
                                             when referrer = 'https://www.loom.com/home' then 'Loom HQ'
                                             when referrer = 'https://www.loom.com/looms/archive'
                                                 then 'Loom Archive'
                                             when referrer ilike '%loom.com/looms/videos%'
                                                 then 'Loom Library'
                                             when referrer ilike '%loom.com/share/folder/%' or
                                                  referrer ilike '%loom.com/looms/folders/%'
                                                 then 'Loom Folders'
                                             when referrer = 'https://www.loom.com/history'
                                                 then 'Loom History'
                                             when referrer ilike '%loom.com/oauth-callback%'
                                                 then 'loom.com/oauth-callback'
                                             when referrer ilike '%loom.com/share%' then 'Loom Share Page'
                                             when referrer ilike '%loom.com/tag/' then 'Loom Tags'
                                             when referrer ilike '%loom.com/spaces/%' then 'Loom Spaces'
                                             when referrer ilike '%loom.com%' then 'Other Loom Pages'
                                             when referrer is null then 'Direct'
                                             else 'Other Referral' end                                                                                            as REFERRAL_TYPE,
                                         null                                                                                                                     as device,
                                         count(*) over (partition by user_anon_id)                                                                                as num_visits,
                                         abs(timestampdiff('second', SEGMENT_TIMESTAMP_UTC, lag(SEGMENT_TIMESTAMP_UTC)
                                                                                    over (partition by user_anon_id, date order by user_anon_id, SEGMENT_TIMESTAMP_UTC asc))) as time_to_previous_visit
                                  from ANALYTICS.ANALYTICS.BASE_WEBSITE_PAGES
                                  where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30 and name = 'Individual Video'
                                    and is_owner = false
                                  order by user_anon_id, SEGMENT_TIMESTAMP_UTC, num_visits desc))


                          UNION ALL

                          select case
                                     when embedded_on like '%loom.com/share%' then 'video_viewed_on_share_page'
                                     when embedded_on is not null and device_type != 'slack' then 'video_viewed_on_embed'
                                     when device_type = 'slack' then 'video_viewed_on_slack'
                                     else 'video_viewed_on_share_page' end as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)               as date,
                                 USER_ANON_ID,
                                 parent_location_v2                        as embedded_on,
                                 null                                      as referral_type,
                                 device_type                               as device,
                                 fvv.event_id                              as event_id,
                                 null                                      as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                     as timestamp
                          from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS fvv
                                   left join (select PARENT_LOCATION,
                                                     case
                                                         when running_pct <<= .3 then parent_location_v2
                                                         else 'Other Embedded View' end as parent_location_v2,
                                                     views
                                              from (select *, round(sum(pct) over (order by pct desc), 2) as running_pct
                                                    from (select EMBEDDED_ON
                                                                                                   parent_location
                                                               , case
                                                                     when PARENT_LOCATION like '%loom.com%' then 'Loom HQ'
                                                                     else PARENT_LOCATION end   as parent_location_v2
                                                               , count(*)                       as views
                                                               , ratio_to_report(views) over () as pct
                                                          from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
                                                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                                                            and OWNER_ID::varchar <<>> USER_ANON_ID::varchar
                                                            and parent_location not like '%loom.com/share%'
                                                          group by 1, 2
                                                          order by 4 desc)
                                                    order by pct desc)) embedded_on
                                             on embedded_on.parent_location = fvv.PARENT_LOCATION
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and OWNER_ID::varchar <<>> USER_ANON_ID::varchar

                          UNION ALL

                          select 'video_cta_clicked'             as funnel,
                                 date(timestamp)                 as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device,
                                 id                              as event_id,
                                 null                            as unique_videos,
                                 timestamp
                          from raw.website.video_cta_clicked
                          where owner_click = false
                            and date(timestamp) >>= current_date - 30


                          UNION ALL

                          select 'transcript_accessed'           as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_ACCESSED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and CURRENT_USER_IS_OWNER = false

                          UNION ALL

                          select 'transcript_accessed_by_phrase_click' as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)           as date,
                                 coalesce(user_id, anonymous_id)       as USER_ANON_ID,
                                 null                                  as embedded_on,
                                 null                                  as referral_type,
                                 null                                  as device_type,
                                 event_id                              as event_id,
                                 null                                  as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                 as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_NAVIGATED_BY_PHRASE_CLICK
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and CURRENT_USER_IS_OWNER = false

                          UNION ALL

                          select funnel,
                                 date,
                                 USER_ANON_ID,
                                 embedded_on,
                                 referral_type,
                                 device_type,
                                 event_id,
                                 unique_videos,
                                 timestamp
                          from (select 'transcript_accessed_by_user_scroll'                                                                                                   as funnel,
                                       date(SEGMENT_TIMESTAMP_UTC)                                                                                                            as date,
                                       coalesce(user_id, anonymous_id)                                                                                                        as USER_ANON_ID,
                                       null                                                                                                                                   as embedded_on,
                                       null                                                                                                                                   as referral_type,
                                       null                                                                                                                                   as device_type,
                                       event_id                                                                                                                               as event_id,
                                       null                                                                                                                                   as unique_videos,
                                       SEGMENT_TIMESTAMP_UTC                                                                                                                  as timestamp,
                                       video_id,
                                       row_number() over (partition by coalesce(user_id, anonymous_id), video_id, date(SEGMENT_TIMESTAMP_UTC) order by SEGMENT_TIMESTAMP_UTC) as row_number
                                from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_NAVIGATED_BY_USER_SCROLL
                                where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                                  and CURRENT_USER_IS_OWNER = false
                                group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
                          where row_number = 1

                          UNION ALL

                          select 'emoji_reaction'                as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_EMOJI_REACTION
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'extended_reaction_clicked'     as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 ID                              as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_EXTENDED_REACTION_BUTTON_CLICKED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'entered_comment_mode'          as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 EVENT_ID                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_PLAYER_ENTERED_COMMENT_MODE
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'created_comment'               as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_CREATED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL


                          select 'comment_reply_created'         as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_REPLY_CREATED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30)
                    order by date, user_anon_id, timestamp)) a
                 left join analytics.analytics.fact_user fu on fu.user_id = a.user_anon_id
        where (coalesce(domain, 'anon') != 'loom.com' or domain is null))
  group by 1,2,3,4,5,6,7
2023-10-19 10:53:01,912 — exposurescrawler — DEBUG —  ✅ ViewerX Funnel & Core Metrics Monitoring: found models ['raw.website.video_cta_clicked']
with fact_videos as (
    select date(SEGMENT_TIMESTAMP_UTC) as SEGMENT_TIMESTAMP_UTC, owner_id, count(*) as video_views
    from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
    where OWNER_ID::varchar <<>> USER_ANON_ID::varchar --eliminate self views
    group by 1,2
),
 fact_user as (

     select * from ANALYTICS.ANALYTICS.KPI_USER_CLASSIFICATION
 ),

 fact_recordings as (

     select dau.USER_ANON_ID as user_anon_id,
            date(dau.DAY) as active_day,
            date(RECORDING_START_AT_UTC) as RECORDING_START_AT_UTC,
            date(RECORDING_COMPLETE_AT_UTC)as RECORDING_COMPLETE_AT_UTC,
            date(RECORDING_DELETED_AT_UTC) as RECORDING_DELETED_AT_UTC,
            date(RECORDING_CANCELLED_AT_UTC) as RECORDING_CANCELLED_AT_UTC,
            date(RECORDING_STOPPED_AT_UTC) as RECORDING_STOPPED_AT_UTC,
            date(RECORDING_QUIT_AT_UTC) as RECORDING_QUIT_AT_UTC,
            count(distinct case when service in ('windows', 'mac') then video_id end) as desktop_recordings,
                count(distinct case when SERVICE in ('browser_extension') then video_id end) as extension_recordings,
                  count(distinct case when service in ('ios_cam', 'ios_screen') then video_id end) as ios_recordings,
                 count(distinct case when service in ('sdk_recorder') then video_id end) as sdk_recordings,
                 count(distinct case when SERVICE in ('android') then video_id end) as android_recordings,
                count(distinct case when service in ('no service data') then video_id end) as unknown_recordings,
                count(distinct video_id) as total_recordings
     from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS dau
         LEFT JOIN ANALYTICS.ANALYTICS.FACT_RECORDING fr on date(fr.recording_complete_at_utc) = date(dau.day) and dau.USER_ANON_ID::varchar = fr.USER_ID::varchar
   --  where date(dau.DAY) = current_date - 10 --and user_id = '7773189'
     group by 1,2,3,4,5,6,7,8
 ),

 recordings_by_user_by_day as (

    select

        user_id,
        date_trunc('day', recording_complete_at_utc) as recording_day,
        count(distinct case when service in ('windows', 'mac') then video_id end) as desktop_recordings,
        count(distinct case when SERVICE in ('browser_extension') then video_id end) as extension_recordings,
        count(distinct case when service in ('ios_cam', 'ios_screen') then video_id end) as ios_recordings,
        count(distinct case when service in ('sdk_recorder') then video_id end) as sdk_recordings,
        count(distinct case when SERVICE in ('android') then video_id end) as android_recordings,
        count(distinct case when service in ('no service data') then video_id end) as unknown_recordings,
        count(distinct video_id) as total_recordings,
        count(distinct to_date(recording_complete_at_utc)) as recording_day_count
    from ANALYTICS.ANALYTICS.FACT_RECORDING
    where recording_complete_at_utc is not null
      --and date(RECORDING_COMPLETE_AT_UTC) = current_date - 10
    group by 1, 2

),

  vfv_by_user_by_day as (

    select

        nvfvd.user_id, -- user receiving vfv
        date_trunc('day', nvfvd.event_date_utc) as vfv_day,
        date_trunc('day', fr.recording_complete_at_utc) as recording_day_of_vfv,
        count(distinct nvfvd.video_id) as vfv_count

    from ANALYTICS.ANALYTICS.nodejs_video_first_view_deduped nvfvd
    inner join ANALYTICS.ANALYTICS.FACT_RECORDING fr
        on nvfvd.video_id = fr.video_id
    group by 1, 2, 3

    ),

 emoji_reaction as(
     select date(EVENT_DATE_UTC) as EVENT_DATE_UTC,
            coalesce(user_id, ANONYMOUS_ID) as user_anon_id,
            count(distinct case when (sentiment like 'yay%' or sentiment like 'wow%' or sentiment like 'love%' or sentiment like 'joy%' or
 sentiment like 'down%' or sentiment like 'up%' or sentiment like '+1%' or sentiment like '-1%' or sentiment like 'raised_hands%' or sentiment like 'heart_eyes%' or sentiment like 'open_mouth%')
           then event_id end) as default_emojis_used,
    count(*) - default_emojis_used  as extended_emoji_picker_emoji_used,
    count(*) as total_emojis_used
     from ANALYTICS.ANALYTICS.BASE_WEBSITE_EMOJI_REACTION
  --   where date(EVENT_DATE_UTC) = current_date - 10
     group by 1,2

 ),

    kpi_block as (
select
       dau.DAY as day,
       category as USER_CLASSIFICATION,
       country,
       cast(count(distinct dau.user_anon_id) as int) as "daily_active_user",
       cast(sum(fv_received.video_views)as int) as "video_views_received",
       cast(sum(default_emojis_used)as int) as "default_emojis_used",
       cast(sum(extended_emoji_picker_emoji_used)as int) as "extended_emoji_picker_used",
       cast(sum(total_emojis_used)as int)                as "total_emojis_used",
--completed recordings
       cast(sum(desktop_recordings) as int) as "desktop_recordings_completed",
       cast(sum(extension_recordings) as int) as "extension_recordings_completed",
       cast(sum(ios_recordings) as int) as "ios_recordings_completed",
       cast(sum(sdk_recordings) as int) as "sdk_recordings_completed",
       cast(sum(android_recordings) as int) as "android_recordings_completed",
       cast(sum(unknown_recordings) as int) as "unknown_recordings_completed",
       cast(sum(total_recordings) as int) as "total_recordings_completed",
       cast(sum(vfv_count) as int) as "vfv_count"

from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS dau
left join fact_user fu on dau.user_anon_id::varchar = fu.user_id::varchar
left join fact_videos fv_received on fv_received.owner_id::varchar = dau.user_anon_id::varchar and date(dau.day) = date(fv_received.SEGMENT_TIMESTAMP_UTC)
left join emoji_reaction er on er.user_anon_id::varchar = dau.USER_ANON_ID::varchar and date(er.EVENT_DATE_UTC) = date(dau.DAY)
left join recordings_by_user_by_day fr on fr.USER_ID::varchar = dau.user_anon_id::varchar and date(fr.recording_day) = date(dau.day)
left join vfv_by_user_by_day vfv on vfv.USER_ID::varchar = dau.USER_ANON_ID::varchar and date(vfv.recording_day_of_vfv) = date(dau.DAY)
where year(dau.day) >>= year(current_date()) - 1

group by 1,2,3
)
select day,
       USER_CLASSIFICATION,
       country,
       metric,
       value
    from (
             (select day,
                     USER_CLASSIFICATION,
                     country,
      "daily_active_user",
      "video_views_received",
      "default_emojis_used",
      "extended_emoji_picker_used",
      "total_emojis_used",

--completed recordings
       "desktop_recordings_completed",
       "extension_recordings_completed",
       "ios_recordings_completed",
       "sdk_recordings_completed",
       "android_recordings_completed",
       "unknown_recordings_completed",
       "total_recordings_completed",
       "vfv_count"
             from kpi_block) p
unpivot
(value for metric in
(     "daily_active_user",
      "video_views_received",
      "default_emojis_used",
      "extended_emoji_picker_used",
      "total_emojis_used",

--completed recordings
       "desktop_recordings_completed",
       "extension_recordings_completed",
       "ios_recordings_completed",
       "sdk_recordings_completed",
       "android_recordings_completed",
       "unknown_recordings_completed",
       "total_recordings_completed",
       "vfv_count"))) as unpvt
2023-10-19 10:53:01,920 — exposurescrawler — DEBUG —  ❌ [BETA] - Tableau Cockpit Loom: found no models
select * 
from analytics.analytics.reporting_mrr_movement_by_customer
where date_agg = 'monthly'
and date_utc = date_trunc('month', sysdate()) - interval '1 month'
2023-10-19 10:53:01,921 — exposurescrawler — DEBUG —  ❌ Monthly ARR Movement Summary: found no models
SELECT "ACTIVATION_METRICS"."METRIC_YEAR" AS "METRIC_YEAR",
  "ACTIVATION_METRICS"."METRIC_MONTH" AS "METRIC_MONTH",
  "ACTIVATION_METRICS"."METRIC_YEAR_MONTH" AS "METRIC_YEAR_MONTH",
  "ACTIVATION_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ACTIVATION_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ACTIVATION_METRICS"."SIGNUP_ATTRIBUTION_TYPE" AS "SIGNUP_ATTRIBUTION_TYPE",
  "ACTIVATION_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ACTIVATION_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ACTIVATION_METRICS" "ACTIVATION_METRICS"
WHERE METRIC_YEAR_MONTH >>= '2020-01'
SELECT "ENGAGEMENT_METRICS"."EVENT_YEAR" AS "EVENT_YEAR",
  "ENGAGEMENT_METRICS"."EVENT_MONTH" AS "EVENT_MONTH",
  "ENGAGEMENT_METRICS"."EVENT_YEAR_MONTH" AS "EVENT_YEAR_MONTH",
  "ENGAGEMENT_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ENGAGEMENT_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ENGAGEMENT_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ENGAGEMENT_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ENGAGEMENT_METRICS" "ENGAGEMENT_METRICS"
WHERE EVENT_YEAR_MONTH >>= '2020-01'
SELECT "WORKSPACE_METRICS"."EVENT_YEAR" AS "EVENT_YEAR",
  "WORKSPACE_METRICS"."EVENT_MONTH" AS "EVENT_MONTH",
  "WORKSPACE_METRICS"."EVENT_YEAR_MONTH" AS "EVENT_YEAR_MONTH",
  "WORKSPACE_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "WORKSPACE_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "WORKSPACE_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "WORKSPACE_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_WORKSPACE_METRICS" "WORKSPACE_METRICS"
where event_year_month >>= '2020-10'
SELECT "ACQUISITION_METRICS"."METRIC_YEAR" AS "METRIC_YEAR",
  "ACQUISITION_METRICS"."METRIC_MONTH" AS "METRIC_MONTH",
  "ACQUISITION_METRICS"."METRIC_YEAR_MONTH" AS "METRIC_YEAR_MONTH",
  "ACQUISITION_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ACQUISITION_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ACQUISITION_METRICS"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "ACQUISITION_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ACQUISITION_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ACQUISITION_METRICS" "ACQUISITION_METRICS"
WHERE METRIC_YEAR_MONTH >>= '2020-01'
2023-10-19 10:53:01,925 — exposurescrawler — DEBUG —  ❌ Overall Product Health Dashboard: found no models
with 

assignments as (

    select
        anonymous_id::varchar as anonymous_id,
        experiment_name,
        assignment_group,
        user_classification,
        min(assignment_tstamp_utc) as assignment_tstamp_utc,
        min(assignment_tstamp_pt) as assignment_tstamp_pt

    from analytics.analytics.ab_anon_experiment_users
    where experiment_name = 'experiment-website-record-reply-logged-out-users'
        and date(assignment_tstamp_utc) between '2021-10-23' and '2021-10-29'
    group by 1,2,3,4
),

user_ids as (

    select
        assignments.anonymous_id,
        assignments.experiment_name,
        assignments.assignment_group,
        assignments.user_classification,
        assignments.assignment_tstamp_utc,
        fact_user.user_id::varchar as user_id,
        fact_user.created_at

    from assignments
    left join analytics.analytics.tracks_anonymous_id_user_id_mapping
        on tracks_anonymous_id_user_id_mapping.anonymous_id = assignments.anonymous_id
    left join analytics.analytics.fact_user
        on fact_user.user_id::varchar = tracks_anonymous_id_user_id_mapping.user_id
        and fact_user.created_at >>= assignments.assignment_tstamp_utc
),

joined as (
    select
        user_ids.anonymous_id,
        user_ids.experiment_name,
        user_ids.assignment_group,
        coalesce(video_comment.creation_method,'aggregate') as creation_method,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 1 then video_comment.event_id else null end) total_video_view_comments_1d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 1 then video_comment.anonymous_id else null end) total_video_view_commenters_1d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 7 then video_comment.event_id else null end) total_video_view_comments_7d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 7 then video_comment.anonymous_id else null end) total_video_view_commenters_7d
    from user_ids
    left join analytics.analytics.base_website_video_comment_created as video_comment
      on user_ids.anonymous_id = video_comment.anonymous_id
      and video_comment.segment_timestamp_utc >>= user_ids.assignment_tstamp_utc
      and date(segment_timestamp_utc) between '2021-10-23' and '2021-11-06'
    group by grouping sets (
      (user_ids.anonymous_id, user_ids.experiment_name, user_ids.assignment_group, video_comment.creation_method),
      (user_ids.anonymous_id, user_ids.experiment_name, user_ids.assignment_group)
    )
)

select 
  experiment_name,
  assignment_group,
  creation_method,
  count(distinct anonymous_id) as cnt_users,
  sum(coalesce(total_video_view_comments_1d,0)) as tot_comments_1d,
  sum(coalesce(total_video_view_commenters_1d,0)) as tot_commenters_1d,
  sum(coalesce(total_video_view_comments_1d,0))/count(distinct anonymous_id) as avg_comments_1d,
--  sum(coalesce(total_video_view_comments_1d,0))/sum(coalesce(total_video_view_commenters_1d,0)) as avg_comments_per_commenter_1d,
  sum(coalesce(total_video_view_comments_7d,0)) as tot_comments_7d,
  sum(coalesce(total_video_view_commenters_7d,0)) as tot_commenters_7d,
  sum(coalesce(total_video_view_comments_7d,0))/count(distinct anonymous_id) as avg_comments_7d
--  sum(coalesce(total_video_view_comments_7d,0))/sum(coalesce(total_video_view_commenters_7d,0)) as avg_comments_per_commenter_7d
from joined 
group by 1,2,3
--------------------------------------------------------------------------------------------
------------ sdk recording data
--------------------------------------------------------------------------------------------

with

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_anon' as event_name
    , timestamp
    , anonymous_id
    , video_id
    , id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3,4,5
),

sign_up_button_clicked_base as (
  select anonymous_id, timestamp
  from raw.website.sign_up_in_oauth_button_clicked -- ok, provider is auth0, apple, google rn
  where is_logged_in = false
    and source = 'anon-record-a-reply'

union all 

  select anonymous_id, timestamp
  from raw.website.email_sign_up_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
),

anon_comment_button_click as (
  select 
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.anon_comment_button_click
  group by 1
),

anon_exit_signup_click as (
  select 
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.exit_anon_record_a_reply_signup_modal
  group by 1
),


sign_up_button_clicked as (
    select 
      anonymous_id
      -- , video_id 
      , min(timestamp) as min_timestamp 
    from sign_up_button_clicked_base
    group by 1-- ,2
),

complete_onboarding_step as (
  select
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.complete_onboarding_step      -- ok
  where source = 'anon-record-a-reply'
  group by 1
),

onboarding_flow_complete as (
  select
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.onboarding_flow_complete      -- ok
  where source = 'anon-record-a-reply'
  group by 1
),

copy_link as(
  select anonymous_id
    , sdk_partner_id
    , segment_timestamp_utc
    , video_id
  from analytics.analytics.base_loomsdk_production_sdk_close_preview_modal_confirm_button_clicked
  union all
  select anonymous_id
    , sdk_partner_id
    , segment_timestamp_utc
    , video_id
  from analytics.analytics.base_loomsdk_production_sdk_copy_video_link_buton_clicked
),

min_copy_link as(
  select anonymous_id
    , sdk_partner_id
    , video_id
    , min(segment_timestamp_utc) as segment_timestamp_utc
  from copy_link
  group by 1, 2, 3
),

recording_data_base as(
  select
      r.video_id
      , r.recording_start_at_utc
      , r.recording_complete_at_utc
      , r.user_id
      , r.organization_id
      , r.sdk_partner_id
      , r.anonymous_id
      , i.segment_timestamp_utc as insert_at_utc
      , r.video_first_view_at_utc
      , acbc.min_timestamp as anon_comment_button_click_utc 
      , aesc.min_timestamp as anon_exit_signup_click_utc
      , subc.min_timestamp as sign_up_click_utc
      , onstep.min_timestamp as onboarding_step_utc
      , oncomplete.min_timestamp as onboarding_complete_utc 
      , coalesce(fff.flag_value,'not in experiment') as flag_value
      , coalesce(fff.flag_name,'not in experiment') as flag_name
      , ((datediff('second', r.recording_start_at_utc, r.recording_complete_at_utc)/60)/60)/24 as days_start_to_complete
      , ((datediff('second', r.recording_complete_at_utc, i.segment_timestamp_utc)/60)/60)/24 as days_complete_to_insert
      , ((datediff('second', r.recording_complete_at_utc, vv.segment_timestamp_utc)/60)/60)/24 as days_complete_to_vfv
      , ((datediff('second', r.recording_complete_at_utc, l.segment_timestamp_utc)/60)/60)/24 as days_complete_to_copy_link
      , ((datediff('second', r.recording_start_at_utc, r.recording_deleted_at_utc)/60)/60)/24 as days_start_to_delete
      , ((datediff('seconds', recording_start_at_utc, current_timestamp())/60)/60)/24 as time_passed_start
      , ((datediff('seconds', recording_complete_at_utc, current_timestamp())/60)/60)/24 as time_passed_complete
  from analytics.analytics.fact_recording r

      -- join share_page_record_reply_button_clicked rra
      --     on r.anonymous_id = rra.anonymous_id
      left join analytics.analytics.base_loomsdk_production_sdk_insert_recording_button_clicked i
          on i.video_id = r.video_id
              and i.segment_timestamp_utc >>= r.recording_start_at_utc ---- clicked insert after they started the recording
      left join analytics.analytics.fact_video_views vv --- for SDK need to look at video views, not video first view because event won't fire if sharing the same user id
          on r.video_id = vv.video_id
            and vv.segment_timestamp_utc >>= r.recording_complete_at_utc
              and ifnull(vv.anonymous_id, '-100') != ifnull(r.anonymous_id, '-200')
      left join min_copy_link l
          on l.video_id = r.video_id
            and l.anonymous_id = r.anonymous_id
              and l.sdk_partner_id = r.sdk_partner_id
                and l.segment_timestamp_utc >>= r.recording_complete_at_utc
      join analytics.analytics.base_nodejs_feature_flag_fetched fff
          on fff.anonymous_id = r.anonymous_id
          and fff.flag_name = 'experiment-website-record-reply-logged-out-users'
          and fff.flag_value in ('control','variant')
          and date(fff.segment_timestamp_utc) between '2021-10-23' and '2021-10-29' --  '2021-10-20 00:00:00'
      left join anon_comment_button_click acbc 
          on r.anonymous_id = acbc.anonymous_id 
      left join anon_exit_signup_click aesc 
          on r.anonymous_id = aesc.anonymous_id 
      left join sign_up_button_clicked subc 
          on r.anonymous_id = subc.anonymous_id 
          -- and r.video_id = subc.video_id  
      left join complete_onboarding_step onstep
          on r.anonymous_id = onstep.anonymous_id
      left join onboarding_flow_complete oncomplete
          on r.anonymous_id = oncomplete.anonymous_id 
  where r.recording_client = 'sdk_recorder'
    and date(r.recording_start_at_utc) >>= '2021-10-20'
  ),


recording_data as (
  select
    a.anonymous_id as button_click_anonymous_id
    , a.timestamp as button_click_at_utc
    , a.id as button_click_event_id
    , b.*
  from share_page_record_reply_button_clicked a 
  left join recording_data_base b
    on a.anonymous_id = b.anonymous_id 
),

record_button_click_agg as (
  select 
    'record button clicks' as metric 
    , date(button_click_at_utc) as date_day
    , date_trunc('week',button_click_at_utc)
    , date_trunc('month',button_click_at_utc)
    , 'variant' as flag_value 
    , count(distinct button_click_event_id) as value
    , NULL as base 
  from recording_data
  where button_click_at_utc is not null 
  group by 1,2,3,4,5
),

record_button_click_anonymous_agg as (
  select 
    'record button click anonymous' as metric 
    , date(button_click_at_utc) as date_day
    , date_trunc('week',button_click_at_utc)
    , date_trunc('month',button_click_at_utc)
    , 'variant' as flag_value 
    , count(distinct button_click_anonymous_id) as value
    , NULL as base 
  from recording_data
  where button_click_at_utc is not null 
  group by 1,2,3,4,5
),

recording_start_video_agg as(
  select 'recording start videos' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_start_anonymous_agg as(
  select 'recording start anonymous' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_start_partner_agg as(
  select 'recording start partner' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_video_agg as(
  select 'recording complete videos' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_anonymous_agg as(
  select 'recording complete anonymous' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_partner_agg as(
  select 'recording complete partner' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_video_agg as(
  select 'recording insert videos' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_anonymous_agg as(
  select 'recording insert anonymous' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_partner_agg as(
  select 'recording insert partner' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

comment_button_click_anonymous as(
 select 'comment button click anonymous' as metric
   , date(anon_comment_button_click_utc) as date_day
   , date_trunc('week', anon_comment_button_click_utc) as date_week
   , date_trunc('month', anon_comment_button_click_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where anon_comment_button_click_utc is not null
 group by 1, 2, 3, 4, 5
),

exit_signup_click_anonymous as(
 select 'exit signup click anonymous' as metric
   , date(anon_exit_signup_click_utc) as date_day
   , date_trunc('week', anon_exit_signup_click_utc) as date_week
   , date_trunc('month', anon_exit_signup_click_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where anon_exit_signup_click_utc is not null
 group by 1, 2, 3, 4, 5
),

 sign_up_click_anonymous as(
  select 'sign up click anonymous' as metric
    , date(sign_up_click_utc) as date_day
    , date_trunc('week', sign_up_click_utc) as date_week
    , date_trunc('month', sign_up_click_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where sign_up_click_utc is not null
  group by 1, 2, 3, 4, 5
),

onboarding_step_anonymous as(
 select 'onboarding step anonymous' as metric
   , date(onboarding_step_utc) as date_day
   , date_trunc('week', onboarding_step_utc) as date_week
   , date_trunc('month', onboarding_step_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where onboarding_step_utc is not null
 group by 1, 2, 3, 4, 5
),

onboarding_complete_anonymous as(
 select 'onboarding complete anonymous' as metric
   , date(onboarding_complete_utc) as date_day
   , date_trunc('week', onboarding_complete_utc) as date_week
   , date_trunc('month', onboarding_complete_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where onboarding_complete_utc is not null
 group by 1, 2, 3, 4, 5
),


final as (
select * from record_button_click_agg
union all
select * from record_button_click_anonymous_agg
union all 
select * from recording_start_video_agg
union all
select * from recording_start_anonymous_agg
union all
select * from recording_start_partner_agg
union all
select * from recording_complete_video_agg
union all
select * from recording_complete_anonymous_agg
union all
select * from recording_complete_partner_agg
union all
select * from recording_insert_video_agg
union all
select * from recording_insert_anonymous_agg
union all
select * from recording_insert_partner_agg
union all 
select * from comment_button_click_anonymous
union all 
select * from sign_up_click_anonymous
union all 
select * from exit_signup_click_anonymous
union all 
select * from onboarding_step_anonymous
union all 
select * from onboarding_complete_anonymous
)



select
  date_day
  , flag_value
  , sum(case when metric = 'record button clicks' then value else null end) as cnt_record_button_click
  , sum(case when metric = 'recording start videos' then value else null end) as cnt_video_start
  , sum(case when metric = 'recording complete videos' then value else null end) as cnt_video_complete
  , sum(case when metric = 'recording insert videos' then value else null end) as cnt_video_insert
  , sum(case when metric = 'recording complete videos' then value else null end)/sum(case when metric = 'recording start videos' then value else null end) as pct_video_start_to_complete
  , sum(case when metric = 'recording insert videos' then value else null end)/sum(case when metric = 'recording complete videos' then value else null end) as pct_video_complete_to_insert

  , sum(case when metric = 'record button click anonymous' then value else null end) as cnt_users_button_click
  , sum(case when metric = 'recording start anonymous' then value else null end) as cnt_users_recording_start
  , sum(case when metric = 'recording complete anonymous' then value else null end) as cnt_users_recording_complete
  , sum(case when metric = 'recording insert anonymous' then value else null end) as cnt_users_recording_insert
  , sum(case when metric = 'recording complete anonymous' then value else null end)/sum(case when metric = 'recording start anonymous' then value else null end) as pct_users_start_to_complete
  , sum(case when metric = 'recording insert anonymous' then value else null end)/sum(case when metric = 'recording complete anonymous' then value else null end) as pct_users_complete_to_insert
  , sum(case when metric = 'comment button click anonymous' then value else null end) cnt_users_comment_click 
  , sum(case when metric = 'exit signup click anonymous' then value else null end) as cnt_users_exit_signup_click
  , sum(case when metric = 'sign up click anonymous' then value else null end) as cnt_users_signup_click
  , sum(case when metric = 'onboarding step anonymous' then value else null end) as cnt_users_onboard_step
  , sum(case when metric = 'onboarding complete anonymous' then value else null end) as cnt_users_onboard_complete
from final
-- where date_day between '2021-10-23' and '2021-10-29'
group by 1,2
with
variant as (
  select distinct anonymous_id
  from analytics.analytics.base_nodejs_feature_flag_fetched
  where date(segment_timestamp_pt) >>= '2021-10-20'
    and flag_name = 'experiment-website-record-reply-logged-out-users'
    and flag_value = 'variant'
),

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_anon' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_signed_in' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = true
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

exit_anon_record_a_reply_signup_modal as (
  select
    'exit_anon_record_a_reply_signup_modal' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.exit_anon_record_a_reply_signup_modal   -- ok, no source needed
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

anon_comment_button_click as (
  select
    'anon_comment_button_click' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.anon_comment_button_click   -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

email_login_button_clicked as (
  select
    'email_login_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.email_login_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

sign_up_in_oauth_button_clicked as (
  select
    'sign_up_in_oauth_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sign_up_in_oauth_button_clicked -- ok, provider is auth0, apple, google rn
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

email_sign_up_button_clicked as (
  select
    'email_sign_up_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.email_sign_up_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

complete_onboarding_step as (
  select
    'complete_onboarding_step' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.complete_onboarding_step      -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

onboarding_flow_complete as (
  select
    'onboarding_flow_complete' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.onboarding_flow_complete      -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_record_button_clicked as (
  select
    'sdk_record_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_record_button_clicked     -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_recording_canceled as (
  select
    'sdk_recording_canceled' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_recording_canceled        -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_recording_completed as (
  select
    'sdk_recording_completed' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_recording_completed       -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

events as (
  select * from share_page_record_reply_button_clicked
    union all
  select * from share_page_record_reply_button_clicked
    union all
  select * from exit_anon_record_a_reply_signup_modal
    union all
  select * from anon_comment_button_click
    union all
  select * from email_login_button_clicked
    union all
  select * from sign_up_in_oauth_button_clicked
    union all
  select * from email_sign_up_button_clicked
    union all
  select * from complete_onboarding_step
    union all
  select * from onboarding_flow_complete
    union all
  select * from sdk_record_button_clicked
    union all
  select * from sdk_recording_canceled
    union all
  select * from sdk_recording_completed
)

select
  variant.anonymous_id
  , events.event_date_utc
  , coalesce(events.event_name, 'no events') as event
  , sum(coalesce(events.events,0)) as value
from variant
left join events
  on variant.anonymous_id = events.anonymous_id
group by 1,2,3
2023-10-19 10:53:01,951 — exposurescrawler — DEBUG —  ✅ Record a Reply (Anonymous) Custom Metrics: found models ['raw.website.complete_onboarding_step', 'raw.website.share_page_record_reply_button_clicked', 'raw.website.exit_anon_record_a_reply_signup_modal', 'raw.website.anon_comment_button_click', 'raw.website.sign_up_in_oauth_button_clicked', 'raw.website.email_sign_up_button_clicked', 'raw.website.onboarding_flow_complete', 'raw.website.complete_onboarding_step', 'raw.website.sdk_record_button_clicked', 'raw.website.sdk_recording_canceled', 'raw.website.sdk_recording_completed', 'raw.website.share_page_record_reply_button_clicked', 'raw.website.exit_anon_record_a_reply_signup_modal', 'raw.website.anon_comment_button_click', 'raw.website.email_login_button_clicked', 'raw.website.sign_up_in_oauth_button_clicked', 'raw.website.email_sign_up_button_clicked', 'raw.website.onboarding_flow_complete']
select * from 
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
where 
DATE_END = (select max(date_end) from ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS)
2023-10-19 10:53:01,952 — exposurescrawler — DEBUG —  ❌ Influencers & Network health dashboard: found no models
SELECT "FACT_MRR_BY_DOMAIN_BY_MONTH"."MAPPED_DOMAIN" AS "MAPPED_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."DATE_MONTH" AS "DATE_MONTH",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."FIRST_ACTIVE_MONTH" AS "FIRST_ACTIVE_MONTH",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEATS" AS "SEATS",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PREVIOUS_MONTH_SEATS" AS "PREVIOUS_MONTH_SEATS",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEATS_CHANGE" AS "SEATS_CHANGE",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR" AS "MRR",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PREVIOUS_MONTH_MRR" AS "PREVIOUS_MONTH_MRR",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR_CHANGE" AS "MRR_CHANGE",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."IS_EDUCATION_VERIFIED_DOMAIN" AS "IS_EDUCATION_VERIFIED_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."IS_PUBLIC_DOMAIN" AS "IS_PUBLIC_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PAID_ORGANIZATION_CLASSIFICATION" AS "PAID_ORGANIZATION_CLASSIFICATION",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR_CHANGE_CATEGORY" AS "MRR_CHANGE_CATEGORY",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEAT_CHANGE_CATEGORY" AS "SEAT_CHANGE_CATEGORY"
FROM "ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH" "FACT_MRR_BY_DOMAIN_BY_MONTH"
WHERE
    "MRR" >> 0 OR "MRR_CHANGE_CATEGORY" = 'churn'
ORDER BY 1, 2
2023-10-19 10:53:01,954 — exposurescrawler — DEBUG —  ❌ MRR Exports: found no models
select
    count(vv.event_id) as total_videos_viewed,
    count(distinct coalesce(vv.user_id, vv.anonymous_id)) as unique_video_viewers,
    count(case when vv.segment_timestamp_utc >> dateadd('day', -30, localtimestamp)
          then vv.event_id end) as videos_viewed_l30d,
    count(distinct case when vv.segment_timestamp_utc >> dateadd('day', -30, localtimestamp)
          then coalesce(vv.user_id, vv.anonymous_id) end) as unique_video_viewers_l30d
from
    analytics.fact_video_views as vv
where
    vv.owner_id != vv.user_id or vv.user_id is null
2023-10-19 10:53:01,955 — exposurescrawler — DEBUG —  ❌ Product Marketing: found no models
select 
video_id
, user_id
, client
, recording_client
, recording_type
, service
, recording_start_at_utc
, recording_cancelled_at_utc
, recording_stopped_at_utc
, recording_complete_at_utc
, duration_of_completed_video
, coalesce(upload_method, 'us-west-2') as upload_method
, r.country_code
, cc.country_name
, case
    when r.country_code in ('BM','CA','GL','PM','US') then 'North America'
    when r.country_code in ('AW','BB','BS','BQ','KY','CU','CW','DM','DO','GD','GP','HT','JM','MQ','MS','PR','BL','KN','LC','MF','VC','SX','TT','TC','VG','VI') then 'Caribbean'
    when r.country_code in ('BZ','CR','SV','GT','HN','MX','NI','PA') then 'Central America'
    when r.country_code in ('AR','BO','BV','BR','CL','CO','EC','FK','GF','GY','PY','PE','GS','SR','UY','VE') then 'South America'
    when r.country_code in ('DZ','AO','BJ','BW','IO','BF','BI','CV','CM','CF','TD','KM','CG','CD','CI','DJ','EG','GQ','ER','SZ','ET','TF','GA','GM','GH','GN','GW','KE','LS','LR','LY','MG','MW','ML','MR','MU','YT','MA','MZ','NA','NE','NG','RE','RW','SH','ST','SN','SC','SL','SO','ZA','SS','SD','TZ','TG','TN','UG','EH','ZM','ZW') then 'Africa'
    when r.country_code in ('AU','FJ','GU','PF','FM','NR','NC','NZ','NU','NF','MP','PW','PG','PN','WS','SB','TK','TO','TV','UM','VU','WF') then 'Oceania'
    when r.country_code in ('BY','BG','CZ','HU','MD','PL','RO','RU','SK','UA') then 'Europe'
    when r.country_code in ('AX','DK','EE','FO','FI','GG','IS','IE','IM','JE','LV','LT','NO','SJ','SE','GB') then 'Europe'
    when r.country_code in ('XK','AL','AD','BA','HR','GI','GR','VA','IT','MT','ME','MK','PT','SM','RS','SI','ES') then 'Europe'
    when r.country_code in ('AT','BE','FR','DE','LI','LU','MC','NL','CH') then 'Europe'
    when r.country_code in ('CN','HK','JP','KP','KR','MO','MN','TW') then 'Asia'
    when r.country_code in ('KZ','KG','TJ','TM','UZ') then 'Asia'
    when r.country_code in ('BN','KH','ID','LA','MY','MM','PH','SG','TH','TL','VN') then 'Asia'
    when r.country_code in ('AF','BD','BT','IN','IR','MV','NP','PK','LK') then 'Asia'
    when r.country_code in ('AM','AZ','BH','CY','GE','IQ','IL','JO','KW','LB','OM','PS','QA','SA','SY','TR','AE','YE') then 'Asia'
    else 'Other'
   end as region_name
, case
    when r.country_code in ('BM','CA','GL','PM','US') then 'North America'
    when r.country_code in ('AW','BB','BS','BQ','KY','CU','CW','DM','DO','GD','GP','HT','JM','MQ','MS','PR','BL','KN','LC','MF','VC','SX','TT','TC','VG','VI') then 'Caribbean'
    when r.country_code in ('BZ','CR','SV','GT','HN','MX','NI','PA') then 'Central America'
    when r.country_code in ('AR','BO','BV','BR','CL','CO','EC','FK','GF','GY','PY','PE','GS','SR','UY','VE') then 'South America'
    when r.country_code in ('DZ','AO','BJ','BW','IO','BF','BI','CV','CM','CF','TD','KM','CG','CD','CI','DJ','EG','GQ','ER','SZ','ET','TF','GA','GM','GH','GN','GW','KE','LS','LR','LY','MG','MW','ML','MR','MU','YT','MA','MZ','NA','NE','NG','RE','RW','SH','ST','SN','SC','SL','SO','ZA','SS','SD','TZ','TG','TN','UG','EH','ZM','ZW') then 'Africa'
    when r.country_code in ('AU','FJ','GU','PF','FM','NR','NC','NZ','NU','NF','MP','PW','PG','PN','WS','SB','TK','TO','TV','UM','VU','WF') then 'Oceania'
    when r.country_code in ('BY','BG','CZ','HU','MD','PL','RO','RU','SK','UA') then 'Eastern Europe'
    when r.country_code in ('AX','DK','EE','FO','FI','GG','IS','IE','IM','JE','LV','LT','NO','SJ','SE','GB') then 'Northern Europe'
    when r.country_code in ('XK','AL','AD','BA','HR','GI','GR','VA','IT','MT','ME','MK','PT','SM','RS','SI','ES') then 'Southern Europe'
    when r.country_code in ('AT','BE','FR','DE','LI','LU','MC','NL','CH') then 'Western Europe'
    when r.country_code in ('CN','HK','JP','KP','KR','MO','MN','TW') then 'Eastern Asia'
    when r.country_code in ('KZ','KG','TJ','TM','UZ') then 'Central Asia'
    when r.country_code in ('BN','KH','ID','LA','MY','MM','PH','SG','TH','TL','VN') then 'Southeast Asia'
    when r.country_code in ('AF','BD','BT','IN','IR','MV','NP','PK','LK') then 'Southern Asia'
    when r.country_code in ('AM','AZ','BH','CY','GE','IQ','IL','JO','KW','LB','OM','PS','QA','SA','SY','TR','AE','YE') then 'Western Asia'
    else 'Other'
   end as sub_region_name
, case
    when r.country_code in ('GB','DE','US','FR','ES','AU') then 'In Experiment'
    when coalesce(upload_method, 'us-west-2') = 'upload-proxy' then 'In Experiment'
    else 'Not In Experiment'
   end as in_experiment
, recording_stability_1d
, case when recording_cancelled_at_utc is null then 0 else 1 end as is_not_cancelled
, latency
, speed_test_result
, upload_throughput
, avg_bit_rate
, width * height as video_resolution
, resolution
, ttv_seconds
, ttv_normalized
from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
    on r.country_code = cc.country_code
where coalesce(ttv_seconds,0) >>= 0
and coalesce(ttv_seconds,0) <<= 1200 
and coalesce(date(recording_start_at_utc),'2021-04-01') >>= dateadd('day',-61,current_date)
and coalesce(date(recording_start_at_utc),'2021-04-01') <<= current_date
2023-10-19 10:53:01,959 — exposurescrawler — DEBUG —  ❌ TTV Experiment Tracking: found no models
select
s.anonymous_id,
s.slack_user_id,
s.slack_team_id,
s.segment_timestamp_utc as nudge_shown_utc,
min(c.segment_timestamp_utc) as nudge_click_utc,
min(i.segment_timestamp_utc) as invite_sent_utc,
count(distinct invitee_slack_id) as invite_count
from analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown s
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked c
    on c.slack_user_id = s.slack_user_id
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',1,s.segment_timestamp_utc)
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent i
    on i.slack_user_id = c.slack_user_id
    and i.slack_team_id = c.slack_team_id
    and i.segment_timestamp_utc >>= c.segment_timestamp_utc
    and i.segment_timestamp_utc <<= dateadd('min',1,c.segment_timestamp_utc)
group by 1,2,3,4
with link_shares as (
    select
        case when is_channel_public is null then 'Unknown'
            when is_channel_public then 'Yes' else 'No' end as is_channel_public,
        case when is_sender_connected is null then 'Unknown'
            when is_sender_connected then 'Yes' else 'No' end as is_sender_connected,
        (case when is_channel_public then 'public' else 'private' end)||'|'||(case when is_sender_connected then 'connected' else 'not_connected' end) as share_bucket,
        segment_timestamp_utc,
        slack_user_id,
        slack_team_id,
        anonymous_id,
        event_id,
        array_size(parse_json(links)) as link_count
    from analytics.analytics.staging_integrations_slack_app_link_shared
)
, workspace_connect as (
select
    l.slack_user_id,
    l.slack_team_id,
    split(l.source,'?')[0]::varchar as source,
    l.segment_timestamp_utc as link_timestamp_utc
from analytics.analytics.base_integrations_slack_connect_link l
where l.source='newly_connected_workspace_connect_prompt'
)
, user_connect_prompts as (
select 
    anonymous_id,
    slack_user_id,
    slack_team_id,
    segment_timestamp_utc as user_connect_prompt_utc,
    source
from analytics.analytics.staging_integrations_slack_app_link_shared_connect_prompt_sent
)
, publish_nudges as (
select 
s.anonymous_id,
s.user_id,
s.slack_user_id,
s.slack_team_id,
parse_json(s.video_info)[0]['id']::varchar as video_id,
s.segment_timestamp_utc as publish_nudge_shown_utc,
a.segment_timestamp_utc as publish_nudge_accepted_utc,
m.segment_timestamp_utc as publish_nudge_muted_utc,
d.segment_timestamp_utc as publish_nudge_dismissed_utc
from analytics.analytics.staging_integrations_slack_app_publish_nudge_shown s
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_accepted a
    on a.user_id = s.user_id
    and parse_json(a.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and a.segment_timestamp_utc >>= s.segment_timestamp_utc
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_muted m
    on m.user_id = s.user_id
    and parse_json(m.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and m.segment_timestamp_utc >>= s.segment_timestamp_utc
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_dismissed d
    on d.user_id = s.user_id
    and parse_json(d.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and d.segment_timestamp_utc >>= s.segment_timestamp_utc
)
, invite_nudges as (
select 
s.anonymous_id,
s.user_id,
s.slack_user_id,
s.slack_team_id,
s.is_channel_public,
s.segment_timestamp_utc as invite_nudge_shown_utc,
i.segment_timestamp_utc as invite_sent_via_nudge_utc,
array_size(parse_json(invitees)) as invite_count,
d.segment_timestamp_utc as invite_nudge_declined_utc
from analytics.analytics.staging_integrations_slack_app_invite_nudge_shown s
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_invites_sent i
    on i.user_id = s.user_id
    and i.segment_timestamp_utc >>= s.segment_timestamp_utc
    and i.segment_timestamp_utc <<= dateadd('min',15,s.segment_timestamp_utc)
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_declined d
    on d.user_id = s.user_id
    and d.segment_timestamp_utc >>= s.segment_timestamp_utc
    and d.segment_timestamp_utc <<= dateadd('min',15,s.segment_timestamp_utc)
)
, permission_granted as (
select
s.slack_team_id,
s.slack_user_id,
min(cc.segment_timestamp_utc) as grant_permission_utc
from analytics.analytics.staging_integrations_slack_app_link_shared_update_scopes_connect_sent s
left join  analytics.analytics.staging_integrations_slack_app_link_shared_update_scopes_connect c
    on c.slack_user_id = s.slack_user_id
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
left join analytics.analytics.base_integrations_slack_connect_callback cc
    on cc.slack_user_id = s.slack_user_id
    and cc.slack_team_id = s.slack_team_id
    and cc.segment_timestamp_utc >>= s.segment_timestamp_utc
    and cc.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
group by 1,2
)
, received_link_and_joined as (
select
    s.slack_user_id,
    s.slack_team_id,
    min(cc.segment_timestamp_utc) as receiver_granted_utc,
    min(cl.segment_timestamp_utc) as receiver_connected_utc,
    count(distinct s.member) as receiver_count
from analytics.analytics.staging_integrations_slack_app_link_shared_receivers_with_loom_account_connect_sent s
left join analytics.analytics.staging_integrations_slack_app_link_shared_receivers_with_loom_account_connect c
    on c.slack_user_id = s.member
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
left join analytics.analytics.base_integrations_slack_connect_callback cc
    on cc.slack_user_id = c.slack_user_id
    and cc.slack_team_id = c.slack_team_id
    and cc.segment_timestamp_utc >>= c.segment_timestamp_utc
    and cc.segment_timestamp_utc <<= dateadd('min',10,c.segment_timestamp_utc)
    and cc.source = 'link_shared_update_scopes_connect_prompt'
left join analytics.analytics.base_integrations_slack_connect_link cl
    on cl.slack_user_id = c.slack_user_id
    and cl.slack_team_id = c.slack_team_id
    and cl.segment_timestamp_utc >>= c.segment_timestamp_utc
    and cl.segment_timestamp_utc <<= dateadd('min',10,c.segment_timestamp_utc)
    and cl.source = 'link_shared_update_scopes_connect_prompt'
group by 1,2
)
, first_scope_update as (
select
    slack_user_id,
    slack_team_id,
    min(segment_timestamp_utc) as first_scope_update_utc
from analytics.analytics.base_integrations_slack_connect_callback
where source in ('link_shared_update_scopes_connect_prompt')
group by 1,2
)
, final_data as (
    select    
        ls.is_channel_public,
        ls.is_sender_connected,
        ls.share_bucket,
        ls.segment_timestamp_utc as link_share_utc,
        ls.slack_user_id,
        ls.slack_team_id,
        ls.anonymous_id,
        ls.link_count,
        ls.event_id as link_share_event_id,
    
        max(case when fsu.slack_user_id is not null then 'Y' else 'N' end) as updated_scopes_yn,

        min(wc.link_timestamp_utc) as workspace_connect_link_utc,

        min(pn.publish_nudge_shown_utc) as publish_nudge_shown_utc,
        min(pn.publish_nudge_accepted_utc) as publish_nudge_accepted_utc,
        min(pn.publish_nudge_muted_utc) as publish_nudge_muted_utc,
        min(pn.publish_nudge_dismissed_utc) as publish_nudge_dismissed_utc,

        min(i.invite_nudge_shown_utc) as invite_nudge_shown_utc,
        min(i.invite_sent_via_nudge_utc) as invite_sent_via_nudge_utc,
        max(i.invite_count) as invite_count,
        min(i.invite_nudge_declined_utc) as invite_nudge_declined_utc,

        min(scp.user_connect_prompt_utc) as sender_connect_prompt_utc,
    
        min(pg.grant_permission_utc) as grant_permission_utc,
    
        min(rlj.receiver_connected_utc) as receiver_connected_utc,
        min(rlj.receiver_granted_utc) as receiver_granted_utc,
        min(rlj.receiver_count) as receiver_count
    
    from link_shares ls
    left join workspace_connect wc
        on wc.slack_user_id = ls.slack_user_id
        and wc.slack_team_id = ls.slack_team_id
        and wc.link_timestamp_utc >>= ls.segment_timestamp_utc
        and wc.link_timestamp_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join user_connect_prompts scp
        on scp.slack_user_id = ls.slack_user_id
        and scp.slack_team_id = ls.slack_team_id
        and scp.user_connect_prompt_utc >>= ls.segment_timestamp_utc
        and scp.user_connect_prompt_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join publish_nudges pn
        on pn.slack_user_id = ls.slack_user_id
        and pn.slack_team_id = ls.slack_team_id
        and pn.publish_nudge_shown_utc >>= ls.segment_timestamp_utc
        and pn.publish_nudge_shown_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join invite_nudges i
        on i.slack_user_id = ls.slack_user_id
        and i.slack_team_id = ls.slack_team_id
        and i.invite_nudge_shown_utc >>= ls.segment_timestamp_utc
        and i.invite_nudge_shown_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join permission_granted pg
        on pg.slack_user_id = ls.slack_user_id
        and pg.slack_team_id = ls.slack_team_id
        and pg.grant_permission_utc >>= ls.segment_timestamp_utc
        and pg.grant_permission_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join received_link_and_joined rlj
        on rlj.slack_user_id = ls.slack_user_id
        and rlj.slack_team_id = ls.slack_team_id
        and rlj.receiver_connected_utc >>= ls.segment_timestamp_utc
        and rlj.receiver_connected_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join first_scope_update fsu
        on fsu.slack_user_id = ls.slack_user_id
        and fsu.slack_team_id = ls.slack_team_id
        and fsu.first_scope_update_utc <<= ls.segment_timestamp_utc
    group by 1,2,3,4,5,6,7,8,9
)
select * from final_data
2023-10-19 10:53:01,971 — exposurescrawler — DEBUG —  ❌ Slack Connect Event Tracking: found no models
2023-10-19 10:53:01,971 — exposurescrawler — INFO — ⚙️ Found 2 workbooks with linked models
local
2023-10-19 10:53:04,412 — exposurescrawler — INFO — 
2023-10-19 10:53:04,412 — exposurescrawler — INFO — 🔍 Parsing GraphQL result: looking for native SQL tables
2023-10-19 10:53:04,412 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_SUGGESTION_JOINS] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Workspace Consolidation | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS] => ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Workspace Consolidation | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Go/ROI-Dash | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Go/ROI-Dash | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_INVITATIONS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_ROLE_CHANGES] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_STANDARD_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:53:04,413 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[SPRIG_SURVEY_RESPONSES] => ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Sprig Survey Responses (Prototype) | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_vfvers
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_seats
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viral_looms
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viewers
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
2023-10-19 10:53:04,414 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_GOOGLE_SEARCH_ROI] => ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Marketing ROI | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CHANNEL_ROI] => ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Marketing ROI | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DAGSTER_PIPELINES].[DAGSTER_PIPELINE_RUNS] => ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Dagster Runs | adding native SQL: ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EMAIL_AB_PERFORMANCE] => ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
2023-10-19 10:53:04,415 — exposurescrawler — DEBUG —  ➕ Marketing Email AB Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Marketing Email AB Dashboard | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_PAID_SDK_PARTNER_USAGE_BY_DAY] => ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ InfraSDK Invoice Data | adding native SQL: ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_FIRST_VIEWS
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS_DEV.DBT_KAMRAN.REPORTING_TRAFFIC
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:53:04,416 — exposurescrawler — DEBUG —  ➕ Net MRR Expansion Rate | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[ACTIVITY_BY_WORKSPACE_BY_MONTH] => ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_RAYMOND].[FACT_ORGANIZATION_MEMBERSHIPS_HISTORY] => ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[TOP_REFERRERS] => ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Referrals WIP | adding native SQL: ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_USAGE] => ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_CLIP_DISTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_COMPLETE_RATE_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_CLIP_STATS] => ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PERC_EDIT_RECORDING_AND_RECORDER] => ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[CREATOR_LITE_LIMITS_DATA] => ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Creator Lite LImits | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY_BY_USER] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ Virality Performance Dashboard (go/virality-performance) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_SUBSCRIPTIONS] => ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICE_LINE_ITEMS
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_ACCOUNT] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALESFORCE_USER] => ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
2023-10-19 10:53:04,417 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_CUSTOMERS] => ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_INVOICES] => ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_PARTNER_SOURCING] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Partner Sourcing | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_OPPORTUNITY] => ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Sales Pipeline Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_STRIPE_DISCOUNT_REDEMPTIONS] => ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Stripe Coupons Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ webform metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FUNNEL_WEBFORMS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MIUROS_SUPPORT_QA] => ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Support QA Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ SDK Summary Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PLAN_TYPE_ENGAGEMENT] => ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Plan Type Reporting | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
2023-10-19 10:53:04,418 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_revenue_metrics
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viral_looms
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viewers
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_seats
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_vfvers
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_sales_metrics
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Traffic | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Traffic | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ nithin-poc | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_WORKSPACE_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_RECORDING] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_VIDEO_VIEW] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_CORINNA].[REPORTING_CREATE_FUNNEL_OVERALL] => ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —  ➕ Create Funnel (WIP) | adding native SQL: ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:53:04,419 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_CORINNA].[REPORTING_CREATE_FUNNEL_RECORDING_START] => ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Create Funnel (WIP) | adding native SQL: ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAIN_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAINS_AGGR] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACE_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAINS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_EXPANSION] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_HEALTH] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_HEALTH] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_STRAGGLER_USERS] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[REPORTING_ACTIVE_FREQUENCY_SEGMENTATION] => ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Activity Frequency Segments | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER].[REPORTING_RETENTION] => ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 10:53:04,420 — exposurescrawler — DEBUG —  ➕ Weekly Cohorts DEV, DATA DOESN'T UPDATE | adding native SQL: ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding native SQL: analytics.analytics.fact_recording_ttv
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Depth Of Retention Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Depth Of Retention Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Monthly ARR Movement Summary | adding native SQL: analytics.analytics.reporting_mrr_movement_by_customer
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER_ADHOC].[REPORTING_BRAND] => ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Brand Summary | adding native SQL: ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[SDK_SIGNUP_CONVERSION_SPEED] => ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ SDK Signup Conversion Speed | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACE_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAIN_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_USER_ADOPTION] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Adoption Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_USER_VIDEOS] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ Adoption Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,421 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Support | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ZENDESK_TICKET_RESPONSES] => ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Support | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Marketing Site Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_APP_WORKSPACE_SETTINGS] => ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Workspace Settings | adding native SQL: ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEHAN].[REPORTING_HV_SALES_ASSIST] => ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ HV  Performance Summary (Adhoc) | adding native SQL: ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_KPI_FOUNDATION] => ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:53:04,422 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_AGGREGATE] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_experiments
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_AB_METRICS_LIST] => ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_metric_percentiles
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEHAN].[USER_ENGAGEMENT_CLASSIFICATION] => ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ engagement prototype | adding native SQL: ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_CONNECT_INIT] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY] => ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY] => ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 10:53:04,423 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.staging_salesforce_account => ANALYTICS.analytics.staging_salesforce_account
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.analytics.staging_salesforce_account
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: analytics.analytics.staging_salesforce_workspace
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_INVOICES
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.stripe_plans
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.base_salesforce_user => ANALYTICS.analytics.base_salesforce_user
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.analytics.base_salesforce_user
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION_MEMBERSHIPS_HISTORY] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Total Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Total Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Sales Led MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[ORGANIZATION_SEATS_PREDICTIONS] => ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Churn Forecasting | adding native SQL: ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[MRR_BY_SUBSCRIPTION_BY_WEEK] => ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Churn Forecasting | adding native SQL: ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_ENGAGEMENT_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Engagement Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRACKS_COUNT] => ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Event Totals | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[CURRENT_TRACKS_EVENT_COUNT] => ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Event Totals | adding native SQL: ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SIGNUP_PAGE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 10:53:04,424 — exposurescrawler — DEBUG —  ➕ Signup Page Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_metric_active_users_unioned
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.days
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_self_serve_mrr_by_customer_by_month
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.days
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SCORE_CARDS] => ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_metric_video_first_views_unioned
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_USERS] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_FOLDERS] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_WORKSPACES] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENGAGEMENT_SEGMENTATION] => ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Creator Engagement | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_OKRS] => ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Creator Engagement | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_CONTENT_DENSITY] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_USAGE] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
2023-10-19 10:53:04,425 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_TAGS_HEATMAP] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ENGAGEMENT_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_WORKSPACE_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ACQUISITION_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ACTIVATION_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACTIVE_USERS_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Active Users Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN:  => raw.website.
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: raw.website.
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN:  => analytics.analytics.
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: analytics.analytics.
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[AB_ANON_USER_LEVEL_METRICS] => ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_CAM_FRAMES_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Cam Frames Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_AB_METRICS_LIST] => ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
2023-10-19 10:53:04,426 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_metric_percentiles
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.base_ab_experiments
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DAILY_VIEWING] => ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Create Daily Active Tableau  | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DAILY_ACTIVE] => ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Create Daily Active Tableau  | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —  ➕ Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,427 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[SHARED_MODAL_PIVOTED_RESULTS] => ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Shared Modal AB Fast Follows | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE] => ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Organic Search Traffic | adding native SQL: ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - New | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - New | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_HOME_PAGE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Home Page Analysis Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_SDK_SUMMARY] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ SEO Dashboard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_GOOGLE_SEARCH_SEO] => ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ SEO Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[REPORTING_USER_SEGMENTATION_2023_PLANNING] => ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ 2023_Planning_User_Segments | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Behavioral Insights | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_CAM_FRAMES_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Cam Frames - V2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_RECENT_ACTIVITY_PAGE] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Recent Activity Feature - Rollout Engagement | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER_ADHOC].[REPORTING_BRAND] => ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Brand | adding native SQL: ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_APP_ORGANIZATIONS_MEMBERSHIPS] => ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Workspace Engagement Dashboard (go/workspace-engagement-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ Workspace Engagement Dashboard (go/workspace-engagement-dash) | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_SDK_SUMMARY] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,428 — exposurescrawler — DEBUG —  ➕ SDK Standard Summary | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_VALIDATION].[SNAPSHOT_DELTAS] => ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Delta Validation Dashboard | adding native SQL: ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_VALIDATION].[DAILY_VALIDATION_DELTAS] => ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Delta Validation Dashboard | adding native SQL: ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_HV_SALES_ASSIST] => ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ HVSM  Performance Summary | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF].[USER_POOL_WITH_POST_ENGAGEMENT_INFO] => ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ 2022 Planning - P&P: Impact of Recording Limits | adding native SQL: ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_KPI_FOUNDATION] => ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_AGGREGATE] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.fact_video_views => ANALYTICS.analytics.fact_video_views
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding native SQL: ANALYTICS.analytics.fact_video_views
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_FOR_STARTUPS_PROGRAM] => ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_FOR_STARTUPS_PROGRAM] => ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:53:04,429 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PARTNER_SOURCING] => ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Partner Sourcing | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SIGNUP_METRICS] => ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_STATS] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_MRR] => ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_OVERALL] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACCOUNT_OVERVIEW] => ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_ACCOUNT_ACTIVITY] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_ACCOUNT_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT] => ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_INVITES] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CONTACT_IMPORTS] => ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CONTACT_IMPORT_ENTRYPOINTS] => ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 10:53:04,430 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: analytics.analytics.stripe_subscription_events
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_STRIPE_CUSTOMER_BALANCE_TRANSACTIONS
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_IVFV_TEST] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[INTEGRATION_RECORDINGS_VIEWS_TEST_6] => ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_MRR] => ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ENGAGEMENT] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
2023-10-19 10:53:04,431 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ACTION] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_PERMISSION] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SIGNUP_METRICS] => ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ACTION_FLOW] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_INVITATIONS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_STANDARD_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_ROLE_CHANGES] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_COMPARABLE_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.staging_stripe_trial_starts
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_workspace_by_day
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_by_subscription_by_day
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_week
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LTV] => ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_user_by_workspace_by_day
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.staging_nodejs_auto_join_workspace
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_day
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACCOUNT_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
2023-10-19 10:53:04,432 — exposurescrawler — DEBUG —  ➕ CSM Managed Account Metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_WORKSPACE_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ CSM Managed Account Metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_RECORDING_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: ANALYTICS_intermediate.intermediate_active_work_users_with_mobile => ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS] => ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_MAWU] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_NOTIFICATION_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_VIEWERS_AND_RECORDERS] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOMHQ_ACTIVE_USERS] => ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
2023-10-19 10:53:04,433 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_WORKSPACE_DENSITY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Self Serve MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Domain Retention | adding native SQL: analytics.analytics.fact_mrr_movement_by_domain_by_day
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ ARR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_self_serve_mrr_by_customer_by_month
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.days
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SCORE_CARDS] => ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED] => ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_day
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_recorders_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_recordings_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_active_users_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_revenue_by_month
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_habit_moment_users_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_activated_work_signups_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_signups_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_video_views_unioned
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_domain_with_active_users_by_week
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Domain MRR | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_NPS_SURVEY_RESPONSES] => ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ NPS | adding native SQL: ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FEATURE_USAGE_BY_POWER_USER_GROUP_20230615] => ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Feature Usage by Power User Group | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FEATURE_USAGE_BY_POWER_USER_GROUP_20221214] => ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Feature Usage by Power User Group | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[CREATOR_LITE_TEMP_20220412] => ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Member Video Limits | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,434 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANDRILL_EMAIL_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Mandrill Emails Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LTV] => ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ LTV | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ MRR Analysis | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ MRR Analysis | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FORECAST] => ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Forecast | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ MRR Movement Demo 2022-05 | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[VIDEO_VIEWED] => ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ Views by Device | adding native SQL: ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH" => ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 10:53:04,435 — exposurescrawler — DEBUG —  ➕ MRR Exports | adding native SQL: ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 10:53:04,436 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,436 — exposurescrawler — DEBUG —  ➕ Experiment Timeline | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,436 — exposurescrawler — INFO — 🔍 Found 136 workbooks with native SQL
2023-10-19 10:53:04,436 — exposurescrawler — INFO — ⚙️ Parsing SQL: looking for references to models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 10:53:04,438 — exposurescrawler — DEBUG —  ❌ Workspace Consolidation: found no models
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,439 — exposurescrawler — DEBUG —  ❌ Go/ROI-Dash: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:53:04,442 — exposurescrawler — DEBUG —  ❌ Creator Lite Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 10:53:04,443 — exposurescrawler — DEBUG —  ❌ Sprig Survey Responses (Prototype): found no models
ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
analytics.analytics.reporting_executive_dashboard_top_vfvers
analytics.analytics.reporting_executive_dashboard_domains_with_seats
analytics.analytics.reporting_executive_dashboard_top_viral_looms
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_viewers
analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_recorders
ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 10:53:04,454 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 10:53:04,455 — exposurescrawler — DEBUG —  ❌ Marketing ROI: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,460 — exposurescrawler — DEBUG —  ❌ Lifecycle OKR Dashboard: found no models
ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 10:53:04,461 — exposurescrawler — DEBUG —  ❌ Dagster Runs: found no models
ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,462 — exposurescrawler — DEBUG —  ❌ Marketing Email AB Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:53:04,466 — exposurescrawler — DEBUG —  ❌ Growth OKR Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS_ADHOC.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,468 — exposurescrawler — DEBUG —  ❌ attribution backup: found no models
ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 10:53:04,468 — exposurescrawler — DEBUG —  ❌ InfraSDK Invoice Data: found no models
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_FIRST_VIEWS
2023-10-19 10:53:04,469 — exposurescrawler — DEBUG —  ❌ Integration VFVs: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS_DEV.DBT_KAMRAN.REPORTING_TRAFFIC
2023-10-19 10:53:04,470 — exposurescrawler — DEBUG —  ❌ traffic dashboards with dev source: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:53:04,470 — exposurescrawler — DEBUG —  ❌ Net MRR Expansion Rate: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:53:04,473 — exposurescrawler — DEBUG —  ❌ Workspace Lookup v2: found no models
ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 10:53:04,473 — exposurescrawler — DEBUG —  ❌ Referrals WIP: found no models
ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 10:53:04,475 — exposurescrawler — DEBUG —  ❌ Create Trim and Add Clip (6): found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 10:53:04,476 — exposurescrawler — DEBUG —  ❌ Creator Lite LImits: found no models
ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 10:53:04,476 — exposurescrawler — DEBUG —  ❌ Virality Performance Dashboard (go/virality-performance): found no models
ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICE_LINE_ITEMS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:53:04,479 — exposurescrawler — DEBUG —  ❌ STRIPE INVOICES: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 10:53:04,479 — exposurescrawler — DEBUG —  ❌ Partner Sourcing: found no models
ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 10:53:04,480 — exposurescrawler — DEBUG —  ❌ Sales Pipeline Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 10:53:04,480 — exposurescrawler — DEBUG —  ❌ Stripe Coupons Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 10:53:04,482 — exposurescrawler — DEBUG —  ❌ Notification Events: found no models
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:53:04,483 — exposurescrawler — DEBUG —  ❌ TTV Experiment Tracking: found no models
ANALYTICS.ANALYTICS.REPORTING_FUNNEL_WEBFORMS
2023-10-19 10:53:04,484 — exposurescrawler — DEBUG —  ❌ webform metrics: found no models
ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 10:53:04,484 — exposurescrawler — DEBUG —  ❌ Support QA Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,484 — exposurescrawler — DEBUG —  ❌ SDK Summary Dashboard: found no models
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 10:53:04,487 — exposurescrawler — DEBUG —  ❌ Influencers & Network health dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 10:53:04,487 — exposurescrawler — DEBUG —  ❌ Plan Type Reporting: found no models
analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
analytics.analytics.reporting_executive_dashboard_revenue_metrics
ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
analytics.analytics.reporting_executive_dashboard_top_recorders
analytics.analytics.reporting_executive_dashboard_top_viral_looms
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
analytics.analytics.reporting_executive_dashboard_top_viewers
analytics.analytics.reporting_executive_dashboard_domains_with_seats
analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
analytics.analytics.reporting_executive_dashboard_top_vfvers
analytics.analytics.reporting_executive_dashboard_sales_metrics
2023-10-19 10:53:04,495 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,496 — exposurescrawler — DEBUG —  ❌ Traffic: found no models
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,496 — exposurescrawler — DEBUG —  ❌ nithin-poc: found no models
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 10:53:04,498 — exposurescrawler — DEBUG —  ❌ Company View: found no models
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 10:53:04,499 — exposurescrawler — DEBUG —  ❌ Integration Dashboard: found no models
ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 10:53:04,500 — exposurescrawler — DEBUG —  ❌ Create Funnel (WIP): found no models
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,504 — exposurescrawler — DEBUG —  ❌ Sales Dash (go/sales-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 10:53:04,506 — exposurescrawler — DEBUG —  ❌ Workspace Teams Product Pillar Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 10:53:04,506 — exposurescrawler — DEBUG —  ❌ Activity Frequency Segments: found no models
ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 10:53:04,507 — exposurescrawler — DEBUG —  ❌ Weekly Cohorts DEV, DATA DOESN'T UPDATE: found no models
analytics.analytics.fact_recording_ttv
2023-10-19 10:53:04,507 — exposurescrawler — DEBUG —  ❌ Recording Stability Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 10:53:04,508 — exposurescrawler — DEBUG —  ❌ Depth Of Retention Dashboard: found no models
analytics.analytics.reporting_mrr_movement_by_customer
2023-10-19 10:53:04,508 — exposurescrawler — DEBUG —  ❌ Monthly ARR Movement Summary: found no models
ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:53:04,509 — exposurescrawler — DEBUG —  ❌ Brand Summary: found no models
ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 10:53:04,509 — exposurescrawler — DEBUG —  ❌ SDK Signup Conversion Speed: found no models
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:53:04,512 — exposurescrawler — DEBUG —  ❌ Customer Success Dash (go/cs-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 10:53:04,513 — exposurescrawler — DEBUG —  ❌ Adoption Analysis: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,514 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - Future State: found no models
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:53:04,518 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard (go/enterprise-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 10:53:04,519 — exposurescrawler — DEBUG —  ❌ Support: found no models
ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 10:53:04,519 — exposurescrawler — DEBUG —  ❌ Marketing Site Analysis: found no models
ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 10:53:04,520 — exposurescrawler — DEBUG —  ❌ Workspace Settings: found no models
ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 10:53:04,520 — exposurescrawler — DEBUG —  ❌ HV  Performance Summary (Adhoc): found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
ANALYTICS.ANALYTICS.REPORTING_VIRALITY
ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:53:04,522 — exposurescrawler — DEBUG —  ❌ Leadership Dashboard: found no models
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_experiments
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
analytics.analytics.reporting_experiment_ab_bayes_summary
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
analytics.analytics.reporting_experiment_ab_metric_percentiles
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:53:04,527 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard - A/A Experiments: found no models
ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 10:53:04,528 — exposurescrawler — DEBUG —  ❌ engagement prototype: found no models
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 10:53:04,532 — exposurescrawler — DEBUG —  ❌ Slack Integration Dashboard: found no models
ANALYTICS.analytics.staging_salesforce_account
analytics.analytics.staging_salesforce_workspace
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
ANALYTICS.ANALYTICS.STRIPE_INVOICES
ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
ANALYTICS.ANALYTICS.stripe_plans
ANALYTICS.analytics.base_salesforce_user
ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
analytics.analytics.fact_organization
2023-10-19 10:53:04,535 — exposurescrawler — DEBUG —  ❌ Sales Led Accounts Receivables Report: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:53:04,537 — exposurescrawler — DEBUG —  ❌ Workspace Stats: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,537 — exposurescrawler — DEBUG —  ❌ Total Signups: found no models
ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,538 — exposurescrawler — DEBUG —  ❌ Sales Led MRR Movement Yesterday: found no models
ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 10:53:04,539 — exposurescrawler — DEBUG —  ❌ Churn Forecasting: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 10:53:04,539 — exposurescrawler — DEBUG —  ❌ Engagement Events: found no models
ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 10:53:04,540 — exposurescrawler — DEBUG —  ❌ Event Totals: found no models
ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 10:53:04,540 — exposurescrawler — DEBUG —  ❌ Signup Page Analysis: found no models
analytics.analytics.fact_user
analytics.analytics.reporting_metric_active_users_unioned
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
analytics.analytics.fact_self_serve_mrr_by_customer_by_month
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
analytics.analytics.fact_user
analytics.analytics.reporting_metric_video_first_views_unioned
analytics.analytics.reporting_score_card_goals
2023-10-19 10:53:04,544 — exposurescrawler — DEBUG —  ❌ Self-Serve Pacing Scorecard: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
ANALYTICS.ANALYTICS.FACT_USER
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,547 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - Legacy: found no models
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 10:53:04,548 — exposurescrawler — DEBUG —  ❌ Folder Structure: found no models
ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 10:53:04,549 — exposurescrawler — DEBUG —  ❌ Creator Engagement: found no models
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 10:53:04,551 — exposurescrawler — DEBUG —  ❌ Destination Usage: found no models
ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 10:53:04,552 — exposurescrawler — DEBUG —  ❌ Overall Product Health Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 10:53:04,553 — exposurescrawler — DEBUG —  ❌ Active Users Dashboard: found no models
raw.website.
analytics.analytics.
ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 10:53:04,554 — exposurescrawler — DEBUG —  ❌ Record a Reply (Anonymous) Custom Metrics: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:53:04,554 — exposurescrawler — DEBUG —  ❌ Cam Frames Events: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 10:53:04,556 — exposurescrawler — DEBUG —  ❌ Transcription Events: found no models
ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
analytics.analytics.reporting_experiment_ab_metric_percentiles
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_experiments
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:53:04,561 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard: found no models
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,565 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard (go-enterprise-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 10:53:04,566 — exposurescrawler — DEBUG —  ❌ Create Daily Active Tableau : found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:53:04,566 — exposurescrawler — DEBUG —  ❌ Signups: found no models
ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 10:53:04,567 — exposurescrawler — DEBUG —  ❌ Shared Modal AB Fast Follows: found no models
ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 10:53:04,567 — exposurescrawler — DEBUG —  ❌ Organic Search Traffic: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:53:04,568 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - New: found no models
ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 10:53:04,569 — exposurescrawler — DEBUG —  ❌ Home Page Analysis Dashboard: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,569 — exposurescrawler — DEBUG —  ❌ SDK Dashboard: found no models
ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 10:53:04,570 — exposurescrawler — DEBUG —  ❌ SEO Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 10:53:04,570 — exposurescrawler — DEBUG —  ❌ 2023_Planning_User_Segments: found no models
ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 10:53:04,571 — exposurescrawler — DEBUG —  ❌ Behavioral Insights: found no models
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:53:04,572 — exposurescrawler — DEBUG —  ❌ Slack Integration Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:53:04,572 — exposurescrawler — DEBUG —  ❌ Cam Frames - V2: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 10:53:04,573 — exposurescrawler — DEBUG —  ❌ Recent Activity Feature - Rollout Engagement: found no models
ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:53:04,573 — exposurescrawler — DEBUG —  ❌ Brand: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,574 — exposurescrawler — DEBUG —  ❌ MRR Movement Yesterday: found no models
ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,574 — exposurescrawler — DEBUG —  ❌ Workspace Engagement Dashboard (go/workspace-engagement-dash): found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:53:04,575 — exposurescrawler — DEBUG —  ❌ SDK Standard Summary: found no models
ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 10:53:04,575 — exposurescrawler — DEBUG —  ❌ Delta Validation Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 10:53:04,576 — exposurescrawler — DEBUG —  ❌ HVSM  Performance Summary: found no models
ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 10:53:04,576 — exposurescrawler — DEBUG —  ❌ 2022 Planning - P&P: Impact of Recording Limits: found no models
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
ANALYTICS.ANALYTICS.REPORTING_VIRALITY
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:53:04,579 — exposurescrawler — DEBUG —  ✅ leadership_dev: found models ['ANALYTICS_DEV.analytics.reporting_kpi_foundation']
ANALYTICS.analytics.fact_video_views
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:53:04,579 — exposurescrawler — DEBUG —  ❌ Product Marketing: found no models
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:53:04,581 — exposurescrawler — DEBUG —  ❌ TTV Stability Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:53:04,583 — exposurescrawler — DEBUG —  ❌ Loom For Startups Program: found no models
ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 10:53:04,583 — exposurescrawler — DEBUG —  ❌ Partner Sourcing: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:53:04,585 — exposurescrawler — DEBUG —  ❌ Strategic SDK Partner Monthly Reports: found no models
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 10:53:04,587 — exposurescrawler — DEBUG —  ❌ Create Funnel: found no models
ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 10:53:04,588 — exposurescrawler — DEBUG —  ❌ Managed Accounts: found no models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 10:53:04,590 — exposurescrawler — DEBUG —  ❌ Contact Imports: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:53:04,594 — exposurescrawler — DEBUG —  ❌ Growth OKR Dashboard: found no models
analytics.analytics.stripe_subscription_events
ANALYTICS.ANALYTICS.REPORTING_STRIPE_CUSTOMER_BALANCE_TRANSACTIONS
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 10:53:04,595 — exposurescrawler — DEBUG —  ❌ Customer Balance as of Date: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 10:53:04,596 — exposurescrawler — DEBUG —  ❌ Integration VFVs: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,597 — exposurescrawler — DEBUG —  ❌ Attribution: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:53:04,600 — exposurescrawler — DEBUG —  ❌ SDK Dashboard: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 10:53:04,602 — exposurescrawler — DEBUG —  ❌ Creator Lite Dashboard: found no models
analytics.analytics.staging_stripe_trial_starts
analytics.analytics.fact_workspace_by_day
analytics.analytics.fact_organization
ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
analytics.analytics.fact_mrr_by_subscription_by_day
ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
analytics.analytics.fact_mrr_movement_by_customer_by_week
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
analytics.analytics.fact_mrr_movement_by_customer_by_month
ANALYTICS.ANALYTICS.REPORTING_LTV
analytics.analytics.fact_user_by_workspace_by_day
analytics.analytics.staging_nodejs_auto_join_workspace
analytics.analytics.fact_organization
analytics.analytics.fact_mrr_movement_by_customer_by_day
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:53:04,608 — exposurescrawler — DEBUG —  ❌ Monetization KPIs: found no models
ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 10:53:04,609 — exposurescrawler — DEBUG —  ❌ CSM Managed Account Metrics: found no models
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown
2023-10-19 10:53:04,611 — exposurescrawler — DEBUG —  ❌ Slack Connect Event Tracking: found no models
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 10:53:04,617 — exposurescrawler — DEBUG —  ❌ Mobile Health Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 10:53:04,618 — exposurescrawler — DEBUG —  ❌ Loom_Product_CompanyPillar_2022H2: found no models
ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:53:04,619 — exposurescrawler — DEBUG —  ❌ Self Serve MRR Movement Yesterday: found no models
analytics.analytics.fact_mrr_movement_by_domain_by_day
2023-10-19 10:53:04,619 — exposurescrawler — DEBUG —  ❌ Domain Retention: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:53:04,619 — exposurescrawler — DEBUG —  ❌ ARR Movement Yesterday: found no models
analytics.analytics.fact_self_serve_mrr_by_customer_by_month
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
analytics.analytics.fact_user
analytics.analytics.reporting_score_card_goals
analytics.analytics.fact_organization
analytics.analytics.fact_mrr_movement_by_customer_by_day
analytics.analytics.reporting_metric_recorders_unioned
analytics.analytics.reporting_metric_recordings_unioned
analytics.analytics.reporting_metric_active_users_unioned
analytics.analytics.reporting_metric_revenue_by_month
analytics.analytics.reporting_metric_habit_moment_users_unioned
analytics.analytics.reporting_metric_activated_work_signups_unioned
analytics.analytics.reporting_metric_signups_unioned
analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
analytics.analytics.reporting_metric_video_views_unioned
analytics.analytics.reporting_metric_domain_with_active_users_by_week
analytics.analytics.fact_user
analytics.analytics.reporting_score_card_goals
analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:53:04,628 — exposurescrawler — DEBUG —  ✅ Topline Metric: found models ['ANALYTICS_DEV.analytics.reporting_metric_video_first_views_unioned']
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:53:04,628 — exposurescrawler — DEBUG —  ❌ Domain MRR: found no models
ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 10:53:04,629 — exposurescrawler — DEBUG —  ❌ NPS: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 10:53:04,630 — exposurescrawler — DEBUG —  ❌ Feature Usage by Power User Group: found no models
ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 10:53:04,630 — exposurescrawler — DEBUG —  ❌ Member Video Limits: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:53:04,631 — exposurescrawler — DEBUG —  ❌ Attribution: found no models
ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 10:53:04,631 — exposurescrawler — DEBUG —  ❌ Mandrill Emails Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:53:04,631 — exposurescrawler — DEBUG —  ❌ LTV: found no models
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:53:04,636 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard Scorecard: found no models
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:53:04,637 — exposurescrawler — DEBUG —  ❌ MRR Analysis: found no models
ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 10:53:04,637 — exposurescrawler — DEBUG —  ❌ Forecast: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 10:53:04,637 — exposurescrawler — DEBUG —  ❌ MRR Movement Demo 2022-05: found no models
ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 10:53:04,638 — exposurescrawler — DEBUG —  ❌ Views by Device: found no models
ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 10:53:04,638 — exposurescrawler — DEBUG —  ❌ MRR Exports: found no models
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:53:04,638 — exposurescrawler — DEBUG —  ❌ Experiment Timeline: found no models
2023-10-19 10:53:04,638 — exposurescrawler — INFO — ⚙️ Found 2 workbooks with linked models
2023-10-19 10:53:04,639 — exposurescrawler — INFO — 
2023-10-19 10:53:04,639 — exposurescrawler — INFO — 💡 Results merged: 2 + 2 = 4 workbooks
2023-10-19 10:53:04,639 — exposurescrawler — INFO — 
2023-10-19 10:53:04,639 — exposurescrawler — INFO — 🌏 Retrieving workbooks and authors metadata from the Tableau REST API
tableau_viewerx_funnel_core_metrics_monitoring
/Users/sandhya.yadav/Desktop/git-repo/dbt/loom-dbt/models/exposures/tableau_viewerx_funnel_core_metrics_monitoring.yml
2023-10-19 10:53:14,663 — exposurescrawler — DEBUG — ⏩ Skipping workbook: Record a Reply (Anonymous) Custom Metrics (Dev is ignored)
2023-10-19 10:53:19,454 — exposurescrawler — DEBUG — ⏩ Skipping workbook: leadership_dev (Dev is ignored)
2023-10-19 10:53:24,308 — exposurescrawler — DEBUG — ⏩ Skipping workbook: Topline Metric (Dev is ignored)
2023-10-19 10:53:24,308 — exposurescrawler — INFO — 
2023-10-19 10:53:24,308 — exposurescrawler — INFO — 💾 Writing results to file: ../manifest.json
Signed in successfully!
local
2023-10-19 10:57:48,446 — exposurescrawler — INFO — 🔍 Parsing GraphQL result: looking for custom SQL tables
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Customer MRR Retention | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:57:48,450 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Cash Flow Forecast | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Domain Retention | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ ViewerX Funnel & Core Metrics Monitoring | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ [BETA] - Tableau Cockpit Loom | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Monthly ARR Movement Summary | adding custom SQL
2023-10-19 10:57:48,451 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ ViewerX Funnel & Core Metrics Monitoring | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,452 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ MRR Exports | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 10:57:48,453 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — INFO — 🔍 Found 25 workbooks with custom SQL
2023-10-19 10:57:48,454 — exposurescrawler — INFO — ⚙️ Parsing SQL: looking for references to models
select 
video_id
, user_id
, client
, recording_client
, recording_type
, service
, recording_start_at_utc
, recording_cancelled_at_utc
, recording_stopped_at_utc
, recording_complete_at_utc
, duration_of_completed_video
, coalesce(upload_method, 'us-west-2') as upload_method
, r.country_code
, cc.country_name
, recording_stability_1d
, case when recording_cancelled_at_utc is null then 0 else 1 end as is_not_cancelled
, latency
, speed_test_result
, upload_throughput
, avg_bit_rate
, width * height as video_resolution
, resolution
, ttv_seconds
, ttv_normalized
from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
    on r.country_code = cc.country_code
where coalesce(ttv_seconds,0) >>= 0
and coalesce(ttv_seconds,0) <<= 1200 
and service not in ('desktop')
and coalesce(date(recording_start_at_utc),'2021-01-01') >>= dateadd('day',-91,current_date)
and coalesce(date(recording_start_at_utc),'2021-01-01') << current_date
select 
  sub.*,
  case 
  when date_trunc('week', week) = date_trunc('week', sysdate()) then '2. current week'
  when date_trunc('week', week) = date_trunc('week', sysdate()) - interval '1 week' then '1. previous week'
  else 'error' end as weekly_status
  from (
        select 
          date_trunc('week',recording_start_at_utc) as week,
          service,
          avg(ttv_seconds) as avg_ttv_seconds,
            count(video_id) as video_count
        from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
        left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
            on r.country_code = cc.country_code
        where coalesce(ttv_seconds,0) >>= 0
          and coalesce(ttv_seconds,0) <<= 1200 
          and date_trunc('week', recording_start_at_utc) <<= date_trunc('week', sysdate())
          and date_trunc('week', recording_start_at_utc) >>= date_trunc('week', sysdate()) - interval '1 week'
        group by 1,2
  ) sub
select 
    sub.*,
    case 
    when date_trunc('quarter', quarter) = date_trunc('quarter', sysdate()) then '2. current quarter'
    when date_trunc('quarter', quarter) = date_trunc('quarter', sysdate()) - interval '1 quarter' then '1. previous quarter'
    else 'error' end as quarterly_status
    from (
          select 
            date_trunc('quarter',recording_start_at_utc) as quarter,
            service,
            avg(ttv_seconds) as avg_ttv_seconds
          from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
          left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
              on r.country_code = cc.country_code
          where coalesce(ttv_seconds,0) >>= 0
            and coalesce(ttv_seconds,0) <<= 1200 
            and date_trunc('quarter', recording_start_at_utc) <<= date_trunc('quarter', sysdate())
            and date_trunc('quarter', recording_start_at_utc) >>= date_trunc('quarter', sysdate()) - interval '1 quarter'
          group by 1,2
    ) sub
2023-10-19 10:57:48,464 — exposurescrawler — DEBUG —  ❌ TTV Stability Dashboard: found no models
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, recorder_device order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_total_recorders_by_device
      order by agg_type, recorder_device, date_day)
select *, lag(trailing_4_week) over (partition by agg_type, METRIC_NAME, account_segment order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(METRIC_VALUE, 0))
                                                   OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then SUM(coalesce(METRIC_VALUE, 0))
                                                  OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then SUM(coalesce(METRIC_VALUE, 0))
                                                    OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then SUM(coalesce(METRIC_VALUE, 0))
                                                      OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then SUM(coalesce(METRIC_VALUE, 0))
                                                   OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_sales_metrics
      order by agg_type, account_segment, date_day)
where date_day <<= (select max(date_day) from ANALYTICS.analytics.reporting_executive_dashboard_sales_metrics
where metric_name = 'total_sql')
select *
from analytics.analytics.reporting_executive_dashboard_top_vfvers
select * from analytics.analytics.reporting_executive_dashboard_domains_with_seats
select *
from analytics.analytics.reporting_executive_dashboard_top_viewers
select *
from analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
select *, lag(trailing_4_week) over (partition by agg_type, subservice_category order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then AVG(coalesce(success_rate, 0))
                                                   OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then AVG(coalesce(success_rate, 0))
                                                  OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then AVG(coalesce(success_rate, 0))
                                                    OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then AVG(coalesce(success_rate, 0))
                                                      OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then AVG(coalesce(success_rate, 0))
                                                   OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_recording_stability_metrics
      order by agg_type, subservice_category, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders
select *
from analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, sales_type, user_classification order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from analytics.analytics.reporting_executive_dashboard_revenue_metrics
      order by agg_type, SALES_TYPE, USER_CLASSIFICATION, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, sales_type, user_classification order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from analytics.analytics.reporting_executive_dashboard_metrics
      order by agg_type, SALES_TYPE, USER_CLASSIFICATION, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_viral_looms
select * from analytics.analytics.reporting_executive_dashboard_domains_with_contractions
select "metric_date" as DATE_DAY,
       TIME_FRAME  as AGG_TYPE,
       PLAN,
       FILTER,
       METRIC as METRIC_NAME,
       "metric_value" as METRIC_VALUE,
       YOY_TO_DATE,
       POP_TO_DATE
from ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
where METRIC_VALUE is not null
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
select * from analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
select * from analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:57:48,491 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
select * from analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
select *
from analytics.analytics.reporting_executive_dashboard_top_viral_looms
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders
select *
from ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
select *
from (
select date_day,
    lower("Time Frame") as agg_type,
    "Plan" as plan,
    "Filter" as filter,
    "Metric" as metric_name,
    metric_value,
    case when agg_type = 'monthly' then LAG(metric_value, 12) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY )
         when agg_type = 'quarterly' then LAG(metric_value, 4) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY ) end AS YOY_TO_DATE,
    LAG(metric_value, 1) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY ) AS POP_TO_DATE

from (
    select *, TO_DATE("Date", 'MM/DD/YY') as date_day, CASE WHEN SUBSTR("Value", -1, 1) = '%' THEN (regexp_replace("Value", '[^0-9.-]+', '')/100)::DOUBLE ELSE regexp_replace("Value", '[^0-9.-]+')::DOUBLE END as metric_value
    from analytics_dev.dbt_karan.exec_finance_pivot
    )
    )
where metric_value is not null
select * from analytics.analytics.reporting_executive_dashboard_domains_with_contractions
select *
from analytics.analytics.reporting_executive_dashboard_sales_metrics
select *
from analytics.analytics.reporting_executive_dashboard_top_viewers
select *
from analytics.analytics.reporting_executive_dashboard_top_vfvers
select * from analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
select * from analytics.analytics.reporting_executive_dashboard_domains_with_seats
select *
from analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
select *
    from  ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
    where date_day <<= ( select max(DATE_DAY)
    from  ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
    where metric_name = 'unique_viewers')
select *
from analytics.analytics.reporting_executive_dashboard_revenue_metrics
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:57:48,503 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
with 
max_timestamp as (
  select  
    max(date_pt) as last_run_at
  from 
    analytics.analytics.fact_recording_reports hf 
  where 
    date_pt >>= dateadd('day',-1,current_timestamp())

)

select 
hf.*,
split_part(segment, ',', 1) as split,
 recording_attempts::float/sum(recording_attempts) over (partition by date_pt,population) as hour_share,
recording_attempts::float/sum(recording_attempts) over (partition by date_pt,population,split_part(segment, ',', 1)) as segment_hour_share
from analytics.analytics.fact_recording_reports hf 
cross join max_timestamp m 

where date_pt << dateadd('hour',-1,m.last_run_at) -- - date_trunc('hour', convert_timezone('UTC', 'America/Los_Angeles', getdate()))   - interval '1 hours'
 and date_trunc('day', date_pt) >>= date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '7 days'
 and time_Aggregation = 'hourly'
with

base as (
select
sub.*,
datediff('days',date_trunc('day',date_pt),date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))) as days_from_today,
recording_attempts::float/sum(recording_attempts) over (partition by population,split_part(sub.segment,',',1),date_pt) as segment_weight,
recording_attempts::float/sum(recording_attempts) over (partition by population,date_pt) as daily_weight
from (
select * from analytics.analytics.fact_recording_reports f 
 where date_pt << date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
  and time_aggregation = 'daily'

)sub
)


select *
from (
select 
 sub.*,
 split_part(sub.segment,',',1) as micro_segment,
 b1.rate_recording_Stability_1d as first_date_rate,
 b2.rate_recording_Stability_1d as last_success_rate_as_majority,
 b1.segment_weight as first_weight,
 b2.segment_weight as last_weight,
 rank() over (partition by split_part(sub.segment,',',1),sub.population order by sub.last_date_as_majority desc,b2.segment_weight desc) as ranker
from (
select
 population,
 segment,
 min(date_pt) as first_date_as_majority,
 max(date_pt) as last_date_as_majority
from base
where segment_weight >>= 0.1 -- only pull cases where segment weight >>= 0.5

group by 1,2
) sub 
left join base b1 on b1.population = sub.population and b1.segment = sub.segment and b1.date_pt = sub.first_date_as_majority
left join base b2 on b2.population = sub.population and b2.segment = sub.segment and b2.date_pt = sub.last_date_as_majority
)
where ranker <<= 2 
 and population = 'subservice and client version'
 and micro_segment not in ('no subservice data','desktop')
with recent_quarter as (
select date_pt as quarter_comparison,days_from_quarter_start
from (
select 
  sub.*,
  row_number() over (order by days_from_quarter_start asc) as ranker
from (
select distinct 
 date_trunc('quarter',date_pt) as quarter,
 date_pt,
 abs(datediff('days',date_trunc('quarter',date_pt),date_pt)) as days_from_quarter_start
 
from analytics.analytics.fact_recording_reports r 
 where time_aggregation = 'weekly'
 order by date_pt asc
 ) sub
 ) sub2
 where ranker = 1
),


quarter as (
select 
 date_pt,
 segment,
 population,
 time_aggregation,
 rate_recording_stability_1d,
 'beginning of quarter'::text as status
 

from analytics.analytics.fact_recording_reports r 
 join recent_quarter rq on rq.quarter_comparison = r.date_pt
 
where time_aggregation = 'weekly'
 and population in ('subservice','aggregate')
),

recent_week as (

select 
 week as date_pt,
 subservice as segment,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  'weekly' as time_aggregation,
  rate_recording_stability_1d,
  'current week'::text as status
from (
select 
 week,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(weekly_share) as weekly_share_represented
from (
select 
 week,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by week,subservice) as weekly_share
from (
select 
 date_trunc('week', date_pt) as week,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'daily'
 and date_trunc('week', date_pt) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where weekly_share >>= .05
group by 1,2
) sub3
order by subservice,week
)

select * from recent_week 
union all 
select * from quarter
with recent_day as (
select 
 day as date_pt,
   'daily' as time_aggregation,
 subservice as segment,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  rate_recording_stability_1d,
  '2. most recent complete day'::text as status
from (
select 
 day,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(daily_share) as daily_share_represented
from (
select 
 day,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by day,subservice) as daily_share
from (
select 
 date_trunc('day', date_pt) as day,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'hourly'
 and date_trunc('day', date_pt) = date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 day'
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where daily_share >>= .05
group by 1,2
) sub3
  ),
  

  recent_week as (
 select 
   date_pt,
   time_aggregation,
   segment,
   population,
   RATE_RECORDING_STABILITY_1D,
   '1. most recent complete week'::text as status
from analytics.analytics.fact_recording_reports r
where 
  population in ('subservice','aggregate')
  and time_aggregation = 'weekly'
  and date_trunc('week', date_pt) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week'
  )
  
  select * from recent_day 
  union all 
  select * from recent_week
with

base as (
select
sub.*,
datediff('days',date_trunc('day',date_pt),date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) ) as days_from_today,
recording_attempts::float/sum(recording_attempts) over (partition by population,split_part(sub.segment,',',1),date_pt) as segment_weight,
recording_attempts::float/sum(recording_attempts) over (partition by population,date_pt) as daily_weight
from (
select * 
from analytics.analytics.fact_recording_reports 
where 
  date_pt <<= date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) 
  and time_aggregation = 'daily'
)sub
),



first_day as (
select
 population,
 segment,
 first_date,
 rank() over (partition by split_part(sub.segment,',',1) order by first_date desc) as ranker
from (
select
 population,
 segment,
 min(date_pt) as first_date
from base

group by 1,2
) sub
),

last_day as (
select *
from (
 select
  sub.population,
  sub.segment,
  sub.first_date,
  b.date_pt,
  b.rate_recording_stability_1d,
  rank() over (partition by b.population,split_part(b.segment,',',1) order by b.date_pt desc) as day_ranker
from (
  select population,segment,first_date from first_day where ranker = 2
) sub
left join base b on b.population = sub.population and b.segment = sub.segment and segment_weight >>= 0.5
) sub2
where day_ranker = 1
)


select
 sub.*,
 case
  when segment_version_rank = 1 then 'show'
  when segment_version_rank = 2 then 'dont show'
  else 'dont show' end as show_status,
 ld.segment as last_segment,
 ld.rate_recording_stability_1d as previous_best,
 ld.date_pt as previous_day

from (
select
 b.*,
 fd.first_date,
 split_part(b.segment,',',1) as split,
 rank() over (partition by b.date_pt,b.population,split_part(b.segment,',',1) order by b.segment_weight desc) as segment_weight_rank,
 rank() over (partition by b.date_pt,b.population,split_part(b.segment,',',1) order by fd.first_date desc) as segment_version_rank
from base b
 left join first_day fd on fd.segment = b.segment and fd.population = b.population
) sub
left join last_day ld on ld.population = sub.population and split_part(sub.segment,',',1) = split_part(ld.segment,',',1)


where days_from_today >> 0 and days_from_today <<= 30
select 
 sub3.*,
 subservice as segment,
 week as date_pt,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  case 
  when date_trunc('week', week) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) then '2. current week'
  when date_trunc('week', week) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week' then '1. previous week'
  else 'error' end as weekly_status
from (
select 
 week,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(weekly_share) as weekly_share_represented
from (
select 
 week,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by week,subservice) as weekly_share
from (
select 
 date_trunc('week', date_pt) as week,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'daily'
 and date_trunc('week', date_pt) <<= date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
 and date_trunc('week', date_pt) >>= date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week'
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where weekly_share >>= .05
group by 1,2
) sub3
order by subservice,week
select 
 ttv.*,
 split_part(segment,',',1) as segment_split

from analytics.analytics.fact_recording_ttv ttv
2023-10-19 10:57:48,518 — exposurescrawler — DEBUG —  ❌ Recording Stability Dashboard: found no models
with paid_self_serve_orgs as (
    select
        organization_id, date_day, mrr_ending as mrr, seats_ending as seats
    from analytics.analytics.fact_mrr_movement_by_customer_by_day
    where date_day >>= '2022-01-01'
    and mrr>>0
)
select
    a.user_id,
    a.organization_id,
    b.role,
    case when b.role in ('creator', 'admin') then 'Yes' else 'No' end as is_paid_role,
    case when p.organization_id is not null then 'Yes' else 'No' end as is_paid_org,    
    a.segment_timestamp_utc as auto_join_date
from analytics.analytics.staging_nodejs_auto_join_workspace a 
join analytics.analytics.fact_user_by_workspace_by_day b
    on a.user_id = b.user_id
    and a.organization_id = b.organization_id
    and date(a.segment_timestamp_utc) = b.date_day
join analytics.analytics.fact_organization orgs
    on a.organization_id = orgs.organization_id
left join paid_self_serve_orgs p
    on p.organization_id = a.organization_id
    and p.date_day = date(a.segment_timestamp_utc)
where orgs.sales_support_type = 'self_serve'
and b.member_status='active'
and a.segment_timestamp_utc >>= '2022-01-01'
with nav_button as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'P&B via Nav Button' as step_name
from analytics.analytics.staging_website_navigation_item_clicked 
where primary_nav_item='settings_workspace' 
    and secondary_nav_item='plan_billing'
    and segment_timestamp_utc >>= '2022-08-01'
)
, plan_page_visits as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'P&B Page via Link' as step_name
from analytics.analytics.base_website_pages 
where context_page_url like '%?scrollTo=allPlansSectionTitle%' 
    and segment_timestamp_utc >>= '2022-08-01'
)
, modal_rendered as (
select
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'Change Plan Modal Rendered' as step_name
from analytics.analytics.staging_website_change_plan_modal_rendered
where segment_timestamp_utc >>= '2022-08-01'
)
, upgrade_steps as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    case
        when step=0 then 'Choose Creators Page'
        when step=1 then 'Payment Details Page'
        when step=2 then 'Upgrade Success Page'
    end as step_name,
    row_number() over (partition by user_id, event_date,step_name order by segment_timestamp_utc) rnk
from analytics.analytics.staging_website_streamline_upgrade_page_step 
where segment_timestamp_utc >>= '2022-08-01'
)
, raw_settings_data as (
select * from nav_button
union all
select * from plan_page_visits
union all
select * from modal_rendered
)
, final_settings_data as (
select
    user_id,
    organization_id,
    event_date,
    segment_timestamp_utc,
    step_name,
    row_number() over (partition by user_id, event_date order by segment_timestamp_utc) rnk
from raw_settings_data
)
select * from final_settings_data where rnk=1
union all
select * from upgrade_steps where rnk=1
select
date_week as the_date,
'Weekly' as period_length,
organization_id,
plan_interval,
sum(mrr_net_change) as mrr_change,
sum(mrr_new) as mrr_new,
sum(mrr_expansion) as mrr_expansion,
sum(mrr_contraction) as mrr_contraction,
sum(mrr_churn) as mrr_churn,
sum(mrr_reactivation) as mrr_reactivation,
sum(mrr_starting) as mrr_starting,
sum(seats_churn) as seats_churn,
sum(seats_contraction) as seats_contraction
from analytics.analytics.fact_mrr_movement_by_customer_by_week
where date_week >>= '2020-10-01'
and sales_support_type_ending='self_serve'
group by 1,2,3,4
union all 
select
date_month as the_date,
'Monthly' as period_length,
organization_id,
plan_interval,
sum(mrr_net_change) as mrr_change,
sum(mrr_new) as mrr_new,
sum(mrr_expansion) as mrr_expansion,
sum(mrr_contraction) as mrr_contraction,
sum(mrr_churn) as mrr_churn,
sum(mrr_reactivation) as mrr_reactivation,
sum(mrr_starting) as mrr_starting,
sum(seats_churn) as seats_churn,
sum(seats_contraction) as seats_contraction
from analytics.analytics.fact_mrr_movement_by_customer_by_month
where date_month >>= '2020-10-01'
and sales_support_type_ending='self_serve'
group by 1,2,3,4
select
d.*,
trim(replace(r.value,'|',',')) as selected_reason
from analytics.analytics.staging_website_workspace_downgraded_with_reason d,
lateral split_to_table(replace(selected_reasons,'This is temporary, I','This is temporary| I'), ',') as r
with invited_via_link as (
    select 
    i.inviter_id as inviter_user_id,
    i.organization_id,
    i.role as invitee_role,
    f.email as invitee_email,
    min(a.segment_timestamp_utc) as segment_timestamp_utc
    from analytics.analytics.base_website_user_copied_invite_link c
    join analytics.analytics.base_app_invite_link i
        on i.inviter_id::varchar = c.user_id::varchar
        and date_trunc('minute',c.segment_timestamp_utc) = date_trunc('minute',i.created_at)
    join analytics.analytics.base_nodejs_invite_link_accessed a
        on a.invite_link_id = i.invite_link_id
    join analytics.analytics.fact_user f
        on f.user_id = a.user_id
    group by 1, 2, 3, 4
),

paid_self_serve_orgs as (
    select
        organization_id, date_day, mrr_ending as mrr, seats_ending as seats
    from analytics.analytics.fact_mrr_movement_by_customer_by_day
    where date_day >>= '2022-01-01'
    and mrr>>0
),

slack_sent as (
    select
        s.segment_timestamp_utc,
        s.user_id as inviter_user_id,
        s.video_workspace_id as organization_id,
        'slack invites' as source,
        parse_json(f1.value):email::varchar as invitee_email,
        parse_json(f1.value):name::varchar as name, --noqa
        parse_json(f1.value):orgInviteToken::varchar as org_invite_token,
        parse_json(f1.value):slackId::varchar as slack_id,
        parse_json(f1.value):orgRole::varchar as invitee_role
    from analytics.analytics.staging_integrations_slack_app_invite_nudge_invites_sent as s,
    lateral flatten(input =>> parse_json(invitees)) as f1
),


unioned_invites as (
    select 
        inviter_user_id, organization_id, invitee_email, invitee_member_role as invitee_role, segment_timestamp_utc,
    null as invite_accepted, case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from analytics.analytics.base_nodejs_teammates_invited
        union all
    select 
        inviter_user_id, organization_id, invitee_email, invitee_role, segment_timestamp_utc,
    null as invite_accepted, case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from invited_via_link
        union all
    select 
        s.inviter_user_id, s.organization_id, s.invitee_email, s.invitee_role,s.segment_timestamp_utc,
        case when sa.org_invite_token is not null then 'Y' else 'N' end as invite_accepted,
        case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from slack_sent s
    left join analytics.analytics.staging_nodejs_slack_invite_nudge_dm_accepted as sa
        on s.org_invite_token = sa.org_invite_token
)

select
date_trunc('week', u.segment_timestamp_utc) as invite_week,
--date_trunc('month',segment_timestamp_utc) as invite_month,
is_paid_invite,
case when p.organization_id is not null then 'Yes' else 'No' end as is_paid_org,
count(u.invitee_email) as invite_count,
count(case 
        when accept.invitee_email is not null then u.invitee_email 
        -- when coalesce(u.invite_accepted, 'N') = 'Y' then u.invitee_email
      end) as accepted_invite_count
from unioned_invites u
left join paid_self_serve_orgs p
    on p.organization_id = u.organization_id
    and p.date_day = date(u.segment_timestamp_utc)
left join analytics.analytics.fact_invitee_funnel as accept
    on u.invitee_email = accept.invitee_email
    and u.organization_id::varchar = accept.organization_id::varchar
    and accept.invitee_funnel_step = 'invite accepted'
    and accept.invitee_funnel_step_timestamp >>= u.segment_timestamp_utc
where u.segment_timestamp_utc>>= '2022-01-01'
and u.inviter_user_id not in ('14644139','9767154','11376952')
group by 1,2,3
with first_paying_week as (
select
    organization_id,
    plan_interval,
    min(date_week) as first_paid_week
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
where mrr_ending>>0
group by 1,2
)
, first_active_week as (
    select
        organization_id,
        plan_interval,
        date_trunc('week', min(first_active_day)) as first_active_week
    from analytics.analytics.fact_mrr_by_subscription_by_day
    group by 1,2
)
, orgs_per_start_week as (
select
    first_paid_week,
    plan_interval,
    count(organization_id) as cohort_org_size
from first_paying_week
group by 1,2
)
select 
datediff('week',p.first_paid_week, date_week) as weeks_since_start,
a.first_active_week,
p.first_paid_week,
date_week,
m.organization_id,
m.organization_type,
m.plan_interval,
sales_support_type_ending as sales_support_type,
mrr_ending as mrr,
seats_ending as seats,
mrr_net_change_category as customer_change_category,
case when mrr_ending>>0 then 'Y' else 'N' end as is_paid_yn,
case when mrr_ending=0 then 'Y' else 'N' end as is_churned_yn,
o.cohort_org_size
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week m
join first_paying_week p
    on m.organization_id = p.organization_id
    and m.date_week >>= p.first_paid_week
    and m.plan_interval = p.plan_interval
join orgs_per_start_week o
    on o.first_paid_week = p.first_paid_week
    and o.plan_interval = p.plan_interval
join first_active_week a
    on m.organization_id = a.organization_id
    and m.plan_interval = a.plan_interval
with requests as (
select distinct
    u.user_id,
    u.organization_id,
    u.upgrade_request_id,
    first_value(r.role) over (partition by u.upgrade_request_id order by u.segment_timestamp_utc) as role,
    first_value(u.segment_timestamp_utc) over (partition by u.upgrade_request_id order by u.segment_timestamp_utc) as request_time_utc
from ANALYTICS.analytics.base_nodejs_request_to_upgrade_workspace u
join analytics.analytics.user_role_by_day r
        on r.user_id = u.user_id
        and r.date_day = dateadd('day',-1,date(u.segment_timestamp_utc))
where u.upgrade_type='role'
    and r.role in ('creator_lite','viewer')
)
, approvals as (
select distinct
    requesting_user_id,
    user_id as approving_user_id,
    organization_id,
    upgrade_request_id,
    first_value(segment_timestamp_utc) over (partition by upgrade_request_id order by segment_timestamp_utc) as approval_time_utc
from analytics.analytics.base_nodejs_approve_role_upgrade_request
)
, role_changes as (
select
    user_id,
    organization_id,
    previous_role,
    new_role,
    source,
    segment_timestamp_utc as role_update_utc
from analytics.analytics.base_nodejs_membership_role_updated
where source != 'unknown'
)
select
r.user_id,
r.organization_id,
r.upgrade_request_id,
r.role,
r.request_time_utc,
a.approval_time_utc,
a.approving_user_id,
c.previous_role,
c.new_role,
c.source,
c.role_update_utc,
row_number() over (partition by r.upgrade_request_id order by role_update_utc) as rnk
from requests r
left join role_changes c
    on c.user_id = r.user_id
    and c.organization_id = r.organization_id
    and c.previous_role = r.role
    and c.role_update_utc >>= r.request_time_utc
left join approvals a
    on r.user_id = a.requesting_user_id
    and r.upgrade_request_id = a.upgrade_request_id
    and date_trunc('min',c.role_update_utc) = date_trunc('min',a.approval_time_utc)
where r.request_time_utc >>= '2021-01-01'
qualify rnk=1
with first_paying_month as (
select
    organization_id,
    plan_interval,
    min(date_month) as first_paid_month
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
where mrr_ending>>0
group by 1,2  
)
, orgs_per_start_month as (
select
    first_paid_month,
    plan_interval,
    count(organization_id) as cohort_org_size
from first_paying_month
group by 1,2
)
, final_data as (
select 
datediff('month',p.first_paid_month, date_month) as months_since_start,

p.first_paid_month,
date_month,
m.organization_id,
organization_type,
m.plan_interval,
sales_support_type_ending as sales_support_Type,
mrr_ending as mrr,
seats_ending as seats,
mrr_net_change_category as customer_change_category,
case when mrr_ending>>0 then 'Y' else 'N' end as is_paid_yn,
case when mrr_ending=0 then 'Y' else 'N' end as is_churned_yn,
o.cohort_org_size
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month m
join first_paying_month p
    on m.organization_id = p.organization_id
    and m.date_month >>= p.first_paid_month
join orgs_per_start_month o
    on o.first_paid_month = p.first_paid_month
    and o.plan_interval = p.plan_interval
)
select * from final_data
select 
s.*,
o.organization_id,
w_start.date_day as start_day,
w_start.mapped_plan_type as start_type,
w_end.date_day as end_day,
w_end.mapped_plan_type as end_type,
case when w_end.mapped_plan_type in ('enterprise','business') then 'Y' else 'N' end as converted_yn
from analytics.analytics.staging_stripe_trial_starts s
join analytics.analytics.fact_organization o
    on o.external_customer_id = s.customer_id
join analytics.analytics.fact_workspace_by_day w_start
    on w_start.organization_id = o.organization_id
    and w_start.date_day = s.trial_start_date_utc
join analytics.analytics.fact_workspace_by_day w_end
    on w_end.organization_id = o.organization_id
    and w_end.date_day = dateadd('day',1,s.trial_end_date_utc)
where s.trial_start_date_utc >>= '2022-02-01'
and s.trial_end_date_utc << current_date()
2023-10-19 10:57:48,537 — exposurescrawler — DEBUG —  ❌ Monetization KPIs: found no models
with date_boundaries as (
select
    'month' as window,
    date_trunc('month', date_day) as the_date,
    min( case when date_trunc('week', date_day) >>= date_trunc('month', date_day) 
            then date_trunc('week', date_day) end) as first_week,
    max( date_trunc('week', date_day)) as last_week
from analytics.analytics.days
    where date_day >>= '2022-01-01'
    and date_day <<= dateadd('month', 1, current_date())
    group by 1,2
union all
select
    'quarter' as window,
    date_trunc('quarter', date_day) as the_date,
    min( case when date_trunc('week', date_day) >>= date_trunc('month', date_day) 
            then date_trunc('week', date_day) end) as first_week,
    max( date_trunc('week', date_day)) as last_week
from analytics.analytics.days
    where date_day >>= '2022-01-01'
    and date_day <<= dateadd('month', 1, current_date())
    group by 1,2  
)
, weekly_data as (
    select 
        date_day as date_week,  
        sum(total_active_users) as WAU
    from analytics.analytics.reporting_metric_active_users_unioned 
    where agg_type = 'weekly' 
    and user_classification = 'work' 
    group by date_week
)
, monthly_data as (
    select 
        d.the_date as date_month,
        avg(WAU) as month_WAU
    from weekly_data w
    join date_boundaries d
        on w.date_week >>= d.first_week
        and w.date_week <<= d.last_week
    where w.date_week >>= '2021-12-01'
    and w.date_week << date_trunc('week', current_date())
    and d.window='month'
    group by the_date
),
quarterly_data as (
    select 
        d.the_date as date_quarter,
        avg(WAU) as quarter_WAU
    from weekly_data w
    join date_boundaries d
        on w.date_week >>= d.first_week
        and w.date_week <<= d.last_week
    where w.date_week >>= '2021-12-01'
    and w.date_week << date_trunc('week', current_date())
    and d.window='quarter'
    group by the_date
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()
),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Work WAUs'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.month_WAU,
q.quarter_WAU,
yoy.month_WAU as yoy_month_WAU,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Work WAUs'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with traffic_data as (
    select 
        date(event_date_utc) as visit_date, 
        sum(total_visits) as total_visits
    from analytics.analytics.reporting_traffic
    where path_category='marketing_site'
    and event_date_utc >>= dateadd('month',-13,current_date())
    group by 1
)
, views_data as (
    select
        date(f.segment_timestamp_utc) as view_date, 
        count(f.video_id) as total_views,
        count(case when u.user_classification='work' then f.video_id end) as work_views,
        count(case when f.is_logged_in_view=0 and u.user_classification='work' then f.video_id end) as anon_work_views,
        count(case when f.is_logged_in_view=1 and u.user_classification='work' then f.video_id end) as logged_in_work_views
    from analytics.analytics.fact_video_views f
    join analytics.analytics.fact_user u
        on f.owner_id::varchar = u.user_id::varchar
    where f.segment_timestamp_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, vfv_data as (
    select
        date(video_first_view_at_utc) as vfv_date,
        count(video_id) as total_vfvs,
        count(case when u.user_classification='work' then video_id end) as work_vfvs
    from analytics.analytics.fact_recording f
    join analytics.analytics.fact_user u
        on f.user_id::varchar = u.user_id::varchar
    where video_first_view_at_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, total_traffic as (
    select distinct
        t_now.visit_date,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_visits,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_visits 
    from traffic_data t_now
    left join traffic_data t_wow
        on t_now.visit_date = dateadd('day',7,t_wow.visit_date)
    left join traffic_data t_yoy
        on t_now.visit_date = dateadd('year',1,t_yoy.visit_date)
)
, total_views as (
    select distinct
        t_now.view_date,
        sum(t_now.total_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_views,
        sum(t_now.total_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_views,
        sum(t_now.work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_views,  
        sum(t_now.work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_work_views, 
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_anon_work_views, 
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_anon_work_views, 
        sum(t_now.logged_in_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_logged_in_work_views,
        sum(t_wow.logged_in_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_logged_in_work_views,
        sum(t_yoy.logged_in_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_logged_in_work_views , 
        sum(t_now.logged_in_work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_logged_in_work_views,
        sum(t_wow.logged_in_work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_logged_in_work_views,
        sum(t_yoy.logged_in_work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_logged_in_work_views
    from views_data t_now
    left join views_data t_wow
        on t_now.view_date = dateadd('day',7,t_wow.view_date)
    left join views_data t_yoy
        on t_now.view_date = dateadd('year',1,t_yoy.view_date)
)
, total_vfvs as (
    select distinct
        t_now.vfv_date,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_vfvs,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_vfvs,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_vfvs  ,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_work_vfvs
    from vfv_data t_now
    left join vfv_data t_wow
        on t_now.vfv_date = dateadd('day',7,t_wow.vfv_date)
    left join vfv_data t_yoy
        on t_now.vfv_date = dateadd('year',1,t_yoy.vfv_date)
)
, final_data as (
select 'Website Traffic' as metric, visit_date as the_date, t7_total_visits as t7_value, wow_total_visits as wow_value, yoy_total_visits as yoy_value,
            t30_total_visits as t30_value, wow30_total_visits as wow30_value, yoy30_total_visits as yoy30_value from total_traffic
    union all
select 'Total Views' as metric, view_date as the_date, t7_total_views as t7_value, wow_total_views as wow_value, yoy_total_views as yoy_value,
            t30_total_views as t30_value, wow30_total_views as wow30_value, yoy30_total_views as yoy30_value from total_views
    union all
select 'Work Views' as metric, view_date as the_date, t7_work_views as t7_value, wow_work_views as wow_value, yoy_work_views as yoy_value,
             t30_work_views as t30_value, wow30_work_views as wow30_value, yoy30_work_views as yoy30_value from total_views
    union all
select 'Anon Work Views' as metric, view_date as the_date, t7_anon_work_views as t7_value, wow_anon_work_views as wow_value, yoy_anon_work_views as yoy_value,
        t30_anon_work_views as t30_value, wow30_anon_work_views as wow30_value, yoy30_anon_work_views as yoy30_value from total_views
    union all
select 'Logged In Work Views' as metric, view_date as the_date, t7_logged_in_work_views as t7_value, wow_logged_in_work_views as wow_value, yoy_logged_in_work_views as yoy_value,
       t30_logged_in_work_views as t30_value, wow30_logged_in_work_views as wow30_value, yoy30_logged_in_work_views as yoy30_value from total_views
    union all
select 'Total VFVs' as metric, vfv_date as the_date, t7_total_vfvs as t7_value, wow_total_vfvs as wow_value, yoy_total_vfvs as yoy_value,
    t30_total_vfvs as t30_value, wow30_total_vfvs as wow30_value, yoy30_total_vfvs as yoy30_value from total_vfvs
    union all
select 'Work VFVs' as metric, vfv_date as the_date, t7_work_vfvs as t7_value, wow_work_vfvs as wow_value, yoy_work_vfvs as yoy_value,
    t30_work_vfvs as t30_value, wow30_work_vfvs as wow30_value, yoy30_work_vfvs as yoy30_value from total_vfvs
)
select * from final_data
where the_date << current_date()
---- MRR query

with net_monthly_mrr as (
    select
        date_month,
        coalesce(sum(mrr_starting),0) mrr_starting,
        coalesce(sum(case when mrr_net_change_category = 'new' then mrr_net_change end),0) mrr_new,
        coalesce(sum(case when mrr_net_change_category = 'change_from_sales_led' then mrr_net_change end),0) mrr_from_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'reactivation' then mrr_net_change end),0) mrr_reactivation,
        coalesce(sum(case when mrr_net_change_category = 'expansion' then mrr_net_change end),0) mrr_expansion,
        coalesce(sum(case when mrr_net_change_category = 'contraction' then mrr_net_change end),0) mrr_contraction,
        coalesce(sum(case when mrr_net_change_category = 'change_to_sales_led' then mrr_net_change end),0) mrr_to_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'churn' then mrr_net_change end),0) mrr_churn,
        coalesce(sum(mrr_ending),0) mrr_ending
    from analytics.analytics.fact_self_serve_mrr_by_customer_by_month
    group by 1
),

net_monthly_mrr_with_financial_metrics as (
    select
        *,
        -- BEFORE
        -- mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        -- mrr_expansion as mrr_expansion_finance,
        -- mrr_contraction + mrr_churn + mrr_to_sales_led as mrr_churn_finance,
        -- mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        -- mrr_new_finance + mrr_expansion_finance as mrr_total_finance

        -- AFTER
        mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        mrr_expansion as mrr_expansion_finance,
        mrr_contraction + mrr_churn as mrr_churn_finance,
        mrr_new_finance + mrr_expansion_finance + mrr_churn_finance + mrr_to_sales_led as mrr_net_new_finance,
        mrr_new_finance + mrr_expansion_finance as mrr_total_finance,
        mrr_to_sales_led as mrr_graduate_to_sales
    from net_monthly_mrr
)
-- select * from net_monthly_mrr_with_financial_metrics where date_month='2022-09-01'

, dates as (
    select 
        date_trunc('month',date_day) as date_month,
        max(case when date_day << current_date() then date_day end) as month_last_day,
        max(date_part('day',case when date_day << current_date() then date_day end)) as month_last_day_num,
        max(date_part('day',date_day)) as max_month_day_num,
        month_last_day_num/max_month_day_num as percent_thru_month
    from analytics.analytics.days
    group by 1
)

, monthly_data as (   
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Net New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_net_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Total New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_total_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'New + Reactivation' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Expansion' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_expansion_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Churn' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_churn) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Contraction' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_contraction) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Graduate to Sales' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_graduate_to_sales) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
)
, quarterly_data as (
    select
        the_quarter,
        channel,
        max(month_last_day) as quarter_last_day,
        sum(value) as value
    from monthly_data
    group by 1,2
)
, monthly_goals_data as (
    select
        case
            when metric = 'Net New' then 'Net New ARR' 
            when metric = 'New Revenue' then 'Total New ARR'
            when metric = 'New Revenue (New + Reactivation)' then 'New + Reactivation' -- part of 'Total New ARR'
            when metric = 'Expansion Revenue' then 'Expansion' -- part of 'Total New ARR'
            when metric = 'Churn Revenue' then 'Churn' -- part of 'Total New ARR'
            when metric = 'Contraction Revenue' then 'Contraction' -- part of 'Total New ARR'
            when metric = 'Contraction and Churn Revenue' then 'Churn + Contraction'
        end as clean_metric,
        *
    from analytics.analytics.reporting_score_card_goals
    where metric not in ('AWS','Signups')
)
, quarter_goals_data as (
    select
        quarter,
        model_grouping,
        clean_metric,
        sum(metric_value) as metric_value
    from monthly_goals_data
    group by 1, 2, 3
)
select
coalesce(g.clean_metric, m.channel) as channel,
m.the_month,
m.the_quarter,
dateadd('day',-1,dateadd('quarter',1,m.the_quarter)) as quarter_max_day,
coalesce(g.metric_value,m.value) as month_goal,
m.value as month_actual,
m.value/nullif(m.percent_thru_month,0) as month_pacing,
m.value/nullif(month_goal * m.percent_thru_month,0) as month_pacing_pct,
last_year.value as last_year_actual,
(month_pacing/nullif(last_year.value,0)) - 1 as YoY_percent,
coalesce(qg.metric_value,q.value) as quarter_goal,
q.value as quarter_actual,
datediff('day',q.the_quarter, q.quarter_last_day)/nullif(datediff('day', q.the_quarter, quarter_max_day),0) as percent_thru_quarter,
q.value/nullif(quarter_goal * percent_thru_quarter,0) as quarter_pacing
from monthly_data m
left join monthly_goals_data g
    on g.month = m.the_month
    and m.channel = g.clean_metric
left join quarter_goals_data qg
    on qg.quarter = g.quarter
    and qg.model_grouping = g.model_grouping
    and qg.clean_metric = g.clean_metric
join quarterly_data q
    on m.the_quarter = q.the_quarter
    and m.channel = q.channel
left join monthly_data as last_year
    on m.the_month = dateadd('year',1,last_year.the_month)
    and m.channel = last_year.channel
with monthly_data as (
    select 
        date_day as date_month, 
        date_trunc('quarter', date_day) as date_quarter,
        sum(total_video_first_views) as month_vfv
    from analytics.analytics.reporting_metric_video_first_views_unioned
    where agg_type='monthly'
        and user_classification = 'work' 
    group by 1, 2
),
quarterly_data as (
    select 
        date_day as date_quarter, 
        sum(total_video_first_views) as quarter_vfv
    from analytics.analytics.reporting_metric_video_first_views_unioned
    where agg_type='quarterly'
        and user_classification = 'work' 
    group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()
),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        sum(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Work VFVs'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.month_vfv as month_vfv,
q.quarter_vfv as quarter_vfv,
yoy.month_vfv as yoy_month_vfv,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Work VFVs'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with conversions as (
    -- find organizations that converted, and the first day they were paid
select 
    a.organization_id, min(date_day) as conversion_date
  from analytics.analytics.fact_mrr_movement_by_customer_by_day a
  where mrr_net_change_category in ('new')
  and sales_support_type_ending = 'self_serve'
  and date_day >> '2021-01-01'
  and mrr_new>>0
    group by 1
),
new_conversions_data as(
    -- find all organizations and left join to conversion data
    select 
        o.organization_id, o.created_at, c.conversion_date
    from analytics.analytics.fact_organization o
    left join conversions c
        on c.organization_id = o.organization_id
    where o.created_at >>= '2021-01-01'
),
daily_data as (
    -- for each day, look at the orgs that were created in the 30-day window from 51 days ago to 21 days ago
    -- which is 30 days of orgs that have had the full 21 days to convert as of that day
    select
        d.date_day as the_date,
        date_trunc('month', d.date_day) as signup_month,
        date_trunc('quarter', d.date_day) as signup_quarter,
        count(n.organization_id) as org_count,
        count(case when n.conversion_date is not null then n.organization_id end) as converted_org_count,
        count(case when datediff(day, n.created_at, n.conversion_date) <<= 21 then n.organization_id end) as converted_21d_org_count,
        converted_21d_org_count/org_count as conv_rate_21d,
        min(n.created_at) as min_created_at,
        max(n.created_at) as max_created_at,
        row_number() over (partition by signup_month order by d.date_day desc) as month_rnk,
        row_number() over (partition by signup_quarter order by d.date_day desc) as quarter_rnk
    from analytics.analytics.days d
    left join new_conversions_data n
        on n.created_at >>= dateadd('day', -51, d.date_day)
        and n.created_at <<= dateadd('day', -21, d.date_day)
    where d.date_day >>= '2021-08-01'
    and d.date_day << current_date()
    group by 1

),
monthly_data as (
    select
        now.signup_month,
        now.the_date,
        now.org_count,
        now.converted_org_count,
        now.converted_21d_org_count,
        now.conv_rate_21d,
        yoy.org_count as yoy_org_count,
        yoy.converted_org_count as yoy_converted_org_count,
        yoy.converted_21d_org_count as yoy_converted_21d_org_count,
        yoy.conv_rate_21d  as yoy_conv_rate_21d       
    from daily_data as now
    left join daily_data as yoy
        on now.the_date = dateadd('y',1,yoy.the_date)
    where now.month_rnk=1
),
quarterly_data as (
    select
        signup_quarter,
        sum(org_count) as org_count,
        sum(converted_org_count) as converted_org_count,
        sum(converted_21d_org_count) as converted_21d_org_count,
        sum(converted_21d_org_count)/sum(org_count) as conv_rate_21d
    from daily_data
    where month_rnk=1
    group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = '21d Conversion Rate'
    group by 1
)
select
m.signup_month,
q.signup_quarter,
m.org_count as month_org_count,
m.converted_21d_org_count as month_converted_21d_org_count,
m.conv_rate_21d as month_conv_rate_21d,
q.org_count as quarter_org_count,
q.converted_21d_org_count as quarter_converted_21d_org_count,
q.conv_rate_21d as quarter_conv_rate_21d,
m.yoy_org_count,
m.yoy_converted_21d_org_count,
m.yoy_conv_rate_21d,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
-- left join monthly_data yoy
--     on m.signup_month = dateadd('y',1,yoy.signup_month)
left join quarterly_data q
    on date_trunc('quarter', m.signup_month) = q.signup_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.signup_month = mg.month
    and mg.metric='21d Conversion Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.signup_month) = qg.the_quarter
cross join max_date_cte
where m.signup_month >>= '2022-01-01'
with daily_data as (
    -- for each day, look at the prior 28d rolling window
    -- get a distinct count of paying orgs and expanding orgs
    select
        d.date_day as the_date,
        date_trunc('month', d.date_day) as date_month,
        date_trunc('quarter', d.date_day) as date_quarter,
        count(distinct case when mrr_starting >> 0 then organization_id end) as paying_org_count,
        count(distinct case when mrr_expansion >> 0 then organization_id end) as expanding_org_count,
        row_number() over (partition by date_month order by d.date_day desc) as month_rnk,
        row_number() over (partition by date_quarter order by d.date_day desc) as quarter_rnk
    from analytics.analytics.days d
    left join analytics.analytics.fact_mrr_movement_by_customer_by_day m
        on m.date_day <<= d.date_day
        and m.date_day >>= dateadd('day', -28, d.date_day)
    where d.date_day >>= '2021-08-01'
    and d.date_day << current_date()
    group by 1, 2, 3      
)
, monthly_data as (
    select
        now.date_month,
        now.the_date,
        now.paying_org_count,
        now.expanding_org_count,
        now.expanding_org_count/now.paying_org_count as expanding_perc,
        yoy.paying_org_count as yoy_paying_org_count,
        yoy.expanding_org_count as yoy_expanding_org_count,
        yoy.expanding_org_count/yoy.paying_org_count as yoy_expanding_perc
    from daily_data as now
    left join daily_data as yoy
        on now.the_date = dateadd('y',1,yoy.the_date)
    where now.month_rnk=1
)
, quarterly_data as (
    select
        date_quarter,
        sum(paying_org_count) as paying_org_count_quarter,
        sum(expanding_org_count) as expanding_org_count_quarter,
        sum(expanding_org_count)/sum(paying_org_count) as expanding_perc_quarter
    from daily_data
    where month_rnk=1
    group by 1
)
, max_date_cte as (

    select 
        to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

)
, quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Expanding Workspaces Rate'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.paying_org_count as month_org_count,
m.expanding_org_count as month_expanding_org_count,
m.expanding_perc as month_expanding_perc,
q.paying_org_count_quarter as quarter_org_count,
q.expanding_org_count_quarter as quarter_expanding_org_count,
q.expanding_perc_quarter as quarter_expanding_perc,
m.yoy_paying_org_count as yoy_org_count,
m.yoy_expanding_org_count as yoy_expanding_org_count,
m.yoy_expanding_perc as yoy_expanding_perc,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Expanding Workspaces Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
2023-10-19 10:57:48,564 — exposurescrawler — DEBUG —  ❌ Self-Serve Pacing Scorecard: found no models
with experiment_list as (
select
*
from ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
where end_date >>= dateadd('month', -6, current_date())

)
, non_total_kpi as (
select
r.experiment_name, r.metric_name,user_classification, 
replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta::float as delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Y-Pos' 
    when prob_var_beats_con<<=0.05 then 'Y-Neg'
    else 'No' 
end as significant,
LOWER_DELTA_CREDIBLE_INTERVAL, UPPER_DELTA_CREDIBLE_INTERVAL,
is_default_metric,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join experiment_list e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/B'
and is_full_experiment=1
and r.metric_name not like 'Total%'
and (r.metric_name not like 'Average%' or r.metric_name like 'Average Time%')
)
, total_kpi as (
select
r.experiment_name, r.metric_name, user_classification, 
case
    when r.metric_name like 'Average Unique Views per Workspace%' then replace(r.metric_name,'Average Unique Views per Workspace','Workspace with Viewing User')
    when r.metric_name like 'Average VWMs%' then replace(r.metric_name,'Average VWMs','Workspace with VWM')
    when r.metric_name like 'Total Recorder Menu%' then replace(r.metric_name, 'Total Recorder Menu Opens', 'Opened Recorder Menu')
    else replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') 
end as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta::float as delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
annualized_impact,
total_annual_volume,
annualized_impact_percent
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join experiment_list e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/B'
and is_full_experiment=1
and (r.metric_name like 'Total%' or r.metric_name like 'Average%')
and m.simulation_type in  ('permutation', 'gamma')
)

select
n.experiment_name,
n.user_classification,
n.shared_metric_name,
n.control_value as rate_control_value,
n.variant_value as rate_variant_value,
n.control_total_count as rate_control_total_count,
n.variant_total_count as rate_variant_total_count,
n.delta as rate_delta,
n.prob_var_beats_con as rate_prob_var_beats_con,
n.significant as rate_significant,
n.LOWER_DELTA_CREDIBLE_INTERVAL,
n.UPPER_DELTA_CREDIBLE_INTERVAL,
t.control_value as total_control_value,
t.variant_value as total_variant_value,
t.control_total_count as total_control_total_count,
t.variant_total_count as total_variant_total_count,
t.delta as total_delta,
t.prob_var_beats_con as total_prob_var_beats_con,
t.significant as total_significant,
case when n.shared_metric_name like '%exp%' then 'Y' else 'N' end as experiment_length_yn,
n.is_default_metric,
t.annualized_impact,
t.total_annual_volume,
t.annualized_impact_percent,
n.filter_experiment_name
from non_total_kpi n
left join total_kpi t
    on t.experiment_name = n.experiment_name
    and t.user_classification = n.user_classification
    and t.shared_metric_name = n.shared_metric_name
with exp_results as (
select
r.experiment_name, metric_name, user_classification, 
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and e.end_date >>= dateadd('month', -6, current_date())
and is_full_experiment=1
)
, all_percentiles as (
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
where clean_experiment_name not in (select distinct clean_experiment_name
from analytics.analytics.reporting_experiment_ab_metric_percentiles)
union all
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics.analytics.reporting_experiment_ab_metric_percentiles
)
select 
a.clean_experiment_name as experiment_name,
m.clean_metric_name as metric_name,
a.user_classification,
a.percent_group,
case
    when a.percent_group='All Users' then 1
    when a.percent_group='Bottom 10%' then 2
    when a.percent_group='Lower Middle (Middle 11-50%)' then 3
    when a.percent_group='Upper Middle (Middle 51-90%)' then 4
    when a.percent_group='Top 10%' then 5
    when a.percent_group='Top 1%' then 6
end as percent_group_rnk,
a.variant_value,
a.control_value,
a.variant_count,
a.control_count,
a.variant_over_zero,
a.control_over_zero,
case when a.percent_group = 'All Users' then e.variant_base end as variant_base,
case when a.percent_group = 'All Users' then e.control_base end as control_base,
case 
    when a.percent_group = 'All Users' then e.delta 
    when a.control_value=0 then null
    else (a.variant_value - a.control_value)/(a.control_value)
end as delta,
case when a.percent_group = 'All Users' then e.prob_var_beats_con end as prob_var_beats_con,
case when a.percent_group = 'All Users' then e.significant end as significant,
m.default_yn,
e.filter_experiment_name
from all_percentiles a
join analytics.analytics.base_ab_metrics_list m
    on m.metric_col_name = a.metric_col_name
join exp_results e
    on e.experiment_name = a.clean_experiment_name
    and a.user_classification = e.user_classification
    and m.clean_metric_name = e.metric_name
with last_dates as (
    select
        max(r.as_of_date) as last_as_of_date,
        max(r.end_date) as last_end_date,
        max(date(b.end_date)) as expected_last_end_date,
        current_date() as today
    from analytics.analytics.reporting_experiment_ab_bayes_summary r
    join analytics.analytics.base_ab_experiments b
        on b.experiment_name = r.experiment_name
)
select 
*,
datediff('day',last_as_of_date,today) as days_since_as_of,
case
    when expected_last_end_date>>=today then datediff('day',last_end_date,today)
    else 0
end as days_since_end
from last_dates
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
, exp_groups as (
    select
    experiment_flag_name, control_name, count(distinct variant_name)
    from analytics.analytics.staging_ab_experiments_and_holdouts
    where end_date >>= dateadd('month', -6, current_date())
    group by 1,2
    having count(distinct variant_name)>>1
)
, experiment_list as (
select
b.*,
row_number() over (partition by b.experiment_flag_name, b.control_name order by b.variant_name) as exp_number
from analytics.analytics.staging_ab_experiments_and_holdouts b
join exp_groups e
    on b.experiment_flag_name = e.experiment_flag_name
    and b.control_name = e.control_name
where b.end_date >>= dateadd('month', -6, current_date())
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
e.control_name,
e.variant_name,
e.experiment_flag_name,
case when metric_name like '%(1d|7d)%' then 'Y' else 'N' end as longterm_metric,
row_number() over (partition by e.experiment_flag_name, r.metric_name, r.user_classification order by delta desc) as metric_rnk
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join experiment_list e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and is_full_experiment=1
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
case
    when date(e.end_date) >> current_date() then datediff('day',e.start_date,current_date())
    else datediff('day',e.start_date,e.end_date)
end as experiment_days_passed,
e.assignment_level,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and e.end_date >>= dateadd('month', -6, current_date())
2023-10-19 10:57:48,577 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard: found no models
SELECT
distinct 
o.SALES_SUPPORT_TYPE,
invoices.CREATED_AT_UTC,
DUE_DATE_UTC,
invoices.CUSTOMER_ID,
invoices.SUBSCRIPTION_ID,
base.DESCRIPTION,
invoices.invoice_date_utc,
sp.name as plan_name,
sub.plan_id,
sub.PLAN_INTERVAL,
invoices.INVOICE_ID,
INVOICE_NUMBER,
base.IS_PAID,
invoices.STATUS,
o.organization_id,
o.organization_name,
acc.account_id,
exc.name as account_executive_name,
acc.account_name,
invoices.AMOUNT_DUE,
datediff('day', DATE(base.DUE_DATE_UTC), current_date) as days_overdue,
case when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 0 then base.AMOUNT_DUE
else 0
end as "Open Invoices",

case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 90 then base.AMOUNT_DUE
else 0
end as "AR_aging_>>90",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 90
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 60 then base.AMOUNT_DUE
else 0
end as "AR_aging_90_60",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 60
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 30 then base.AMOUNT_DUE
else 0
end as "AR_aging_60_30",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 30 
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 0 then base.AMOUNT_DUE
else 0
end as "AR_aging_<<30",
-- csm info
csm.name as csm_name,
csm.username as csm_email
FROM
ANALYTICS.ANALYTICS.STRIPE_INVOICES invoices
join ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES base on base.invoice_id = invoices.invoice_id
JOIN ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS customers on invoices.CUSTOMER_ID = customers.CUSTOMER_ID
left outer JOIN ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS as sub on invoices.SUBSCRIPTION_ID = sub.SUBSCRIPTION_ID
left outer join ANALYTICS.ANALYTICS.stripe_plans sp on sp.plan_id = sub.plan_id
LEFT OUTER JOIN analytics.analytics.fact_organization as o on invoices.customer_id = o.external_customer_id
left outer join analytics.analytics.staging_salesforce_workspace w on w.loom_workspace_id  = o.organization_id
left outer join analytics.staging_salesforce_account as acc on w.account_id = acc.account_id 
left outer join analytics.base_salesforce_user as csm on acc.customer_success_manager = csm.user_id and csm.is_active = 'TRUE'
left outer join analytics.base_salesforce_user as exc on acc.account_executive = exc.user_id --and exc.is_active = 'TRUE'

WHERE
base.IS_PAID = 'false'
AND invoices.STATUS = 'open'
order by invoices.CUSTOMER_ID, invoices.INVOICE_ID
2023-10-19 10:57:48,580 — exposurescrawler — DEBUG —  ❌ Sales Led Accounts Receivables Report: found no models
with non_total_kpi as (
select
r.experiment_name, r.metric_name,user_classification, 
replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Y-Pos' 
    when prob_var_beats_con<<=0.05 then 'Y-Neg'
    else 'No' 
end as significant,
LOWER_DELTA_CREDIBLE_INTERVAL, UPPER_DELTA_CREDIBLE_INTERVAL,
is_default_metric
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/A'
and is_full_experiment=1
and r.metric_name not like 'Total%'
and (r.metric_name not like 'Average%' or r.metric_name like 'Average Time%')
)
, total_kpi as (
select
r.experiment_name, r.metric_name, user_classification, 
case
    when r.metric_name like 'Average Unique Views per Workspace%' then replace(r.metric_name,'Average Unique Views per Workspace','Workspace with Viewing User')
    when r.metric_name like 'Average VWMs%' then replace(r.metric_name,'Average VWMs','Workspace with VWM')
    else replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') 
end as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
annualized_impact
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/A'
and is_full_experiment=1
and (r.metric_name like 'Total%' or r.metric_name like 'Average%')
and m.simulation_type in  ('permutation', 'gamma')
)

select
n.experiment_name,
n.user_classification,
n.shared_metric_name,
n.control_value as rate_control_value,
n.variant_value as rate_variant_value,
n.control_total_count as rate_control_total_count,
n.variant_total_count as rate_variant_total_count,
n.delta as rate_delta,
n.prob_var_beats_con as rate_prob_var_beats_con,
n.significant as rate_significant,
n.LOWER_DELTA_CREDIBLE_INTERVAL,
n.UPPER_DELTA_CREDIBLE_INTERVAL,
t.control_value as total_control_value,
t.variant_value as total_variant_value,
t.control_total_count as total_control_total_count,
t.variant_total_count as total_variant_total_count,
t.delta as total_delta,
t.prob_var_beats_con as total_prob_var_beats_con,
t.significant as total_significant,
case when n.shared_metric_name like '%exp%' then 'Y' else 'N' end as experiment_length_yn,
n.is_default_metric,
t.annualized_impact
from non_total_kpi n
left join total_kpi t
    on t.experiment_name = n.experiment_name
    and t.user_classification = n.user_classification
    and t.shared_metric_name = n.shared_metric_name
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
, exp_groups as (
    select
    experiment_flag_name, control_name, count(distinct variant_name)
    from analytics.analytics.base_ab_experiments
    group by 1,2
    having count(distinct variant_name)>>1
)
, experiment_list as (
select
b.*,
row_number() over (partition by b.experiment_flag_name, b.control_name order by b.variant_name) as exp_number
from analytics.analytics.base_ab_experiments b
join exp_groups e
    on b.experiment_flag_name = e.experiment_flag_name
    and b.control_name = e.control_name
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
e.control_name,
e.variant_name,
e.experiment_flag_name,
case when metric_name like '%(1d|7d)%' then 'Y' else 'N' end as longterm_metric,
row_number() over (partition by e.experiment_flag_name, r.metric_name, r.user_classification order by delta desc) as metric_rnk
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join experiment_list e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
and is_full_experiment=1
with exp_results as (
select
r.experiment_name, metric_name, user_classification, 
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
and is_full_experiment=1
and metric_name not like '%(exp)%'
)
, all_percentiles as (
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
where clean_experiment_name not in (select distinct clean_experiment_name
from analytics.analytics.reporting_experiment_ab_metric_percentiles)
union all
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics.analytics.reporting_experiment_ab_metric_percentiles
)
select 
a.clean_experiment_name as experiment_name,
m.clean_metric_name as metric_name,
a.user_classification,
a.percent_group,
case
    when a.percent_group='All Users' then 1
    when a.percent_group='Bottom 10%' then 2
    when a.percent_group='Lower Middle (Middle 11-50%)' then 3
    when a.percent_group='Upper Middle (Middle 51-90%)' then 4
    when a.percent_group='Top 10%' then 5
    when a.percent_group='Top 1%' then 6
end as percent_group_rnk,
a.variant_value,
a.control_value,
a.variant_count,
a.control_count,
a.variant_over_zero,
a.control_over_zero,
case when a.percent_group = 'All Users' then e.variant_base end as variant_base,
case when a.percent_group = 'All Users' then e.control_base end as control_base,
case 
    when a.percent_group = 'All Users' then e.delta 
    when a.control_value=0 then null
    else (a.variant_value - a.control_value)/(a.control_value)
end as delta,
case when a.percent_group = 'All Users' then e.prob_var_beats_con end as prob_var_beats_con,
case when a.percent_group = 'All Users' then e.significant end as significant,
m.default_yn
from all_percentiles a
join analytics.analytics.base_ab_metrics_list m
    on m.metric_col_name = a.metric_col_name
join exp_results e
    on e.experiment_name = a.clean_experiment_name
    and a.user_classification = e.user_classification
    and m.clean_metric_name = e.metric_name
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
case
    when date(e.end_date) >> current_date() then datediff('day',e.start_date,current_date())
    else datediff('day',e.start_date,e.end_date)
end as experiment_days_passed,
e.assignment_level
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
with last_dates as (
    select
        max(r.as_of_date) as last_as_of_date,
        max(r.end_date) as last_end_date,
        max(date(b.end_date)) as expected_last_end_date,
        current_date() as today
    from analytics.analytics.reporting_experiment_ab_bayes_summary r
    join analytics.analytics.base_ab_experiments b
        on b.experiment_name = r.experiment_name
)
select 
*,
datediff('day',last_as_of_date,today) as days_since_as_of,
case
    when expected_last_end_date>>=today then datediff('day',last_end_date,today)
    else 0
end as days_since_end
from last_dates
2023-10-19 10:57:48,591 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard - A/A Experiments: found no models
select 
*, 
min(date_month) over (partition by customer_id order by date_month) as customer_first_mrr_month
from analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:57:48,592 — exposurescrawler — DEBUG —  ❌ Customer MRR Retention: found no models
select customer_id, min(period_start_utc) period_start, max(period_end_utc) period_end
from analytics.analytics.stripe_subscription_events
group by customer_id
2023-10-19 10:57:48,593 — exposurescrawler — DEBUG —  ❌ Customer Balance as of Date: found no models
with monthly_data as (
    select
        date_month,
        count(case when mrr_starting >> 0 then organization_id end) as paying_org_count,
        count(case when mrr_expansion >> 0 then organization_id end) as expanding_org_count,
        expanding_org_count/paying_org_count as expanding_perc
    from analytics.analytics.fact_mrr_movement_by_customer_by_month
    where date_month >>= '2021-01-01'
    group by 1
)
, quarterly_data as (
    select
        date_trunc('quarter', date_month) as date_quarter,
        sum(paying_org_count) as paying_org_count_quarter,
        sum(expanding_org_count) as expanding_org_count_quarter,
        expanding_org_count_quarter/paying_org_count_quarter as expanding_perc_quarter
    from monthly_data
    group by 1
)
, max_date_cte as (

    select 
        to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

)
, quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Expanding Workspaces Rate'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.paying_org_count as month_org_count,
m.expanding_org_count as month_expanding_org_count,
m.expanding_perc as month_expanding_perc,
q.paying_org_count_quarter as quarter_org_count,
q.expanding_org_count_quarter as quarter_expanding_org_count,
q.expanding_perc_quarter as quarter_expanding_perc,
yoy.paying_org_count as yoy_org_count,
yoy.expanding_org_count as yoy_expanding_org_count,
yoy.expanding_perc as yoy_expanding_perc,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Expanding Workspaces Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with topline as (
select 'VFV' as metric_type, total_video_first_views as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
union all 
select 'Views' as metric_type, total_views as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_video_views_unioned
union all 
select 'Signups' as metric_type, total_signups as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_signups_unioned
union all
select 'Total Recordings' as metric_type, total_recordings as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_recordings_unioned
union all 
select 'Total Recorders' as metric_type, total_recorders as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_recorders_unioned
union all 
select 'DAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'daily'
union all 
select 'WAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'weekly'
union all 
select 'MAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'monthly'
union all 
select 'Habit' as metric_type, total_habit_moment_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_habit_moment_users_unioned
union all 
select 'AwS' as metric_type, total_activated_work_signups as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_activated_work_signups_unioned
union all
select 'Domain with 7+ WAUs' as metric_type, total_domains_with_7_plus_work_active_users as metric_value, date_day, agg_type, user_classification, '' as country, '' as signup_attribution_type, '' as mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_domain_with_active_users_by_week
union all 
select 'NNARR' as metric_type, net_new_arr as metric_value, date_day, agg_type, '' as user_classification, '' as country, '' as signup_attribution_type, '' as mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_revenue_by_month
)


select * from topline
where date_day >>= '2020-01-01' and date_day <<= current_date()
with net_monthly_mrr as (
    select
        date_month,
        coalesce(sum(mrr_starting),0) mrr_starting,
        coalesce(sum(case when mrr_net_change_category = 'new' then mrr_net_change end),0) mrr_new,
        coalesce(sum(case when mrr_net_change_category = 'change_from_sales_led' then mrr_net_change end),0) mrr_from_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'reactivation' then mrr_net_change end),0) mrr_reactivation,
        coalesce(sum(case when mrr_net_change_category = 'expansion' then mrr_net_change end),0) mrr_expansion,
        coalesce(sum(case when mrr_net_change_category = 'contraction' then mrr_net_change end),0) mrr_contraction,
        coalesce(sum(case when mrr_net_change_category = 'change_to_sales_led' then mrr_net_change end),0) mrr_to_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'churn' then mrr_net_change end),0) mrr_churn,
        coalesce(sum(mrr_ending),0) mrr_ending
    from analytics.analytics.fact_self_serve_mrr_by_customer_by_month
    group by 1
),

net_monthly_mrr_with_financial_metrics as (
    select
        *,
        -- BEFORE
        -- mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        -- mrr_expansion as mrr_expansion_finance,
        -- mrr_contraction + mrr_churn + mrr_to_sales_led as mrr_churn_finance,
        -- mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        -- mrr_new_finance + mrr_expansion_finance as mrr_total_finance

        -- AFTER
        mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        mrr_expansion as mrr_expansion_finance,
        mrr_contraction + mrr_churn as mrr_churn_finance,
        mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        mrr_new_finance + mrr_expansion_finance as mrr_total_finance
    from net_monthly_mrr
)
-- select * from net_monthly_mrr_with_financial_metrics where date_month='2022-09-01'

, dates as (
    select 
        date_trunc('month',date_day) as date_month,
        max(case when date_day << current_date() then date_day end) as month_last_day,
        max(date_part('day',case when date_day << current_date() then date_day end)) as month_last_day_num,
        max(date_part('day',date_day)) as max_month_day_num,
        month_last_day_num/max_month_day_num as percent_thru_month
    from analytics.analytics.days
    group by 1
)

, monthly_data as (   
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Net new ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_net_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Total New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_total_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'New' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Expansion' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_expansion_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Churn ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_churn_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
)
, quarterly_data as (
    select
        the_quarter,
        channel,
        max(month_last_day) as quarter_last_day,
        sum(value) as value
    from monthly_data
    group by 1,2
)
, monthly_goals_data as (
    select
        case
            when metric = 'Net New' then 'Net new ARR' 
            when metric = 'New Revenue' then 'Total New ARR'
            when metric = 'New Revenue (New + Reactivation)' then 'New' -- part of 'Total New ARR'
            when metric = 'Expansion Revenue' then 'Expansion' -- part of 'Total New ARR'
            when metric = 'Contraction and Churn Revenue' then 'Churn ARR'
        end as clean_metric,
        *
    from analytics.analytics.reporting_score_card_goals
    where metric not in ('AWS','Signups')
)
, quarter_goals_data as (
    select
        quarter,
        model_grouping,
        clean_metric,
        sum(metric_value) as metric_value
    from monthly_goals_data
    group by 1, 2, 3
)
select
g.clean_metric as channel,
m.the_month,
m.the_quarter,
dateadd('day',-1,dateadd('quarter',1,m.the_quarter)) as quarter_max_day,
g.metric_value as month_goal,
m.value as month_actual,
m.value/m.percent_thru_month as month_pacing,
m.value/(month_goal * m.percent_thru_month) as month_pacing_pct,
last_year.value as last_year_actual,
(month_pacing/last_year.value) - 1 as YoY_percent,
qg.metric_value as quarter_goal,
q.value as quarter_actual,
datediff('day',q.the_quarter, q.quarter_last_day)/datediff('day', q.the_quarter, quarter_max_day) as percent_thru_quarter,
q.value/(quarter_goal * percent_thru_quarter) as quarter_pacing
from monthly_data m
join monthly_goals_data g
    on g.month = m.the_month
    and m.channel = g.clean_metric
join quarter_goals_data qg
    on qg.quarter = g.quarter
    and qg.model_grouping = g.model_grouping
    and qg.clean_metric = g.clean_metric
join quarterly_data q
    on m.the_quarter = q.the_quarter
    and m.channel = q.channel
left join monthly_data as last_year
    on m.the_month = dateadd('year',1,last_year.the_month)
    and m.channel = last_year.channel
with conversions as (
select 
    a.organization_id, min(date_day) as conversion_date
  from analytics.analytics.fact_mrr_movement_by_customer_by_day a
  where mrr_net_change_category in ('new')
  and sales_support_type_ending = 'self_serve'
  and date_day >> '2021-01-01'
  and mrr_new>>0
    group by 1
),
new_conversions_data as(
    select 
        o.organization_id, o.created_at, c.conversion_date
    from analytics.analytics.fact_organization o
    left join conversions c
        on c.organization_id = o.organization_id
    where o.created_at >>= '2021-01-01'
),
monthly_data as (
select
date_trunc('month', created_at) as signup_month,
count(organization_id) as org_count,
count(case when conversion_date is not null then organization_id end) as converted_org_count,
count(case when datediff(day, created_at, conversion_date) <<= 21 then organization_id end) as converted_21d_org_count,
converted_21d_org_count/org_count as conv_rate_21d
from new_conversions_data
where created_at >>= '2021-09-01'
group by 1
),
quarterly_data as (
select
date_trunc('quarter', created_at) as signup_quarter,
count(organization_id) as org_count,
count(case when conversion_date is not null then organization_id end) as converted_org_count,
count(case when datediff(day, created_at, conversion_date) <<= 21 then organization_id end) as converted_21d_org_count,
converted_21d_org_count/org_count as conv_rate_21d
from new_conversions_data
where created_at >>= '2021-09-01'
group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = '21d Conversion Rate'
    group by 1
)
select
m.signup_month,
q.signup_quarter,
m.org_count as month_org_count,
m.converted_21d_org_count as month_converted_21d_org_count,
m.conv_rate_21d as month_conv_rate_21d,
q.org_count as quarter_org_count,
q.converted_21d_org_count as quarter_converted_21d_org_count,
q.conv_rate_21d as quarter_conv_rate_21d,
yoy.org_count as yoy_org_count,
yoy.converted_21d_org_count as yoy_converted_21d_org_count,
yoy.conv_rate_21d as yoy_conv_rate_21d,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.signup_month = dateadd('y',1,yoy.signup_month)
left join quarterly_data q
    on date_trunc('quarter', m.signup_month) = q.signup_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.signup_month = mg.month
    and mg.metric='21d Conversion Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.signup_month) = qg.the_quarter
cross join max_date_cte
where m.signup_month >>= '2022-01-01'
with traffic_data as (
    select 
        date(event_date_utc) as visit_date, 
        sum(total_visits) as total_visits
    from analytics.analytics.reporting_traffic
    where path_category='marketing_site'
    and event_date_utc >>= dateadd('month',-13,current_date())
    group by 1
)
, views_data as (
    select
        date(f.segment_timestamp_utc) as view_date, 
        count(f.video_id) as total_views,
        count(case when u.user_classification='work' then f.video_id end) as work_views,
        count(case when f.is_logged_in_view=0 and u.user_classification='work' then f.video_id end) as anon_work_views
    from analytics.analytics.fact_video_views f
    join analytics.analytics.fact_user u
        on f.owner_id::varchar = u.user_id::varchar
    where f.segment_timestamp_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, vfv_data as (
    select
        date(video_first_view_at_utc) as vfv_date,
        count(video_id) as total_vfvs,
        count(case when u.user_classification='work' then video_id end) as work_vfvs
    from analytics.analytics.fact_recording f
    join analytics.analytics.fact_user u
        on f.user_id::varchar = u.user_id::varchar
    where video_first_view_at_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, total_traffic as (
    select distinct
        t_now.visit_date,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_visits    
    from traffic_data t_now
    left join traffic_data t_wow
        on t_now.visit_date = dateadd('day',7,t_wow.visit_date)
    left join traffic_data t_yoy
        on t_now.visit_date = dateadd('year',1,t_yoy.visit_date)
)
, total_views as (
    select distinct
        t_now.view_date,
        sum(t_now.total_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_views,
        sum(t_now.work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_views,  
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_anon_work_views  
    from views_data t_now
    left join views_data t_wow
        on t_now.view_date = dateadd('day',7,t_wow.view_date)
    left join views_data t_yoy
        on t_now.view_date = dateadd('year',1,t_yoy.view_date)
)
, total_vfvs as (
    select distinct
        t_now.vfv_date,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_vfvs,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_vfvs  
    from vfv_data t_now
    left join vfv_data t_wow
        on t_now.vfv_date = dateadd('day',7,t_wow.vfv_date)
    left join vfv_data t_yoy
        on t_now.vfv_date = dateadd('year',1,t_yoy.vfv_date)
)
, final_data as (
select 'Website Traffic' as metric, visit_date as the_date, t7_total_visits as t7_value, wow_total_visits as wow_value, yoy_total_visits as yoy_value from total_traffic
    union all
select 'Total Views' as metric, view_date as the_date, t7_total_views as t7_value, wow_total_views as wow_value, yoy_total_views as yoy_value from total_views
    union all
select 'Work Views' as metric, view_date as the_date, t7_work_views as t7_value, wow_work_views as wow_value, yoy_work_views as yoy_value from total_views
    union all
select 'Anon Work Views' as metric, view_date as the_date, t7_anon_work_views as t7_value, wow_anon_work_views as wow_value, yoy_anon_work_views as yoy_value from total_views
    union all
select 'Total VFVs' as metric, vfv_date as the_date, t7_total_vfvs as t7_value, wow_total_vfvs as wow_value, yoy_total_vfvs as yoy_value from total_vfvs
    union all
select 'Work VFVs' as metric, vfv_date as the_date, t7_work_vfvs as t7_value, wow_work_vfvs as wow_value, yoy_work_vfvs as yoy_value from total_vfvs
)
select * from final_data
where the_date << current_date()
2023-10-19 10:57:48,614 — exposurescrawler — DEBUG —  ❌ Topline Metric: found no models
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_TOTAL_VIDEO_SHARED" AS "COUNT_TOTAL_VIDEO_SHARED",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_VIDEO_SHARED" AS "COUNT_UNIQUE_VIDEO_SHARED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED" "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_TOTAL_VIDEO_VIEWED" AS "COUNT_TOTAL_VIDEO_VIEWED",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_VIDEO_VIEWED" AS "COUNT_UNIQUE_VIDEO_VIEWED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED" "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."EVENT_DATE_UTC"  >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_TOTAL_VIDEO_PAGE_VIEWED" AS "COUNT_TOTAL_VIDEO_PAGE_VIEWED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED" "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_INSTALL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."COUNT_APP_INSTALLS" AS "COUNT_APP_INSTALLS"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL" "REPORTING_DAILY_MOBILE_APP_INSTALL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."SIGNUP_REFERRER" AS "SIGNUP_REFERRER",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."COUNT_SIGNUP_STARTS" AS "COUNT_SIGNUP_STARTS",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."COUNT_SIGNUP_COMPLETES" AS "COUNT_SIGNUP_COMPLETES"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL" "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."SIGNIN_REFERRER" AS "SIGNIN_REFERRER",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."COUNT_SIGNIN_STARTS" AS "COUNT_SIGNIN_STARTS",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."COUNT_SIGNIN_COMPLETES" AS "COUNT_SIGNIN_COMPLETES"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL" "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_OPEN"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."COUNT_APP_OPENS" AS "COUNT_APP_OPENS"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN" "REPORTING_DAILY_MOBILE_APP_OPEN"
where "EVENT_DATE_UTC" >>= '2019-12-01' and "EVENT_DATE_UTC" <<= '2030-01-01'
2023-10-19 10:57:48,628 — exposurescrawler — DEBUG —  ❌ Mobile Health Dashboard: found no models
-- Cash flow forecast from subscriptions active and trialing
with calendar_day as (
  select
  date,
    date_part(MONTH, date) as month_num,
    monthname(date) as month_name,
    date_part(YEAR, date) as year
  from
    (
      -- from the start of the previous year to the end of the following year ->> 3 year rolling window
      SELECT dateadd(day,seq8(0), DATE_TRUNC(year, dateadd(year,-1, CURRENT_DATE))) AS date
  FROM table (generator(rowcount =>> (1095)+1))
    )
),
subscriptions as (
  select 
  subscription_id, customer_id, s1.created_at_utc, s1.status as sub_status, s1.start_date_utc as start_date, s1.ended_at_utc as ended_at, --s1.current_period_start_utc, s1.current_period_end_utc,
  cancel_at_date_utc as cancel_at, s1.canceled_at_date_utc as canceled_at, s1.trial_start_utc, s1.trial_end_utc,
    s1.plan_interval, s1.plan_interval_count, s1.billing_cycle_anchor_utc, days_until_due,
           s1.plan_id, s1.plan_name, s1.plan_amount, s1.quantity
  from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" s1
),
refunds as (
    select c.customer_id, inv.subscription_id, c.invoice_id, date(c.refund_created_at_utc) as due_date , date(inv.period_start_utc) as period_start, date(inv.period_end_utc) as period_end, date(c.refund_created_at_utc) as updated_at,  inv.is_paid, c.amount_refunded * -1 as amount, null as quantity
--  c.invoice_id, c.customer_id, date(c.created_at_utc) as date_refunded, c.currency, c.amount_refunded
    from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_CHARGES" c
    left join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_INVOICES" inv on inv.invoice_id = c.invoice_id
    left join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" sub on sub.subscription_id = inv.subscription_id and sub.customer_id = inv.customer_id
    where c.is_livemode = true
  and c.amount_refunded <<>> 0
),
subs as (
  select sub.subscription_id, sub.customer_id, 
  sub.sub_status, date(sub.billing_cycle_anchor_utc) as billing_cycle_anchor, 
  sub.start_date, sub.ended_at, sub.cancel_at, sub.canceled_at,  sub.days_until_due,
  sub.trial_start_utc, sub.trial_end_utc,
  sub.quantity, sub.plan_amount as unit_amount, sub.plan_name, 
  sub.plan_interval as price_interval, sub.plan_interval_count as price_interval_count
  from subscriptions sub
  ),
invoice_items as (
  -- Pending invoice items
  select customer_id, subscription_id, null as invoice_id, date(invoice_date_utc) as due_date, date(period_start_utc) as period_start, date(period_end_utc) as period_end, date(created_at_utc) as updated_at, false as is_paid, sum(amount) as amount, max(quantity) as quantity
    from "ANALYTICS"."ANALYTICS"."STRIPE_INVOICE_ITEM_EVENTS" inv
    where invoice_id is null
  and not exists (select 1 from "ANALYTICS"."ANALYTICS"."STRIPE_INVOICE_ITEM_EVENTS" item where item.invoice_item_id = inv.invoice_item_id and (item.invoice_id is not null or item.event_type = 'invoiceitem.deleted'))
    group by customer_id, subscription_id, date(invoice_date_utc) , date(period_start_utc) , date(period_end_utc) , date(created_at_utc), plan_id
  union 
  -- Actual subscription invoices
  select inv.customer_id, inv.subscription_id, inv.invoice_id, date(inv.due_date_utc) as due_date , date(inv.period_start_utc) as period_start, date(inv.period_end_utc) as period_end, date(inv.updated_at_utc) as updated_at,  inv.is_paid, inv.amount_due as amount, sum(quantity) as quantity
  from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_INVOICES" inv
  join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" sub on sub.subscription_id = inv.subscription_id and sub.customer_id = inv.customer_id
  where inv.subscription_id is not null
  and inv.AMOUNT_DUE >> 0 
  and inv.status not in ('void', 'uncollectible', 'deleted') 
  group by inv.customer_id, inv.subscription_id, inv.invoice_id, date(inv.due_date_utc), date(inv.period_start_utc), date(inv.period_end_utc), date(inv.updated_at_utc),  inv.is_paid, inv.amount_due
  union
  --Refunds
  select customer_id, subscription_id, invoice_id, due_date, period_start, period_end, updated_at, is_paid, amount, quantity
  from refunds
  order by 4
),
actuals as (
    select 'Actuals' as type, inv.subscription_id, inv.customer_id, coalesce(cus.customer_name, cus.email) as customer_name, case when cus.metadata:"Contract" is not null then 'Contract' else 'Self-Serve' end as contract, 
        inv.invoice_id, case when inv.invoice_id is null then due_date + coalesce(subs.days_until_due,0) else case when inv.is_paid then inv.updated_at else inv.due_date end end as date, inv.period_start, inv.period_end, amount as amount, 
        coalesce(inv.quantity, subs.quantity) as quantity,
        subs.plan_name, subs.price_interval, price_interval_count, subs.sub_status
    from invoice_items inv
    join subs on subs.subscription_id = inv.subscription_id
    join "ANALYTICS"."ANALYTICS"."STRIPE_CUSTOMERS" cus on cus.customer_id = inv.customer_id
),
forecast as (
  select 'Forecast' as type, subs.subscription_id, subs.customer_id, coalesce(cus.customer_name, cus.email) as customer_name, case when cus.metadata:"Contract" is not null then 'Contract' else 'Self-Serve' end as contract, subs.sub_status, 
  subs.cancel_at, subs.canceled_at, billing_cycle_anchor,
  subs.plan_name, subs.price_interval, price_interval_count,
  cal.date + coalesce(subs.days_until_due, 0) as date, 
  subs.quantity, subs.quantity * (subs.unit_amount * 0.01) as billable_amount
  --sub.status, count(*)
  from subs
  join "ANALYTICS"."ANALYTICS"."STRIPE_CUSTOMERS" cus on cus.customer_id = subs.customer_id
  join calendar_day cal on cal.date >>= date(subs.billing_cycle_anchor) 
  where ( (subs.cancel_at is null and subs.canceled_at is null) or cal.date << date(coalesce(subs.cancel_at, subs.canceled_at)))
  --and subs.subscription_id in ('sub_1MtZmID0tZaJVqhDlzwIiNFr', 'sub_1MsEJDD0tZaJVqhDZX7ZoQ4u')
  --and cal.date >>= date(subs.current_period_end)
  and date_part(DAY, cal.date) = date_part(DAY, subs.billing_cycle_anchor)  
  and (case when subs.price_interval = 'year' then date_part(MONTH, cal.date) else '1' end) =(case when subs.price_interval = 'year' then date_part(MONTH, subs.billing_cycle_anchor) else '1' end)
  -- bill every 3 months interval
  and case when subs.price_interval_count >> 1 then cast(date_part(MONTH, cal.date) as int) else  0 end in 
    (cast(date_part(MONTH, subs.billing_cycle_anchor) as int), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + subs.price_interval_count, cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + (subs.price_interval_count * 2), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + (subs.price_interval_count * 3), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) - (subs.price_interval_count), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) -(subs.price_interval_count * 2), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) - (subs.price_interval_count * 3), 0)
  ),
consolidated as (  
  select 
  type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, null as invoice_id, date, quantity, billable_amount as amount
  --contract, sub_status, plan_name, date, sum(quantity) seats_count, sum(billable_amount) as cash_to_receive
  from forecast
  union
  select type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, invoice_id, date, quantity, amount
  from actuals 
  )
select type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, invoice_id, date, quantity, amount
  from consolidated
2023-10-19 10:57:48,636 — exposurescrawler — DEBUG —  ❌ Cash Flow Forecast: found no models
-- get data from day of domain conversion
with conversion_data as (
    select date_day as conversion_date_day, mapped_domain, domain_classification, primary_subscription_mapped_plan_name, mrr_ending, seats_ending, sales_support_type
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where date_day = domain_first_mrr_day
)

-- get most recent domain churn day per domain
, domain_last_churn_date as (
    select mapped_domain, max(date_day) as churn_date_day
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where mrr_churn << 0
    group by 1
)

-- get data from most recent domain churn day
, churn_data as (
    select domain_last_churn_date.churn_date_day, domain_last_churn_date.mapped_domain, mrr.domain_classification, mrr.mrr_starting, mrr.seats_starting, mrr.sales_support_type, mrr.primary_subscription_mapped_plan_name
    from analytics.analytics.fact_mrr_movement_by_domain_by_day mrr
    inner join domain_last_churn_date
        on domain_last_churn_date.mapped_domain = mrr.mapped_domain
        and domain_last_churn_date.churn_date_day = mrr.date_day
)

-- get current domain data
, current_data as (
    select date_day, mapped_domain, domain_classification, mrr_ending, seats_ending, sales_support_type, primary_subscription_mapped_plan_name
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where date_day = current_date - 1
)

-- max seats per domain
, max_seats as (
    select mapped_domain, max(seats_ending) as max_seats
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    group by 1
)

, final as (
    select
        conversion_data.mapped_domain
        , conversion_data.domain_classification -- this is updated for all historical records if it ever changes
        , coalesce(current_data.sales_support_type, churn_data.sales_support_type) as sales_support_type
        , case 
            when current_data.date_day is null then 'churned'
            else 'active' 
          end as domain_status
        , conversion_data.conversion_date_day
        , case 
            when domain_status = 'churned' then churn_data.churn_date_day
            else null
          end as churn_date_day
        , case 
            when domain_status = 'active' then datediff('months', conversion_date_day, current_data.date_day) -- currently active tenure
            else datediff('months', conversion_date_day, churn_date_day) -- churn tenure
          end as tenure_months
        -- metrics
        -- mrr
        , conversion_data.mrr_ending as mrr_at_conversion
        , current_data.mrr_ending as mrr_current
        , case 
            when domain_status = 'churned' then churn_data.mrr_starting
          end as mrr_at_churn
        -- seats
        , conversion_data.seats_ending as seats_at_conversion
        , current_data.seats_ending as seats_current
        , case 
            when domain_status = 'churned' then churn_data.seats_starting 
          end as seats_at_churn
        , max_seats.max_seats

    from conversion_data

    left join churn_data
        on churn_data.mapped_domain = conversion_data.mapped_domain

    left join current_data
        on current_data.mapped_domain = conversion_data.mapped_domain

    left join max_seats
        on max_seats.mapped_domain = conversion_data.mapped_domain
)

select *
from final
2023-10-19 10:57:48,640 — exposurescrawler — DEBUG —  ❌ Domain Retention: found no models
with daily_active_users as(
    select *
    from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS

),

fact_user as (
    select *
    from ANALYTICS.ANALYTICS.FACT_USER

),

transcript_accessed as (

    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_ACCESSED

),

video_views as (
    select *
    from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
),

share_page_viewed as (
    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_PAGES
    where name = 'Individual Video'
),

emoji_reactions as
    (
        select *
        from ANALYTICS.ANALYTICS.fact_emoji_reaction
),

comments_created as (

    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_CREATED

),

comment_reply_created  as (
select *
from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_REPLY_CREATED
),

views as (select 'Views' as Source,
                 date(SEGMENT_TIMESTAMP_UTC)  as date,
                 IS_LOGGED_IN_VIEW as is_logged_in,
                 USER_CLASSIFICATION,
                 device_type,
                 country,
                 case
                     when vv.embedded_on is not null and vv.PARENT_LOCATION like '%loom.com/share%' then 'Share Page'
                     when vv.embedded_on is not null and vv.PARENT_LOCATION like '%loom.com%'
                         then 'Embedded Across Loom HQ'
                     when vv.embedded_on is not null then 'Embedded Video'
                     else 'Share Page' end    as Viewed_ON,
                 count(distinct USER_ANON_ID) as users,
                 count(distinct event_id)     as actions
          from video_views vv
          left join fact_user fu on coalesce(vv.user_id, vv.ANONYMOUS_ID)::varchar = fu.user_id::varchar
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and OWNER_ID::varchar <<>>  coalesce(vv.user_id, vv.ANONYMOUS_ID)::varchar -- eliminate self views
          group by 1, 2, 3, 4, 5, 6, 7
),

comments as (
    select 'Comment Created' as Source,
    date(segment_timestamp_utc) as date,
    case when cc.user_id is not null then true else false end as is_logged_in,
    USER_CLASSIFICATION,
    null as device_type,
    country,
    null as Viewed_ON,
    count(distinct coalesce(cc.user_id, cc.ANONYMOUS_ID)) as users,
    count(distinct event_id) as actions
    from comments_created cc
    left join fact_user fu on coalesce(cc.user_id, cc.ANONYMOUS_ID) = fu.user_id
     where (coalesce(domain, 'anon') != 'loom.com' or domain is null)
    group by 1, 2, 3, 4, 5, 6, 7

),

emojis as (select 'Reactions'                                               as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when cc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                      as Viewed_ON,
                  count(distinct coalesce(cc.user_id, cc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                  as actions
           from emoji_reactions cc
                    left join fact_user fu on coalesce(cc.user_id, cc.ANONYMOUS_ID) = fu.user_id
          where (coalesce(domain, 'anon') != 'loom.com' or domain is null)
           group by 1, 2, 3, 4, 5, 6, 7
),

share_page as (select 'Visited Share Page'                                  as Source,
                  date(SEGMENT_TIMESTAMP_UTC)                               as date,
                  case when spv.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(spv.user_id, spv.ANONYMOUS_ID))     as users,
                  count(distinct EVENT_ID)                                          as actions
           from share_page_viewed spv
           left join fact_user fu on coalesce(spv.user_id, spv.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and is_owner = false
           group by 1, 2, 3, 4, 5, 6, 7
),

transcripts as (select 'Transcript Accessed On Share Page'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when ta.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(ta.user_id, ta.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from transcript_accessed ta
           left join fact_user fu on coalesce(ta.user_id, ta.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and current_user_is_owner = false
           group by 1, 2, 3, 4, 5, 6, 7
),
comment_reply_text as (select 'Comment Replies - Text'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when crc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(crc.user_id, crc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from comment_reply_created crc
           left join fact_user fu on coalesce(crc.user_id, crc.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and comment_reply_type = 'text'
           group by 1, 2, 3, 4, 5, 6, 7
),

comment_reply_emoji as (select 'Comment Replies - Emoji'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when crc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(crc.user_id, crc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from comment_reply_created crc
           left join fact_user fu on coalesce(crc.user_id, crc.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and comment_reply_type = 'emojiOnly'
           group by 1, 2, 3, 4, 5, 6, 7
)

select *
from (select *
      from views
      UNION ALL
      select *
      from comments
      UNION ALL
      select *
      from emojis
      UNION ALL
      select *
      from share_page
      UNION ALL
      select *
      from transcripts
      UNION ALL
      select *
      from comment_reply_text
      UNION ALL
      select *
      from comment_reply_emoji      )
where date >>= current_date - 730 and date <<= current_date
select date(timestamp) as date, referral_type, device, started_at, funnel, embedded_on, USER_CLASSIFICATION,
         count(distinct user_anon_id) as users, count(distinct event_id) as events

  from (select (timestamp)                                                                                     as timestamp,
               a.referral_type,
               device,
               started_at,
               funnel,
               embedded_on,
               user_anon_id,
               event_id,
               fu.USER_CLASSIFICATION,
               row_number() over (partition by user_anon_id, date(timestamp) order by user_anon_id, timestamp) as row_num

        from (select funnel,
                     date,
                     USER_ANON_ID,
                     event_id,
                     embedded_on,
                     first_value(referral_type)
                                 IGNORE NULLS over ( partition by (user_anon_id), date order by timestamp asc) as referral_type,
                     first_value(device)
                                 IGNORE NULLS over ( partition by (user_anon_id), date order by timestamp asc) as device,
                     -- num_visits_to_share_page,
                     -- unique_videos,
                     timestamp,
                     max(case when row_number = '1' then funnel else null end)
                         over (partition by user_anon_id, date order by timestamp asc)                            started_at
              from (select *,
                           row_number() over (partition by user_anon_id, date order by user_anon_id, timestamp asc) as row_number,
                           count(distinct funnel) over (partition by user_anon_id)                                  as unique_events_taken_by_user
                    from (select case
                                     when REFERRAL_TYPE = 'Embedded Videos' then 'share_page_view_from_embed'
                                     when REFERRAL_TYPE = 'Slack' then 'share_page_view_from_slack'
                                     else 'share_page_view' end as funnel,
                                 date,
                                 user_anon_id,
                                 embedded_on,
                                 referral_type,
                                 device,
                                 event_id                       as event_id,
                                 video_id                       as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                      AS timestamp
                          from ( (select date(SEGMENT_TIMESTAMP_UTC)                                                                                                          as date,
                                         SEGMENT_TIMESTAMP_UTC,
                                         coalesce(user_id, anonymous_id)                                                                                          as user_anon_id,
                                         null                                                                                                                     as embedded_on,
                                         EVENT_ID                                                                                                                       as event_id,
                                         video_id,
                                         case
                                             when referrer = 'https://www.loom.com/' or
                                                  referrer = 'https://www.loom.com' or
                                                  referrer = 'http://www.loom.com'
                                                 then 'Loom Website Home Page'
                                             when referrer like '%/embed%' then 'Embedded Videos'
                                             when referrer = 'https://www.loom.com/home' then 'Loom HQ'
                                             when referrer = 'https://www.loom.com/looms/archive'
                                                 then 'Loom Archive'
                                             when referrer ilike '%loom.com/looms/videos%'
                                                 then 'Loom Library'
                                             when referrer ilike '%loom.com/share/folder/%' or
                                                  referrer ilike '%loom.com/looms/folders/%'
                                                 then 'Loom Folders'
                                             when referrer = 'https://www.loom.com/history'
                                                 then 'Loom History'
                                             when referrer ilike '%loom.com/oauth-callback%'
                                                 then 'loom.com/oauth-callback'
                                             when referrer ilike '%loom.com/share%' then 'Loom Share Page'
                                             when referrer ilike '%loom.com/tag/' then 'Loom Tags'
                                             when referrer ilike '%loom.com/spaces/%' then 'Loom Spaces'
                                             when referrer ilike '%loom.com%' then 'Other Loom Pages'
                                             when referrer is null then 'Direct'
                                             else 'Other Referral' end                                                                                            as REFERRAL_TYPE,
                                         null                                                                                                                     as device,
                                         count(*) over (partition by user_anon_id)                                                                                as num_visits,
                                         abs(timestampdiff('second', SEGMENT_TIMESTAMP_UTC, lag(SEGMENT_TIMESTAMP_UTC)
                                                                                    over (partition by user_anon_id, date order by user_anon_id, SEGMENT_TIMESTAMP_UTC asc))) as time_to_previous_visit
                                  from ANALYTICS.ANALYTICS.BASE_WEBSITE_PAGES
                                  where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30 and name = 'Individual Video'
                                    and is_owner = false
                                  order by user_anon_id, SEGMENT_TIMESTAMP_UTC, num_visits desc))


                          UNION ALL

                          select case
                                     when embedded_on like '%loom.com/share%' then 'video_viewed_on_share_page'
                                     when embedded_on is not null and device_type != 'slack' then 'video_viewed_on_embed'
                                     when device_type = 'slack' then 'video_viewed_on_slack'
                                     else 'video_viewed_on_share_page' end as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)               as date,
                                 USER_ANON_ID,
                                 parent_location_v2                        as embedded_on,
                                 null                                      as referral_type,
                                 device_type                               as device,
                                 fvv.event_id                              as event_id,
                                 null                                      as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                     as timestamp
                          from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS fvv
                                   left join (select PARENT_LOCATION,
                                                     case
                                                         when running_pct <<= .3 then parent_location_v2
                                                         else 'Other Embedded View' end as parent_location_v2,
                                                     views
                                              from (select *, round(sum(pct) over (order by pct desc), 2) as running_pct
                                                    from (select EMBEDDED_ON
                                                                                                   parent_location
                                                               , case
                                                                     when PARENT_LOCATION like '%loom.com%' then 'Loom HQ'
                                                                     else PARENT_LOCATION end   as parent_location_v2
                                                               , count(*)                       as views
                                                               , ratio_to_report(views) over () as pct
                                                          from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
                                                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                                                            and OWNER_ID::varchar <<>> USER_ANON_ID::varchar
                                                            and parent_location not like '%loom.com/share%'
                                                          group by 1, 2
                                                          order by 4 desc)
                                                    order by pct desc)) embedded_on
                                             on embedded_on.parent_location = fvv.PARENT_LOCATION
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and OWNER_ID::varchar <<>> USER_ANON_ID::varchar

                          UNION ALL

                          select 'video_cta_clicked'             as funnel,
                                 date(timestamp)                 as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device,
                                 id                              as event_id,
                                 null                            as unique_videos,
                                 timestamp
                          from raw.website.video_cta_clicked
                          where owner_click = false
                            and date(timestamp) >>= current_date - 30


                          UNION ALL

                          select 'transcript_accessed'           as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_ACCESSED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and CURRENT_USER_IS_OWNER = false

                          UNION ALL

                          select 'transcript_accessed_by_phrase_click' as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)           as date,
                                 coalesce(user_id, anonymous_id)       as USER_ANON_ID,
                                 null                                  as embedded_on,
                                 null                                  as referral_type,
                                 null                                  as device_type,
                                 event_id                              as event_id,
                                 null                                  as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                 as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_NAVIGATED_BY_PHRASE_CLICK
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and CURRENT_USER_IS_OWNER = false

                          UNION ALL

                          select funnel,
                                 date,
                                 USER_ANON_ID,
                                 embedded_on,
                                 referral_type,
                                 device_type,
                                 event_id,
                                 unique_videos,
                                 timestamp
                          from (select 'transcript_accessed_by_user_scroll'                                                                                                   as funnel,
                                       date(SEGMENT_TIMESTAMP_UTC)                                                                                                            as date,
                                       coalesce(user_id, anonymous_id)                                                                                                        as USER_ANON_ID,
                                       null                                                                                                                                   as embedded_on,
                                       null                                                                                                                                   as referral_type,
                                       null                                                                                                                                   as device_type,
                                       event_id                                                                                                                               as event_id,
                                       null                                                                                                                                   as unique_videos,
                                       SEGMENT_TIMESTAMP_UTC                                                                                                                  as timestamp,
                                       video_id,
                                       row_number() over (partition by coalesce(user_id, anonymous_id), video_id, date(SEGMENT_TIMESTAMP_UTC) order by SEGMENT_TIMESTAMP_UTC) as row_number
                                from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_NAVIGATED_BY_USER_SCROLL
                                where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                                  and CURRENT_USER_IS_OWNER = false
                                group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
                          where row_number = 1

                          UNION ALL

                          select 'emoji_reaction'                as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_EMOJI_REACTION
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'extended_reaction_clicked'     as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 ID                              as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_EXTENDED_REACTION_BUTTON_CLICKED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'entered_comment_mode'          as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 EVENT_ID                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_PLAYER_ENTERED_COMMENT_MODE
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'created_comment'               as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_CREATED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL


                          select 'comment_reply_created'         as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_REPLY_CREATED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30)
                    order by date, user_anon_id, timestamp)) a
                 left join analytics.analytics.fact_user fu on fu.user_id = a.user_anon_id
        where (coalesce(domain, 'anon') != 'loom.com' or domain is null))
  group by 1,2,3,4,5,6,7
2023-10-19 10:57:48,657 — exposurescrawler — DEBUG —  ✅ ViewerX Funnel & Core Metrics Monitoring: found models ['raw.website.video_cta_clicked']
with fact_videos as (
    select date(SEGMENT_TIMESTAMP_UTC) as SEGMENT_TIMESTAMP_UTC, owner_id, count(*) as video_views
    from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
    where OWNER_ID::varchar <<>> USER_ANON_ID::varchar --eliminate self views
    group by 1,2
),
 fact_user as (

     select * from ANALYTICS.ANALYTICS.KPI_USER_CLASSIFICATION
 ),

 fact_recordings as (

     select dau.USER_ANON_ID as user_anon_id,
            date(dau.DAY) as active_day,
            date(RECORDING_START_AT_UTC) as RECORDING_START_AT_UTC,
            date(RECORDING_COMPLETE_AT_UTC)as RECORDING_COMPLETE_AT_UTC,
            date(RECORDING_DELETED_AT_UTC) as RECORDING_DELETED_AT_UTC,
            date(RECORDING_CANCELLED_AT_UTC) as RECORDING_CANCELLED_AT_UTC,
            date(RECORDING_STOPPED_AT_UTC) as RECORDING_STOPPED_AT_UTC,
            date(RECORDING_QUIT_AT_UTC) as RECORDING_QUIT_AT_UTC,
            count(distinct case when service in ('windows', 'mac') then video_id end) as desktop_recordings,
                count(distinct case when SERVICE in ('browser_extension') then video_id end) as extension_recordings,
                  count(distinct case when service in ('ios_cam', 'ios_screen') then video_id end) as ios_recordings,
                 count(distinct case when service in ('sdk_recorder') then video_id end) as sdk_recordings,
                 count(distinct case when SERVICE in ('android') then video_id end) as android_recordings,
                count(distinct case when service in ('no service data') then video_id end) as unknown_recordings,
                count(distinct video_id) as total_recordings
     from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS dau
         LEFT JOIN ANALYTICS.ANALYTICS.FACT_RECORDING fr on date(fr.recording_complete_at_utc) = date(dau.day) and dau.USER_ANON_ID::varchar = fr.USER_ID::varchar
   --  where date(dau.DAY) = current_date - 10 --and user_id = '7773189'
     group by 1,2,3,4,5,6,7,8
 ),

 recordings_by_user_by_day as (

    select

        user_id,
        date_trunc('day', recording_complete_at_utc) as recording_day,
        count(distinct case when service in ('windows', 'mac') then video_id end) as desktop_recordings,
        count(distinct case when SERVICE in ('browser_extension') then video_id end) as extension_recordings,
        count(distinct case when service in ('ios_cam', 'ios_screen') then video_id end) as ios_recordings,
        count(distinct case when service in ('sdk_recorder') then video_id end) as sdk_recordings,
        count(distinct case when SERVICE in ('android') then video_id end) as android_recordings,
        count(distinct case when service in ('no service data') then video_id end) as unknown_recordings,
        count(distinct video_id) as total_recordings,
        count(distinct to_date(recording_complete_at_utc)) as recording_day_count
    from ANALYTICS.ANALYTICS.FACT_RECORDING
    where recording_complete_at_utc is not null
      --and date(RECORDING_COMPLETE_AT_UTC) = current_date - 10
    group by 1, 2

),

  vfv_by_user_by_day as (

    select

        nvfvd.user_id, -- user receiving vfv
        date_trunc('day', nvfvd.event_date_utc) as vfv_day,
        date_trunc('day', fr.recording_complete_at_utc) as recording_day_of_vfv,
        count(distinct nvfvd.video_id) as vfv_count

    from ANALYTICS.ANALYTICS.nodejs_video_first_view_deduped nvfvd
    inner join ANALYTICS.ANALYTICS.FACT_RECORDING fr
        on nvfvd.video_id = fr.video_id
    group by 1, 2, 3

    ),

 emoji_reaction as(
     select date(EVENT_DATE_UTC) as EVENT_DATE_UTC,
            coalesce(user_id, ANONYMOUS_ID) as user_anon_id,
            count(distinct case when (sentiment like 'yay%' or sentiment like 'wow%' or sentiment like 'love%' or sentiment like 'joy%' or
 sentiment like 'down%' or sentiment like 'up%' or sentiment like '+1%' or sentiment like '-1%' or sentiment like 'raised_hands%' or sentiment like 'heart_eyes%' or sentiment like 'open_mouth%')
           then event_id end) as default_emojis_used,
    count(*) - default_emojis_used  as extended_emoji_picker_emoji_used,
    count(*) as total_emojis_used
     from ANALYTICS.ANALYTICS.BASE_WEBSITE_EMOJI_REACTION
  --   where date(EVENT_DATE_UTC) = current_date - 10
     group by 1,2

 ),

    kpi_block as (
select
       dau.DAY as day,
       category as USER_CLASSIFICATION,
       country,
       cast(count(distinct dau.user_anon_id) as int) as "daily_active_user",
       cast(sum(fv_received.video_views)as int) as "video_views_received",
       cast(sum(default_emojis_used)as int) as "default_emojis_used",
       cast(sum(extended_emoji_picker_emoji_used)as int) as "extended_emoji_picker_used",
       cast(sum(total_emojis_used)as int)                as "total_emojis_used",
--completed recordings
       cast(sum(desktop_recordings) as int) as "desktop_recordings_completed",
       cast(sum(extension_recordings) as int) as "extension_recordings_completed",
       cast(sum(ios_recordings) as int) as "ios_recordings_completed",
       cast(sum(sdk_recordings) as int) as "sdk_recordings_completed",
       cast(sum(android_recordings) as int) as "android_recordings_completed",
       cast(sum(unknown_recordings) as int) as "unknown_recordings_completed",
       cast(sum(total_recordings) as int) as "total_recordings_completed",
       cast(sum(vfv_count) as int) as "vfv_count"

from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS dau
left join fact_user fu on dau.user_anon_id::varchar = fu.user_id::varchar
left join fact_videos fv_received on fv_received.owner_id::varchar = dau.user_anon_id::varchar and date(dau.day) = date(fv_received.SEGMENT_TIMESTAMP_UTC)
left join emoji_reaction er on er.user_anon_id::varchar = dau.USER_ANON_ID::varchar and date(er.EVENT_DATE_UTC) = date(dau.DAY)
left join recordings_by_user_by_day fr on fr.USER_ID::varchar = dau.user_anon_id::varchar and date(fr.recording_day) = date(dau.day)
left join vfv_by_user_by_day vfv on vfv.USER_ID::varchar = dau.USER_ANON_ID::varchar and date(vfv.recording_day_of_vfv) = date(dau.DAY)
where year(dau.day) >>= year(current_date()) - 1

group by 1,2,3
)
select day,
       USER_CLASSIFICATION,
       country,
       metric,
       value
    from (
             (select day,
                     USER_CLASSIFICATION,
                     country,
      "daily_active_user",
      "video_views_received",
      "default_emojis_used",
      "extended_emoji_picker_used",
      "total_emojis_used",

--completed recordings
       "desktop_recordings_completed",
       "extension_recordings_completed",
       "ios_recordings_completed",
       "sdk_recordings_completed",
       "android_recordings_completed",
       "unknown_recordings_completed",
       "total_recordings_completed",
       "vfv_count"
             from kpi_block) p
unpivot
(value for metric in
(     "daily_active_user",
      "video_views_received",
      "default_emojis_used",
      "extended_emoji_picker_used",
      "total_emojis_used",

--completed recordings
       "desktop_recordings_completed",
       "extension_recordings_completed",
       "ios_recordings_completed",
       "sdk_recordings_completed",
       "android_recordings_completed",
       "unknown_recordings_completed",
       "total_recordings_completed",
       "vfv_count"))) as unpvt
2023-10-19 10:57:48,664 — exposurescrawler — DEBUG —  ❌ [BETA] - Tableau Cockpit Loom: found no models
select * 
from analytics.analytics.reporting_mrr_movement_by_customer
where date_agg = 'monthly'
and date_utc = date_trunc('month', sysdate()) - interval '1 month'
2023-10-19 10:57:48,665 — exposurescrawler — DEBUG —  ❌ Monthly ARR Movement Summary: found no models
SELECT "ACTIVATION_METRICS"."METRIC_YEAR" AS "METRIC_YEAR",
  "ACTIVATION_METRICS"."METRIC_MONTH" AS "METRIC_MONTH",
  "ACTIVATION_METRICS"."METRIC_YEAR_MONTH" AS "METRIC_YEAR_MONTH",
  "ACTIVATION_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ACTIVATION_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ACTIVATION_METRICS"."SIGNUP_ATTRIBUTION_TYPE" AS "SIGNUP_ATTRIBUTION_TYPE",
  "ACTIVATION_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ACTIVATION_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ACTIVATION_METRICS" "ACTIVATION_METRICS"
WHERE METRIC_YEAR_MONTH >>= '2020-01'
SELECT "ENGAGEMENT_METRICS"."EVENT_YEAR" AS "EVENT_YEAR",
  "ENGAGEMENT_METRICS"."EVENT_MONTH" AS "EVENT_MONTH",
  "ENGAGEMENT_METRICS"."EVENT_YEAR_MONTH" AS "EVENT_YEAR_MONTH",
  "ENGAGEMENT_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ENGAGEMENT_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ENGAGEMENT_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ENGAGEMENT_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ENGAGEMENT_METRICS" "ENGAGEMENT_METRICS"
WHERE EVENT_YEAR_MONTH >>= '2020-01'
SELECT "WORKSPACE_METRICS"."EVENT_YEAR" AS "EVENT_YEAR",
  "WORKSPACE_METRICS"."EVENT_MONTH" AS "EVENT_MONTH",
  "WORKSPACE_METRICS"."EVENT_YEAR_MONTH" AS "EVENT_YEAR_MONTH",
  "WORKSPACE_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "WORKSPACE_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "WORKSPACE_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "WORKSPACE_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_WORKSPACE_METRICS" "WORKSPACE_METRICS"
where event_year_month >>= '2020-10'
SELECT "ACQUISITION_METRICS"."METRIC_YEAR" AS "METRIC_YEAR",
  "ACQUISITION_METRICS"."METRIC_MONTH" AS "METRIC_MONTH",
  "ACQUISITION_METRICS"."METRIC_YEAR_MONTH" AS "METRIC_YEAR_MONTH",
  "ACQUISITION_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ACQUISITION_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ACQUISITION_METRICS"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "ACQUISITION_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ACQUISITION_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ACQUISITION_METRICS" "ACQUISITION_METRICS"
WHERE METRIC_YEAR_MONTH >>= '2020-01'
2023-10-19 10:57:48,669 — exposurescrawler — DEBUG —  ❌ Overall Product Health Dashboard: found no models
with 

assignments as (

    select
        anonymous_id::varchar as anonymous_id,
        experiment_name,
        assignment_group,
        user_classification,
        min(assignment_tstamp_utc) as assignment_tstamp_utc,
        min(assignment_tstamp_pt) as assignment_tstamp_pt

    from analytics.analytics.ab_anon_experiment_users
    where experiment_name = 'experiment-website-record-reply-logged-out-users'
        and date(assignment_tstamp_utc) between '2021-10-23' and '2021-10-29'
    group by 1,2,3,4
),

user_ids as (

    select
        assignments.anonymous_id,
        assignments.experiment_name,
        assignments.assignment_group,
        assignments.user_classification,
        assignments.assignment_tstamp_utc,
        fact_user.user_id::varchar as user_id,
        fact_user.created_at

    from assignments
    left join analytics.analytics.tracks_anonymous_id_user_id_mapping
        on tracks_anonymous_id_user_id_mapping.anonymous_id = assignments.anonymous_id
    left join analytics.analytics.fact_user
        on fact_user.user_id::varchar = tracks_anonymous_id_user_id_mapping.user_id
        and fact_user.created_at >>= assignments.assignment_tstamp_utc
),

joined as (
    select
        user_ids.anonymous_id,
        user_ids.experiment_name,
        user_ids.assignment_group,
        coalesce(video_comment.creation_method,'aggregate') as creation_method,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 1 then video_comment.event_id else null end) total_video_view_comments_1d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 1 then video_comment.anonymous_id else null end) total_video_view_commenters_1d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 7 then video_comment.event_id else null end) total_video_view_comments_7d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 7 then video_comment.anonymous_id else null end) total_video_view_commenters_7d
    from user_ids
    left join analytics.analytics.base_website_video_comment_created as video_comment
      on user_ids.anonymous_id = video_comment.anonymous_id
      and video_comment.segment_timestamp_utc >>= user_ids.assignment_tstamp_utc
      and date(segment_timestamp_utc) between '2021-10-23' and '2021-11-06'
    group by grouping sets (
      (user_ids.anonymous_id, user_ids.experiment_name, user_ids.assignment_group, video_comment.creation_method),
      (user_ids.anonymous_id, user_ids.experiment_name, user_ids.assignment_group)
    )
)

select 
  experiment_name,
  assignment_group,
  creation_method,
  count(distinct anonymous_id) as cnt_users,
  sum(coalesce(total_video_view_comments_1d,0)) as tot_comments_1d,
  sum(coalesce(total_video_view_commenters_1d,0)) as tot_commenters_1d,
  sum(coalesce(total_video_view_comments_1d,0))/count(distinct anonymous_id) as avg_comments_1d,
--  sum(coalesce(total_video_view_comments_1d,0))/sum(coalesce(total_video_view_commenters_1d,0)) as avg_comments_per_commenter_1d,
  sum(coalesce(total_video_view_comments_7d,0)) as tot_comments_7d,
  sum(coalesce(total_video_view_commenters_7d,0)) as tot_commenters_7d,
  sum(coalesce(total_video_view_comments_7d,0))/count(distinct anonymous_id) as avg_comments_7d
--  sum(coalesce(total_video_view_comments_7d,0))/sum(coalesce(total_video_view_commenters_7d,0)) as avg_comments_per_commenter_7d
from joined 
group by 1,2,3
--------------------------------------------------------------------------------------------
------------ sdk recording data
--------------------------------------------------------------------------------------------

with

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_anon' as event_name
    , timestamp
    , anonymous_id
    , video_id
    , id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3,4,5
),

sign_up_button_clicked_base as (
  select anonymous_id, timestamp
  from raw.website.sign_up_in_oauth_button_clicked -- ok, provider is auth0, apple, google rn
  where is_logged_in = false
    and source = 'anon-record-a-reply'

union all 

  select anonymous_id, timestamp
  from raw.website.email_sign_up_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
),

anon_comment_button_click as (
  select 
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.anon_comment_button_click
  group by 1
),

anon_exit_signup_click as (
  select 
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.exit_anon_record_a_reply_signup_modal
  group by 1
),


sign_up_button_clicked as (
    select 
      anonymous_id
      -- , video_id 
      , min(timestamp) as min_timestamp 
    from sign_up_button_clicked_base
    group by 1-- ,2
),

complete_onboarding_step as (
  select
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.complete_onboarding_step      -- ok
  where source = 'anon-record-a-reply'
  group by 1
),

onboarding_flow_complete as (
  select
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.onboarding_flow_complete      -- ok
  where source = 'anon-record-a-reply'
  group by 1
),

copy_link as(
  select anonymous_id
    , sdk_partner_id
    , segment_timestamp_utc
    , video_id
  from analytics.analytics.base_loomsdk_production_sdk_close_preview_modal_confirm_button_clicked
  union all
  select anonymous_id
    , sdk_partner_id
    , segment_timestamp_utc
    , video_id
  from analytics.analytics.base_loomsdk_production_sdk_copy_video_link_buton_clicked
),

min_copy_link as(
  select anonymous_id
    , sdk_partner_id
    , video_id
    , min(segment_timestamp_utc) as segment_timestamp_utc
  from copy_link
  group by 1, 2, 3
),

recording_data_base as(
  select
      r.video_id
      , r.recording_start_at_utc
      , r.recording_complete_at_utc
      , r.user_id
      , r.organization_id
      , r.sdk_partner_id
      , r.anonymous_id
      , i.segment_timestamp_utc as insert_at_utc
      , r.video_first_view_at_utc
      , acbc.min_timestamp as anon_comment_button_click_utc 
      , aesc.min_timestamp as anon_exit_signup_click_utc
      , subc.min_timestamp as sign_up_click_utc
      , onstep.min_timestamp as onboarding_step_utc
      , oncomplete.min_timestamp as onboarding_complete_utc 
      , coalesce(fff.flag_value,'not in experiment') as flag_value
      , coalesce(fff.flag_name,'not in experiment') as flag_name
      , ((datediff('second', r.recording_start_at_utc, r.recording_complete_at_utc)/60)/60)/24 as days_start_to_complete
      , ((datediff('second', r.recording_complete_at_utc, i.segment_timestamp_utc)/60)/60)/24 as days_complete_to_insert
      , ((datediff('second', r.recording_complete_at_utc, vv.segment_timestamp_utc)/60)/60)/24 as days_complete_to_vfv
      , ((datediff('second', r.recording_complete_at_utc, l.segment_timestamp_utc)/60)/60)/24 as days_complete_to_copy_link
      , ((datediff('second', r.recording_start_at_utc, r.recording_deleted_at_utc)/60)/60)/24 as days_start_to_delete
      , ((datediff('seconds', recording_start_at_utc, current_timestamp())/60)/60)/24 as time_passed_start
      , ((datediff('seconds', recording_complete_at_utc, current_timestamp())/60)/60)/24 as time_passed_complete
  from analytics.analytics.fact_recording r

      -- join share_page_record_reply_button_clicked rra
      --     on r.anonymous_id = rra.anonymous_id
      left join analytics.analytics.base_loomsdk_production_sdk_insert_recording_button_clicked i
          on i.video_id = r.video_id
              and i.segment_timestamp_utc >>= r.recording_start_at_utc ---- clicked insert after they started the recording
      left join analytics.analytics.fact_video_views vv --- for SDK need to look at video views, not video first view because event won't fire if sharing the same user id
          on r.video_id = vv.video_id
            and vv.segment_timestamp_utc >>= r.recording_complete_at_utc
              and ifnull(vv.anonymous_id, '-100') != ifnull(r.anonymous_id, '-200')
      left join min_copy_link l
          on l.video_id = r.video_id
            and l.anonymous_id = r.anonymous_id
              and l.sdk_partner_id = r.sdk_partner_id
                and l.segment_timestamp_utc >>= r.recording_complete_at_utc
      join analytics.analytics.base_nodejs_feature_flag_fetched fff
          on fff.anonymous_id = r.anonymous_id
          and fff.flag_name = 'experiment-website-record-reply-logged-out-users'
          and fff.flag_value in ('control','variant')
          and date(fff.segment_timestamp_utc) between '2021-10-23' and '2021-10-29' --  '2021-10-20 00:00:00'
      left join anon_comment_button_click acbc 
          on r.anonymous_id = acbc.anonymous_id 
      left join anon_exit_signup_click aesc 
          on r.anonymous_id = aesc.anonymous_id 
      left join sign_up_button_clicked subc 
          on r.anonymous_id = subc.anonymous_id 
          -- and r.video_id = subc.video_id  
      left join complete_onboarding_step onstep
          on r.anonymous_id = onstep.anonymous_id
      left join onboarding_flow_complete oncomplete
          on r.anonymous_id = oncomplete.anonymous_id 
  where r.recording_client = 'sdk_recorder'
    and date(r.recording_start_at_utc) >>= '2021-10-20'
  ),


recording_data as (
  select
    a.anonymous_id as button_click_anonymous_id
    , a.timestamp as button_click_at_utc
    , a.id as button_click_event_id
    , b.*
  from share_page_record_reply_button_clicked a 
  left join recording_data_base b
    on a.anonymous_id = b.anonymous_id 
),

record_button_click_agg as (
  select 
    'record button clicks' as metric 
    , date(button_click_at_utc) as date_day
    , date_trunc('week',button_click_at_utc)
    , date_trunc('month',button_click_at_utc)
    , 'variant' as flag_value 
    , count(distinct button_click_event_id) as value
    , NULL as base 
  from recording_data
  where button_click_at_utc is not null 
  group by 1,2,3,4,5
),

record_button_click_anonymous_agg as (
  select 
    'record button click anonymous' as metric 
    , date(button_click_at_utc) as date_day
    , date_trunc('week',button_click_at_utc)
    , date_trunc('month',button_click_at_utc)
    , 'variant' as flag_value 
    , count(distinct button_click_anonymous_id) as value
    , NULL as base 
  from recording_data
  where button_click_at_utc is not null 
  group by 1,2,3,4,5
),

recording_start_video_agg as(
  select 'recording start videos' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_start_anonymous_agg as(
  select 'recording start anonymous' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_start_partner_agg as(
  select 'recording start partner' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_video_agg as(
  select 'recording complete videos' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_anonymous_agg as(
  select 'recording complete anonymous' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_partner_agg as(
  select 'recording complete partner' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_video_agg as(
  select 'recording insert videos' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_anonymous_agg as(
  select 'recording insert anonymous' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_partner_agg as(
  select 'recording insert partner' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

comment_button_click_anonymous as(
 select 'comment button click anonymous' as metric
   , date(anon_comment_button_click_utc) as date_day
   , date_trunc('week', anon_comment_button_click_utc) as date_week
   , date_trunc('month', anon_comment_button_click_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where anon_comment_button_click_utc is not null
 group by 1, 2, 3, 4, 5
),

exit_signup_click_anonymous as(
 select 'exit signup click anonymous' as metric
   , date(anon_exit_signup_click_utc) as date_day
   , date_trunc('week', anon_exit_signup_click_utc) as date_week
   , date_trunc('month', anon_exit_signup_click_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where anon_exit_signup_click_utc is not null
 group by 1, 2, 3, 4, 5
),

 sign_up_click_anonymous as(
  select 'sign up click anonymous' as metric
    , date(sign_up_click_utc) as date_day
    , date_trunc('week', sign_up_click_utc) as date_week
    , date_trunc('month', sign_up_click_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where sign_up_click_utc is not null
  group by 1, 2, 3, 4, 5
),

onboarding_step_anonymous as(
 select 'onboarding step anonymous' as metric
   , date(onboarding_step_utc) as date_day
   , date_trunc('week', onboarding_step_utc) as date_week
   , date_trunc('month', onboarding_step_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where onboarding_step_utc is not null
 group by 1, 2, 3, 4, 5
),

onboarding_complete_anonymous as(
 select 'onboarding complete anonymous' as metric
   , date(onboarding_complete_utc) as date_day
   , date_trunc('week', onboarding_complete_utc) as date_week
   , date_trunc('month', onboarding_complete_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where onboarding_complete_utc is not null
 group by 1, 2, 3, 4, 5
),


final as (
select * from record_button_click_agg
union all
select * from record_button_click_anonymous_agg
union all 
select * from recording_start_video_agg
union all
select * from recording_start_anonymous_agg
union all
select * from recording_start_partner_agg
union all
select * from recording_complete_video_agg
union all
select * from recording_complete_anonymous_agg
union all
select * from recording_complete_partner_agg
union all
select * from recording_insert_video_agg
union all
select * from recording_insert_anonymous_agg
union all
select * from recording_insert_partner_agg
union all 
select * from comment_button_click_anonymous
union all 
select * from sign_up_click_anonymous
union all 
select * from exit_signup_click_anonymous
union all 
select * from onboarding_step_anonymous
union all 
select * from onboarding_complete_anonymous
)



select
  date_day
  , flag_value
  , sum(case when metric = 'record button clicks' then value else null end) as cnt_record_button_click
  , sum(case when metric = 'recording start videos' then value else null end) as cnt_video_start
  , sum(case when metric = 'recording complete videos' then value else null end) as cnt_video_complete
  , sum(case when metric = 'recording insert videos' then value else null end) as cnt_video_insert
  , sum(case when metric = 'recording complete videos' then value else null end)/sum(case when metric = 'recording start videos' then value else null end) as pct_video_start_to_complete
  , sum(case when metric = 'recording insert videos' then value else null end)/sum(case when metric = 'recording complete videos' then value else null end) as pct_video_complete_to_insert

  , sum(case when metric = 'record button click anonymous' then value else null end) as cnt_users_button_click
  , sum(case when metric = 'recording start anonymous' then value else null end) as cnt_users_recording_start
  , sum(case when metric = 'recording complete anonymous' then value else null end) as cnt_users_recording_complete
  , sum(case when metric = 'recording insert anonymous' then value else null end) as cnt_users_recording_insert
  , sum(case when metric = 'recording complete anonymous' then value else null end)/sum(case when metric = 'recording start anonymous' then value else null end) as pct_users_start_to_complete
  , sum(case when metric = 'recording insert anonymous' then value else null end)/sum(case when metric = 'recording complete anonymous' then value else null end) as pct_users_complete_to_insert
  , sum(case when metric = 'comment button click anonymous' then value else null end) cnt_users_comment_click 
  , sum(case when metric = 'exit signup click anonymous' then value else null end) as cnt_users_exit_signup_click
  , sum(case when metric = 'sign up click anonymous' then value else null end) as cnt_users_signup_click
  , sum(case when metric = 'onboarding step anonymous' then value else null end) as cnt_users_onboard_step
  , sum(case when metric = 'onboarding complete anonymous' then value else null end) as cnt_users_onboard_complete
from final
-- where date_day between '2021-10-23' and '2021-10-29'
group by 1,2
with
variant as (
  select distinct anonymous_id
  from analytics.analytics.base_nodejs_feature_flag_fetched
  where date(segment_timestamp_pt) >>= '2021-10-20'
    and flag_name = 'experiment-website-record-reply-logged-out-users'
    and flag_value = 'variant'
),

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_anon' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_signed_in' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = true
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

exit_anon_record_a_reply_signup_modal as (
  select
    'exit_anon_record_a_reply_signup_modal' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.exit_anon_record_a_reply_signup_modal   -- ok, no source needed
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

anon_comment_button_click as (
  select
    'anon_comment_button_click' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.anon_comment_button_click   -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

email_login_button_clicked as (
  select
    'email_login_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.email_login_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

sign_up_in_oauth_button_clicked as (
  select
    'sign_up_in_oauth_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sign_up_in_oauth_button_clicked -- ok, provider is auth0, apple, google rn
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

email_sign_up_button_clicked as (
  select
    'email_sign_up_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.email_sign_up_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

complete_onboarding_step as (
  select
    'complete_onboarding_step' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.complete_onboarding_step      -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

onboarding_flow_complete as (
  select
    'onboarding_flow_complete' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.onboarding_flow_complete      -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_record_button_clicked as (
  select
    'sdk_record_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_record_button_clicked     -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_recording_canceled as (
  select
    'sdk_recording_canceled' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_recording_canceled        -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_recording_completed as (
  select
    'sdk_recording_completed' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_recording_completed       -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

events as (
  select * from share_page_record_reply_button_clicked
    union all
  select * from share_page_record_reply_button_clicked
    union all
  select * from exit_anon_record_a_reply_signup_modal
    union all
  select * from anon_comment_button_click
    union all
  select * from email_login_button_clicked
    union all
  select * from sign_up_in_oauth_button_clicked
    union all
  select * from email_sign_up_button_clicked
    union all
  select * from complete_onboarding_step
    union all
  select * from onboarding_flow_complete
    union all
  select * from sdk_record_button_clicked
    union all
  select * from sdk_recording_canceled
    union all
  select * from sdk_recording_completed
)

select
  variant.anonymous_id
  , events.event_date_utc
  , coalesce(events.event_name, 'no events') as event
  , sum(coalesce(events.events,0)) as value
from variant
left join events
  on variant.anonymous_id = events.anonymous_id
group by 1,2,3
2023-10-19 10:57:48,693 — exposurescrawler — DEBUG —  ✅ Record a Reply (Anonymous) Custom Metrics: found models ['raw.website.complete_onboarding_step', 'raw.website.share_page_record_reply_button_clicked', 'raw.website.exit_anon_record_a_reply_signup_modal', 'raw.website.anon_comment_button_click', 'raw.website.sign_up_in_oauth_button_clicked', 'raw.website.email_sign_up_button_clicked', 'raw.website.onboarding_flow_complete', 'raw.website.complete_onboarding_step', 'raw.website.sdk_record_button_clicked', 'raw.website.sdk_recording_canceled', 'raw.website.sdk_recording_completed', 'raw.website.share_page_record_reply_button_clicked', 'raw.website.exit_anon_record_a_reply_signup_modal', 'raw.website.anon_comment_button_click', 'raw.website.email_login_button_clicked', 'raw.website.sign_up_in_oauth_button_clicked', 'raw.website.email_sign_up_button_clicked', 'raw.website.onboarding_flow_complete']
select * from 
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
where 
DATE_END = (select max(date_end) from ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS)
2023-10-19 10:57:48,694 — exposurescrawler — DEBUG —  ❌ Influencers & Network health dashboard: found no models
SELECT "FACT_MRR_BY_DOMAIN_BY_MONTH"."MAPPED_DOMAIN" AS "MAPPED_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."DATE_MONTH" AS "DATE_MONTH",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."FIRST_ACTIVE_MONTH" AS "FIRST_ACTIVE_MONTH",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEATS" AS "SEATS",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PREVIOUS_MONTH_SEATS" AS "PREVIOUS_MONTH_SEATS",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEATS_CHANGE" AS "SEATS_CHANGE",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR" AS "MRR",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PREVIOUS_MONTH_MRR" AS "PREVIOUS_MONTH_MRR",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR_CHANGE" AS "MRR_CHANGE",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."IS_EDUCATION_VERIFIED_DOMAIN" AS "IS_EDUCATION_VERIFIED_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."IS_PUBLIC_DOMAIN" AS "IS_PUBLIC_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PAID_ORGANIZATION_CLASSIFICATION" AS "PAID_ORGANIZATION_CLASSIFICATION",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR_CHANGE_CATEGORY" AS "MRR_CHANGE_CATEGORY",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEAT_CHANGE_CATEGORY" AS "SEAT_CHANGE_CATEGORY"
FROM "ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH" "FACT_MRR_BY_DOMAIN_BY_MONTH"
WHERE
    "MRR" >> 0 OR "MRR_CHANGE_CATEGORY" = 'churn'
ORDER BY 1, 2
2023-10-19 10:57:48,696 — exposurescrawler — DEBUG —  ❌ MRR Exports: found no models
select
    count(vv.event_id) as total_videos_viewed,
    count(distinct coalesce(vv.user_id, vv.anonymous_id)) as unique_video_viewers,
    count(case when vv.segment_timestamp_utc >> dateadd('day', -30, localtimestamp)
          then vv.event_id end) as videos_viewed_l30d,
    count(distinct case when vv.segment_timestamp_utc >> dateadd('day', -30, localtimestamp)
          then coalesce(vv.user_id, vv.anonymous_id) end) as unique_video_viewers_l30d
from
    analytics.fact_video_views as vv
where
    vv.owner_id != vv.user_id or vv.user_id is null
2023-10-19 10:57:48,697 — exposurescrawler — DEBUG —  ❌ Product Marketing: found no models
select 
video_id
, user_id
, client
, recording_client
, recording_type
, service
, recording_start_at_utc
, recording_cancelled_at_utc
, recording_stopped_at_utc
, recording_complete_at_utc
, duration_of_completed_video
, coalesce(upload_method, 'us-west-2') as upload_method
, r.country_code
, cc.country_name
, case
    when r.country_code in ('BM','CA','GL','PM','US') then 'North America'
    when r.country_code in ('AW','BB','BS','BQ','KY','CU','CW','DM','DO','GD','GP','HT','JM','MQ','MS','PR','BL','KN','LC','MF','VC','SX','TT','TC','VG','VI') then 'Caribbean'
    when r.country_code in ('BZ','CR','SV','GT','HN','MX','NI','PA') then 'Central America'
    when r.country_code in ('AR','BO','BV','BR','CL','CO','EC','FK','GF','GY','PY','PE','GS','SR','UY','VE') then 'South America'
    when r.country_code in ('DZ','AO','BJ','BW','IO','BF','BI','CV','CM','CF','TD','KM','CG','CD','CI','DJ','EG','GQ','ER','SZ','ET','TF','GA','GM','GH','GN','GW','KE','LS','LR','LY','MG','MW','ML','MR','MU','YT','MA','MZ','NA','NE','NG','RE','RW','SH','ST','SN','SC','SL','SO','ZA','SS','SD','TZ','TG','TN','UG','EH','ZM','ZW') then 'Africa'
    when r.country_code in ('AU','FJ','GU','PF','FM','NR','NC','NZ','NU','NF','MP','PW','PG','PN','WS','SB','TK','TO','TV','UM','VU','WF') then 'Oceania'
    when r.country_code in ('BY','BG','CZ','HU','MD','PL','RO','RU','SK','UA') then 'Europe'
    when r.country_code in ('AX','DK','EE','FO','FI','GG','IS','IE','IM','JE','LV','LT','NO','SJ','SE','GB') then 'Europe'
    when r.country_code in ('XK','AL','AD','BA','HR','GI','GR','VA','IT','MT','ME','MK','PT','SM','RS','SI','ES') then 'Europe'
    when r.country_code in ('AT','BE','FR','DE','LI','LU','MC','NL','CH') then 'Europe'
    when r.country_code in ('CN','HK','JP','KP','KR','MO','MN','TW') then 'Asia'
    when r.country_code in ('KZ','KG','TJ','TM','UZ') then 'Asia'
    when r.country_code in ('BN','KH','ID','LA','MY','MM','PH','SG','TH','TL','VN') then 'Asia'
    when r.country_code in ('AF','BD','BT','IN','IR','MV','NP','PK','LK') then 'Asia'
    when r.country_code in ('AM','AZ','BH','CY','GE','IQ','IL','JO','KW','LB','OM','PS','QA','SA','SY','TR','AE','YE') then 'Asia'
    else 'Other'
   end as region_name
, case
    when r.country_code in ('BM','CA','GL','PM','US') then 'North America'
    when r.country_code in ('AW','BB','BS','BQ','KY','CU','CW','DM','DO','GD','GP','HT','JM','MQ','MS','PR','BL','KN','LC','MF','VC','SX','TT','TC','VG','VI') then 'Caribbean'
    when r.country_code in ('BZ','CR','SV','GT','HN','MX','NI','PA') then 'Central America'
    when r.country_code in ('AR','BO','BV','BR','CL','CO','EC','FK','GF','GY','PY','PE','GS','SR','UY','VE') then 'South America'
    when r.country_code in ('DZ','AO','BJ','BW','IO','BF','BI','CV','CM','CF','TD','KM','CG','CD','CI','DJ','EG','GQ','ER','SZ','ET','TF','GA','GM','GH','GN','GW','KE','LS','LR','LY','MG','MW','ML','MR','MU','YT','MA','MZ','NA','NE','NG','RE','RW','SH','ST','SN','SC','SL','SO','ZA','SS','SD','TZ','TG','TN','UG','EH','ZM','ZW') then 'Africa'
    when r.country_code in ('AU','FJ','GU','PF','FM','NR','NC','NZ','NU','NF','MP','PW','PG','PN','WS','SB','TK','TO','TV','UM','VU','WF') then 'Oceania'
    when r.country_code in ('BY','BG','CZ','HU','MD','PL','RO','RU','SK','UA') then 'Eastern Europe'
    when r.country_code in ('AX','DK','EE','FO','FI','GG','IS','IE','IM','JE','LV','LT','NO','SJ','SE','GB') then 'Northern Europe'
    when r.country_code in ('XK','AL','AD','BA','HR','GI','GR','VA','IT','MT','ME','MK','PT','SM','RS','SI','ES') then 'Southern Europe'
    when r.country_code in ('AT','BE','FR','DE','LI','LU','MC','NL','CH') then 'Western Europe'
    when r.country_code in ('CN','HK','JP','KP','KR','MO','MN','TW') then 'Eastern Asia'
    when r.country_code in ('KZ','KG','TJ','TM','UZ') then 'Central Asia'
    when r.country_code in ('BN','KH','ID','LA','MY','MM','PH','SG','TH','TL','VN') then 'Southeast Asia'
    when r.country_code in ('AF','BD','BT','IN','IR','MV','NP','PK','LK') then 'Southern Asia'
    when r.country_code in ('AM','AZ','BH','CY','GE','IQ','IL','JO','KW','LB','OM','PS','QA','SA','SY','TR','AE','YE') then 'Western Asia'
    else 'Other'
   end as sub_region_name
, case
    when r.country_code in ('GB','DE','US','FR','ES','AU') then 'In Experiment'
    when coalesce(upload_method, 'us-west-2') = 'upload-proxy' then 'In Experiment'
    else 'Not In Experiment'
   end as in_experiment
, recording_stability_1d
, case when recording_cancelled_at_utc is null then 0 else 1 end as is_not_cancelled
, latency
, speed_test_result
, upload_throughput
, avg_bit_rate
, width * height as video_resolution
, resolution
, ttv_seconds
, ttv_normalized
from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
    on r.country_code = cc.country_code
where coalesce(ttv_seconds,0) >>= 0
and coalesce(ttv_seconds,0) <<= 1200 
and coalesce(date(recording_start_at_utc),'2021-04-01') >>= dateadd('day',-61,current_date)
and coalesce(date(recording_start_at_utc),'2021-04-01') <<= current_date
2023-10-19 10:57:48,701 — exposurescrawler — DEBUG —  ❌ TTV Experiment Tracking: found no models
select
s.anonymous_id,
s.slack_user_id,
s.slack_team_id,
s.segment_timestamp_utc as nudge_shown_utc,
min(c.segment_timestamp_utc) as nudge_click_utc,
min(i.segment_timestamp_utc) as invite_sent_utc,
count(distinct invitee_slack_id) as invite_count
from analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown s
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked c
    on c.slack_user_id = s.slack_user_id
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',1,s.segment_timestamp_utc)
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent i
    on i.slack_user_id = c.slack_user_id
    and i.slack_team_id = c.slack_team_id
    and i.segment_timestamp_utc >>= c.segment_timestamp_utc
    and i.segment_timestamp_utc <<= dateadd('min',1,c.segment_timestamp_utc)
group by 1,2,3,4
with link_shares as (
    select
        case when is_channel_public is null then 'Unknown'
            when is_channel_public then 'Yes' else 'No' end as is_channel_public,
        case when is_sender_connected is null then 'Unknown'
            when is_sender_connected then 'Yes' else 'No' end as is_sender_connected,
        (case when is_channel_public then 'public' else 'private' end)||'|'||(case when is_sender_connected then 'connected' else 'not_connected' end) as share_bucket,
        segment_timestamp_utc,
        slack_user_id,
        slack_team_id,
        anonymous_id,
        event_id,
        array_size(parse_json(links)) as link_count
    from analytics.analytics.staging_integrations_slack_app_link_shared
)
, workspace_connect as (
select
    l.slack_user_id,
    l.slack_team_id,
    split(l.source,'?')[0]::varchar as source,
    l.segment_timestamp_utc as link_timestamp_utc
from analytics.analytics.base_integrations_slack_connect_link l
where l.source='newly_connected_workspace_connect_prompt'
)
, user_connect_prompts as (
select 
    anonymous_id,
    slack_user_id,
    slack_team_id,
    segment_timestamp_utc as user_connect_prompt_utc,
    source
from analytics.analytics.staging_integrations_slack_app_link_shared_connect_prompt_sent
)
, publish_nudges as (
select 
s.anonymous_id,
s.user_id,
s.slack_user_id,
s.slack_team_id,
parse_json(s.video_info)[0]['id']::varchar as video_id,
s.segment_timestamp_utc as publish_nudge_shown_utc,
a.segment_timestamp_utc as publish_nudge_accepted_utc,
m.segment_timestamp_utc as publish_nudge_muted_utc,
d.segment_timestamp_utc as publish_nudge_dismissed_utc
from analytics.analytics.staging_integrations_slack_app_publish_nudge_shown s
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_accepted a
    on a.user_id = s.user_id
    and parse_json(a.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and a.segment_timestamp_utc >>= s.segment_timestamp_utc
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_muted m
    on m.user_id = s.user_id
    and parse_json(m.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and m.segment_timestamp_utc >>= s.segment_timestamp_utc
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_dismissed d
    on d.user_id = s.user_id
    and parse_json(d.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and d.segment_timestamp_utc >>= s.segment_timestamp_utc
)
, invite_nudges as (
select 
s.anonymous_id,
s.user_id,
s.slack_user_id,
s.slack_team_id,
s.is_channel_public,
s.segment_timestamp_utc as invite_nudge_shown_utc,
i.segment_timestamp_utc as invite_sent_via_nudge_utc,
array_size(parse_json(invitees)) as invite_count,
d.segment_timestamp_utc as invite_nudge_declined_utc
from analytics.analytics.staging_integrations_slack_app_invite_nudge_shown s
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_invites_sent i
    on i.user_id = s.user_id
    and i.segment_timestamp_utc >>= s.segment_timestamp_utc
    and i.segment_timestamp_utc <<= dateadd('min',15,s.segment_timestamp_utc)
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_declined d
    on d.user_id = s.user_id
    and d.segment_timestamp_utc >>= s.segment_timestamp_utc
    and d.segment_timestamp_utc <<= dateadd('min',15,s.segment_timestamp_utc)
)
, permission_granted as (
select
s.slack_team_id,
s.slack_user_id,
min(cc.segment_timestamp_utc) as grant_permission_utc
from analytics.analytics.staging_integrations_slack_app_link_shared_update_scopes_connect_sent s
left join  analytics.analytics.staging_integrations_slack_app_link_shared_update_scopes_connect c
    on c.slack_user_id = s.slack_user_id
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
left join analytics.analytics.base_integrations_slack_connect_callback cc
    on cc.slack_user_id = s.slack_user_id
    and cc.slack_team_id = s.slack_team_id
    and cc.segment_timestamp_utc >>= s.segment_timestamp_utc
    and cc.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
group by 1,2
)
, received_link_and_joined as (
select
    s.slack_user_id,
    s.slack_team_id,
    min(cc.segment_timestamp_utc) as receiver_granted_utc,
    min(cl.segment_timestamp_utc) as receiver_connected_utc,
    count(distinct s.member) as receiver_count
from analytics.analytics.staging_integrations_slack_app_link_shared_receivers_with_loom_account_connect_sent s
left join analytics.analytics.staging_integrations_slack_app_link_shared_receivers_with_loom_account_connect c
    on c.slack_user_id = s.member
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
left join analytics.analytics.base_integrations_slack_connect_callback cc
    on cc.slack_user_id = c.slack_user_id
    and cc.slack_team_id = c.slack_team_id
    and cc.segment_timestamp_utc >>= c.segment_timestamp_utc
    and cc.segment_timestamp_utc <<= dateadd('min',10,c.segment_timestamp_utc)
    and cc.source = 'link_shared_update_scopes_connect_prompt'
left join analytics.analytics.base_integrations_slack_connect_link cl
    on cl.slack_user_id = c.slack_user_id
    and cl.slack_team_id = c.slack_team_id
    and cl.segment_timestamp_utc >>= c.segment_timestamp_utc
    and cl.segment_timestamp_utc <<= dateadd('min',10,c.segment_timestamp_utc)
    and cl.source = 'link_shared_update_scopes_connect_prompt'
group by 1,2
)
, first_scope_update as (
select
    slack_user_id,
    slack_team_id,
    min(segment_timestamp_utc) as first_scope_update_utc
from analytics.analytics.base_integrations_slack_connect_callback
where source in ('link_shared_update_scopes_connect_prompt')
group by 1,2
)
, final_data as (
    select    
        ls.is_channel_public,
        ls.is_sender_connected,
        ls.share_bucket,
        ls.segment_timestamp_utc as link_share_utc,
        ls.slack_user_id,
        ls.slack_team_id,
        ls.anonymous_id,
        ls.link_count,
        ls.event_id as link_share_event_id,
    
        max(case when fsu.slack_user_id is not null then 'Y' else 'N' end) as updated_scopes_yn,

        min(wc.link_timestamp_utc) as workspace_connect_link_utc,

        min(pn.publish_nudge_shown_utc) as publish_nudge_shown_utc,
        min(pn.publish_nudge_accepted_utc) as publish_nudge_accepted_utc,
        min(pn.publish_nudge_muted_utc) as publish_nudge_muted_utc,
        min(pn.publish_nudge_dismissed_utc) as publish_nudge_dismissed_utc,

        min(i.invite_nudge_shown_utc) as invite_nudge_shown_utc,
        min(i.invite_sent_via_nudge_utc) as invite_sent_via_nudge_utc,
        max(i.invite_count) as invite_count,
        min(i.invite_nudge_declined_utc) as invite_nudge_declined_utc,

        min(scp.user_connect_prompt_utc) as sender_connect_prompt_utc,
    
        min(pg.grant_permission_utc) as grant_permission_utc,
    
        min(rlj.receiver_connected_utc) as receiver_connected_utc,
        min(rlj.receiver_granted_utc) as receiver_granted_utc,
        min(rlj.receiver_count) as receiver_count
    
    from link_shares ls
    left join workspace_connect wc
        on wc.slack_user_id = ls.slack_user_id
        and wc.slack_team_id = ls.slack_team_id
        and wc.link_timestamp_utc >>= ls.segment_timestamp_utc
        and wc.link_timestamp_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join user_connect_prompts scp
        on scp.slack_user_id = ls.slack_user_id
        and scp.slack_team_id = ls.slack_team_id
        and scp.user_connect_prompt_utc >>= ls.segment_timestamp_utc
        and scp.user_connect_prompt_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join publish_nudges pn
        on pn.slack_user_id = ls.slack_user_id
        and pn.slack_team_id = ls.slack_team_id
        and pn.publish_nudge_shown_utc >>= ls.segment_timestamp_utc
        and pn.publish_nudge_shown_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join invite_nudges i
        on i.slack_user_id = ls.slack_user_id
        and i.slack_team_id = ls.slack_team_id
        and i.invite_nudge_shown_utc >>= ls.segment_timestamp_utc
        and i.invite_nudge_shown_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join permission_granted pg
        on pg.slack_user_id = ls.slack_user_id
        and pg.slack_team_id = ls.slack_team_id
        and pg.grant_permission_utc >>= ls.segment_timestamp_utc
        and pg.grant_permission_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join received_link_and_joined rlj
        on rlj.slack_user_id = ls.slack_user_id
        and rlj.slack_team_id = ls.slack_team_id
        and rlj.receiver_connected_utc >>= ls.segment_timestamp_utc
        and rlj.receiver_connected_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join first_scope_update fsu
        on fsu.slack_user_id = ls.slack_user_id
        and fsu.slack_team_id = ls.slack_team_id
        and fsu.first_scope_update_utc <<= ls.segment_timestamp_utc
    group by 1,2,3,4,5,6,7,8,9
)
select * from final_data
2023-10-19 10:57:48,713 — exposurescrawler — DEBUG —  ❌ Slack Connect Event Tracking: found no models
2023-10-19 10:57:48,713 — exposurescrawler — INFO — ⚙️ Found 2 workbooks with linked models
local
2023-10-19 10:57:51,160 — exposurescrawler — INFO — 
2023-10-19 10:57:51,160 — exposurescrawler — INFO — 🔍 Parsing GraphQL result: looking for native SQL tables
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_SUGGESTION_JOINS] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Workspace Consolidation | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS] => ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Workspace Consolidation | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Go/ROI-Dash | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Go/ROI-Dash | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_INVITATIONS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_ROLE_CHANGES] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_STANDARD_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[SPRIG_SURVEY_RESPONSES] => ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Sprig Survey Responses (Prototype) | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_vfvers
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_seats
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viral_looms
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viewers
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_GOOGLE_SEARCH_ROI] => ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —  ➕ Marketing ROI | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
2023-10-19 10:57:51,160 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CHANNEL_ROI] => ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Marketing ROI | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DAGSTER_PIPELINES].[DAGSTER_PIPELINE_RUNS] => ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Dagster Runs | adding native SQL: ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EMAIL_AB_PERFORMANCE] => ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Marketing Email AB Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Marketing Email AB Dashboard | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_PAID_SDK_PARTNER_USAGE_BY_DAY] => ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ InfraSDK Invoice Data | adding native SQL: ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_FIRST_VIEWS
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,161 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS_DEV.DBT_KAMRAN.REPORTING_TRAFFIC
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Net MRR Expansion Rate | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[ACTIVITY_BY_WORKSPACE_BY_MONTH] => ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_RAYMOND].[FACT_ORGANIZATION_MEMBERSHIPS_HISTORY] => ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[TOP_REFERRERS] => ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Referrals WIP | adding native SQL: ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_USAGE] => ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_CLIP_DISTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_COMPLETE_RATE_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_CLIP_STATS] => ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PERC_EDIT_RECORDING_AND_RECORDER] => ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[CREATOR_LITE_LIMITS_DATA] => ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Creator Lite LImits | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY_BY_USER] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Virality Performance Dashboard (go/virality-performance) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_SUBSCRIPTIONS] => ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICE_LINE_ITEMS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_ACCOUNT] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALESFORCE_USER] => ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_CUSTOMERS] => ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_INVOICES] => ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_PARTNER_SOURCING] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Partner Sourcing | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_OPPORTUNITY] => ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Sales Pipeline Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_STRIPE_DISCOUNT_REDEMPTIONS] => ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Stripe Coupons Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
2023-10-19 10:57:51,162 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ webform metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FUNNEL_WEBFORMS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MIUROS_SUPPORT_QA] => ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Support QA Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ SDK Summary Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PLAN_TYPE_ENGAGEMENT] => ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Plan Type Reporting | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_revenue_metrics
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viral_looms
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viewers
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_seats
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_vfvers
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_sales_metrics
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Traffic | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Traffic | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ nithin-poc | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_WORKSPACE_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_RECORDING] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
2023-10-19 10:57:51,163 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_VIDEO_VIEW] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_CORINNA].[REPORTING_CREATE_FUNNEL_OVERALL] => ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Create Funnel (WIP) | adding native SQL: ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_CORINNA].[REPORTING_CREATE_FUNNEL_RECORDING_START] => ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Create Funnel (WIP) | adding native SQL: ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAIN_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAINS_AGGR] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACE_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAINS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_EXPANSION] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_HEALTH] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_HEALTH] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_STRAGGLER_USERS] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[REPORTING_ACTIVE_FREQUENCY_SEGMENTATION] => ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Activity Frequency Segments | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER].[REPORTING_RETENTION] => ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Weekly Cohorts DEV, DATA DOESN'T UPDATE | adding native SQL: ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding native SQL: analytics.analytics.fact_recording_ttv
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Depth Of Retention Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Depth Of Retention Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Monthly ARR Movement Summary | adding native SQL: analytics.analytics.reporting_mrr_movement_by_customer
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER_ADHOC].[REPORTING_BRAND] => ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Brand Summary | adding native SQL: ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[SDK_SIGNUP_CONVERSION_SPEED] => ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ SDK Signup Conversion Speed | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACE_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:57:51,164 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAIN_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_USER_ADOPTION] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Adoption Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_USER_VIDEOS] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Adoption Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Support | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ZENDESK_TICKET_RESPONSES] => ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Support | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Marketing Site Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_APP_WORKSPACE_SETTINGS] => ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Workspace Settings | adding native SQL: ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEHAN].[REPORTING_HV_SALES_ASSIST] => ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ HV  Performance Summary (Adhoc) | adding native SQL: ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_KPI_FOUNDATION] => ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_AGGREGATE] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:57:51,165 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_experiments
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_AB_METRICS_LIST] => ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_metric_percentiles
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEHAN].[USER_ENGAGEMENT_CLASSIFICATION] => ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ engagement prototype | adding native SQL: ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_CONNECT_INIT] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY] => ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY] => ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.staging_salesforce_account => ANALYTICS.analytics.staging_salesforce_account
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.analytics.staging_salesforce_account
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: analytics.analytics.staging_salesforce_workspace
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_INVOICES
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.stripe_plans
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.base_salesforce_user => ANALYTICS.analytics.base_salesforce_user
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.analytics.base_salesforce_user
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION_MEMBERSHIPS_HISTORY] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Total Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Total Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —  ➕ Sales Led MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,166 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[ORGANIZATION_SEATS_PREDICTIONS] => ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Churn Forecasting | adding native SQL: ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[MRR_BY_SUBSCRIPTION_BY_WEEK] => ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Churn Forecasting | adding native SQL: ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_ENGAGEMENT_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Engagement Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRACKS_COUNT] => ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Event Totals | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[CURRENT_TRACKS_EVENT_COUNT] => ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Event Totals | adding native SQL: ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SIGNUP_PAGE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Signup Page Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_metric_active_users_unioned
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.days
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_self_serve_mrr_by_customer_by_month
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.days
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SCORE_CARDS] => ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_metric_video_first_views_unioned
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_USERS] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_FOLDERS] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_WORKSPACES] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENGAGEMENT_SEGMENTATION] => ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Creator Engagement | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_OKRS] => ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Creator Engagement | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_CONTENT_DENSITY] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_USAGE] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_TAGS_HEATMAP] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ENGAGEMENT_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_WORKSPACE_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ACQUISITION_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
2023-10-19 10:57:51,167 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ACTIVATION_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACTIVE_USERS_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Active Users Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN:  => raw.website.
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: raw.website.
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN:  => analytics.analytics.
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: analytics.analytics.
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[AB_ANON_USER_LEVEL_METRICS] => ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_CAM_FRAMES_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Cam Frames Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_AB_METRICS_LIST] => ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_metric_percentiles
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.base_ab_experiments
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DAILY_VIEWING] => ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Create Daily Active Tableau  | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DAILY_ACTIVE] => ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Create Daily Active Tableau  | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,168 — exposurescrawler — DEBUG —  ➕ Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[SHARED_MODAL_PIVOTED_RESULTS] => ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Shared Modal AB Fast Follows | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE] => ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Organic Search Traffic | adding native SQL: ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - New | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - New | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_HOME_PAGE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Home Page Analysis Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_SDK_SUMMARY] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ SEO Dashboard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_GOOGLE_SEARCH_SEO] => ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ SEO Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[REPORTING_USER_SEGMENTATION_2023_PLANNING] => ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ 2023_Planning_User_Segments | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Behavioral Insights | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_CAM_FRAMES_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Cam Frames - V2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_RECENT_ACTIVITY_PAGE] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Recent Activity Feature - Rollout Engagement | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER_ADHOC].[REPORTING_BRAND] => ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Brand | adding native SQL: ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_APP_ORGANIZATIONS_MEMBERSHIPS] => ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Workspace Engagement Dashboard (go/workspace-engagement-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Workspace Engagement Dashboard (go/workspace-engagement-dash) | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_SDK_SUMMARY] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ SDK Standard Summary | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_VALIDATION].[SNAPSHOT_DELTAS] => ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Delta Validation Dashboard | adding native SQL: ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_VALIDATION].[DAILY_VALIDATION_DELTAS] => ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Delta Validation Dashboard | adding native SQL: ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_HV_SALES_ASSIST] => ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ HVSM  Performance Summary | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF].[USER_POOL_WITH_POST_ENGAGEMENT_INFO] => ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ 2022 Planning - P&P: Impact of Recording Limits | adding native SQL: ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_KPI_FOUNDATION] => ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_AGGREGATE] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.fact_video_views => ANALYTICS.analytics.fact_video_views
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding native SQL: ANALYTICS.analytics.fact_video_views
2023-10-19 10:57:51,169 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_FOR_STARTUPS_PROGRAM] => ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_FOR_STARTUPS_PROGRAM] => ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PARTNER_SOURCING] => ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Partner Sourcing | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SIGNUP_METRICS] => ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_STATS] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_MRR] => ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_OVERALL] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACCOUNT_OVERVIEW] => ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_ACCOUNT_ACTIVITY] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_ACCOUNT_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT] => ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_INVITES] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CONTACT_IMPORTS] => ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CONTACT_IMPORT_ENTRYPOINTS] => ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 10:57:51,170 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: analytics.analytics.stripe_subscription_events
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_STRIPE_CUSTOMER_BALANCE_TRANSACTIONS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_IVFV_TEST] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[INTEGRATION_RECORDINGS_VIEWS_TEST_6] => ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_MRR] => ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ENGAGEMENT] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ACTION] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_PERMISSION] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SIGNUP_METRICS] => ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ACTION_FLOW] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_INVITATIONS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_STANDARD_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_ROLE_CHANGES] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_COMPARABLE_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.staging_stripe_trial_starts
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_workspace_by_day
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_by_subscription_by_day
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_week
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LTV] => ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_user_by_workspace_by_day
2023-10-19 10:57:51,171 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.staging_nodejs_auto_join_workspace
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_day
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACCOUNT_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ CSM Managed Account Metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_WORKSPACE_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ CSM Managed Account Metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_RECORDING_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: ANALYTICS_intermediate.intermediate_active_work_users_with_mobile => ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS] => ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_MAWU] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_NOTIFICATION_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_VIEWERS_AND_RECORDERS] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOMHQ_ACTIVE_USERS] => ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_WORKSPACE_DENSITY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Self Serve MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Domain Retention | adding native SQL: analytics.analytics.fact_mrr_movement_by_domain_by_day
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ ARR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_self_serve_mrr_by_customer_by_month
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.days
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SCORE_CARDS] => ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:57:51,172 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED] => ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_organization
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_day
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_recorders_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_recordings_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_active_users_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_revenue_by_month
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_habit_moment_users_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_activated_work_signups_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_signups_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_video_views_unioned
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_domain_with_active_users_by_week
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_user
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Domain MRR | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_NPS_SURVEY_RESPONSES] => ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ NPS | adding native SQL: ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FEATURE_USAGE_BY_POWER_USER_GROUP_20230615] => ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Feature Usage by Power User Group | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FEATURE_USAGE_BY_POWER_USER_GROUP_20221214] => ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Feature Usage by Power User Group | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[CREATOR_LITE_TEMP_20220412] => ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Member Video Limits | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANDRILL_EMAIL_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Mandrill Emails Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LTV] => ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ LTV | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,173 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ MRR Analysis | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ MRR Analysis | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FORECAST] => ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ Forecast | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ MRR Movement Demo 2022-05 | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[VIDEO_VIEWED] => ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ Views by Device | adding native SQL: ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH" => ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ MRR Exports | adding native SQL: ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,174 — exposurescrawler — DEBUG —  ➕ Experiment Timeline | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,174 — exposurescrawler — INFO — 🔍 Found 136 workbooks with native SQL
2023-10-19 10:57:51,174 — exposurescrawler — INFO — ⚙️ Parsing SQL: looking for references to models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 10:57:51,175 — exposurescrawler — DEBUG —  ❌ Workspace Consolidation: found no models
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,176 — exposurescrawler — DEBUG —  ❌ Go/ROI-Dash: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 10:57:51,178 — exposurescrawler — DEBUG —  ❌ Creator Lite Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 10:57:51,179 — exposurescrawler — DEBUG —  ❌ Sprig Survey Responses (Prototype): found no models
ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
analytics.analytics.reporting_executive_dashboard_top_vfvers
analytics.analytics.reporting_executive_dashboard_domains_with_seats
analytics.analytics.reporting_executive_dashboard_top_viral_looms
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_viewers
analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_recorders
ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 10:57:51,187 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 10:57:51,188 — exposurescrawler — DEBUG —  ❌ Marketing ROI: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,192 — exposurescrawler — DEBUG —  ❌ Lifecycle OKR Dashboard: found no models
ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 10:57:51,193 — exposurescrawler — DEBUG —  ❌ Dagster Runs: found no models
ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,193 — exposurescrawler — DEBUG —  ❌ Marketing Email AB Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 10:57:51,197 — exposurescrawler — DEBUG —  ❌ Growth OKR Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS_ADHOC.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,198 — exposurescrawler — DEBUG —  ❌ attribution backup: found no models
ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 10:57:51,199 — exposurescrawler — DEBUG —  ❌ InfraSDK Invoice Data: found no models
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_FIRST_VIEWS
2023-10-19 10:57:51,199 — exposurescrawler — DEBUG —  ❌ Integration VFVs: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS_DEV.DBT_KAMRAN.REPORTING_TRAFFIC
2023-10-19 10:57:51,200 — exposurescrawler — DEBUG —  ❌ traffic dashboards with dev source: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:57:51,201 — exposurescrawler — DEBUG —  ❌ Net MRR Expansion Rate: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 10:57:51,203 — exposurescrawler — DEBUG —  ❌ Workspace Lookup v2: found no models
ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 10:57:51,203 — exposurescrawler — DEBUG —  ❌ Referrals WIP: found no models
ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 10:57:51,205 — exposurescrawler — DEBUG —  ❌ Create Trim and Add Clip (6): found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 10:57:51,206 — exposurescrawler — DEBUG —  ❌ Creator Lite LImits: found no models
ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 10:57:51,206 — exposurescrawler — DEBUG —  ❌ Virality Performance Dashboard (go/virality-performance): found no models
ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICE_LINE_ITEMS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 10:57:51,208 — exposurescrawler — DEBUG —  ❌ STRIPE INVOICES: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 10:57:51,209 — exposurescrawler — DEBUG —  ❌ Partner Sourcing: found no models
ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 10:57:51,209 — exposurescrawler — DEBUG —  ❌ Sales Pipeline Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 10:57:51,210 — exposurescrawler — DEBUG —  ❌ Stripe Coupons Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 10:57:51,212 — exposurescrawler — DEBUG —  ❌ Notification Events: found no models
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:57:51,212 — exposurescrawler — DEBUG —  ❌ TTV Experiment Tracking: found no models
ANALYTICS.ANALYTICS.REPORTING_FUNNEL_WEBFORMS
2023-10-19 10:57:51,213 — exposurescrawler — DEBUG —  ❌ webform metrics: found no models
ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 10:57:51,213 — exposurescrawler — DEBUG —  ❌ Support QA Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,213 — exposurescrawler — DEBUG —  ❌ SDK Summary Dashboard: found no models
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 10:57:51,215 — exposurescrawler — DEBUG —  ❌ Influencers & Network health dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 10:57:51,216 — exposurescrawler — DEBUG —  ❌ Plan Type Reporting: found no models
analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
analytics.analytics.reporting_executive_dashboard_revenue_metrics
ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
analytics.analytics.reporting_executive_dashboard_top_recorders
analytics.analytics.reporting_executive_dashboard_top_viral_looms
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
analytics.analytics.reporting_executive_dashboard_top_viewers
analytics.analytics.reporting_executive_dashboard_domains_with_seats
analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
analytics.analytics.reporting_executive_dashboard_top_vfvers
analytics.analytics.reporting_executive_dashboard_sales_metrics
2023-10-19 10:57:51,223 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,224 — exposurescrawler — DEBUG —  ❌ Traffic: found no models
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,225 — exposurescrawler — DEBUG —  ❌ nithin-poc: found no models
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 10:57:51,226 — exposurescrawler — DEBUG —  ❌ Company View: found no models
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 10:57:51,227 — exposurescrawler — DEBUG —  ❌ Integration Dashboard: found no models
ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 10:57:51,228 — exposurescrawler — DEBUG —  ❌ Create Funnel (WIP): found no models
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,233 — exposurescrawler — DEBUG —  ❌ Sales Dash (go/sales-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 10:57:51,234 — exposurescrawler — DEBUG —  ❌ Workspace Teams Product Pillar Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 10:57:51,235 — exposurescrawler — DEBUG —  ❌ Activity Frequency Segments: found no models
ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 10:57:51,235 — exposurescrawler — DEBUG —  ❌ Weekly Cohorts DEV, DATA DOESN'T UPDATE: found no models
analytics.analytics.fact_recording_ttv
2023-10-19 10:57:51,235 — exposurescrawler — DEBUG —  ❌ Recording Stability Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 10:57:51,236 — exposurescrawler — DEBUG —  ❌ Depth Of Retention Dashboard: found no models
analytics.analytics.reporting_mrr_movement_by_customer
2023-10-19 10:57:51,237 — exposurescrawler — DEBUG —  ❌ Monthly ARR Movement Summary: found no models
ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:57:51,237 — exposurescrawler — DEBUG —  ❌ Brand Summary: found no models
ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 10:57:51,237 — exposurescrawler — DEBUG —  ❌ SDK Signup Conversion Speed: found no models
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 10:57:51,240 — exposurescrawler — DEBUG —  ❌ Customer Success Dash (go/cs-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 10:57:51,241 — exposurescrawler — DEBUG —  ❌ Adoption Analysis: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,242 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - Future State: found no models
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 10:57:51,246 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard (go/enterprise-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 10:57:51,247 — exposurescrawler — DEBUG —  ❌ Support: found no models
ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 10:57:51,248 — exposurescrawler — DEBUG —  ❌ Marketing Site Analysis: found no models
ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 10:57:51,248 — exposurescrawler — DEBUG —  ❌ Workspace Settings: found no models
ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 10:57:51,249 — exposurescrawler — DEBUG —  ❌ HV  Performance Summary (Adhoc): found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
ANALYTICS.ANALYTICS.REPORTING_VIRALITY
ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 10:57:51,251 — exposurescrawler — DEBUG —  ❌ Leadership Dashboard: found no models
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_experiments
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
analytics.analytics.reporting_experiment_ab_bayes_summary
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
analytics.analytics.reporting_experiment_ab_metric_percentiles
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 10:57:51,256 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard - A/A Experiments: found no models
ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 10:57:51,257 — exposurescrawler — DEBUG —  ❌ engagement prototype: found no models
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 10:57:51,261 — exposurescrawler — DEBUG —  ❌ Slack Integration Dashboard: found no models
ANALYTICS.analytics.staging_salesforce_account
analytics.analytics.staging_salesforce_workspace
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
ANALYTICS.ANALYTICS.STRIPE_INVOICES
ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
ANALYTICS.ANALYTICS.stripe_plans
ANALYTICS.analytics.base_salesforce_user
ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
analytics.analytics.fact_organization
2023-10-19 10:57:51,264 — exposurescrawler — DEBUG —  ❌ Sales Led Accounts Receivables Report: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 10:57:51,266 — exposurescrawler — DEBUG —  ❌ Workspace Stats: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,266 — exposurescrawler — DEBUG —  ❌ Total Signups: found no models
ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,267 — exposurescrawler — DEBUG —  ❌ Sales Led MRR Movement Yesterday: found no models
ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 10:57:51,268 — exposurescrawler — DEBUG —  ❌ Churn Forecasting: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 10:57:51,268 — exposurescrawler — DEBUG —  ❌ Engagement Events: found no models
ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 10:57:51,269 — exposurescrawler — DEBUG —  ❌ Event Totals: found no models
ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 10:57:51,269 — exposurescrawler — DEBUG —  ❌ Signup Page Analysis: found no models
analytics.analytics.fact_user
analytics.analytics.reporting_metric_active_users_unioned
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
analytics.analytics.fact_self_serve_mrr_by_customer_by_month
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
analytics.analytics.fact_user
analytics.analytics.reporting_metric_video_first_views_unioned
analytics.analytics.reporting_score_card_goals
2023-10-19 10:57:51,274 — exposurescrawler — DEBUG —  ❌ Self-Serve Pacing Scorecard: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
ANALYTICS.ANALYTICS.FACT_USER
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,276 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - Legacy: found no models
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 10:57:51,277 — exposurescrawler — DEBUG —  ❌ Folder Structure: found no models
ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 10:57:51,278 — exposurescrawler — DEBUG —  ❌ Creator Engagement: found no models
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 10:57:51,281 — exposurescrawler — DEBUG —  ❌ Destination Usage: found no models
ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 10:57:51,282 — exposurescrawler — DEBUG —  ❌ Overall Product Health Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 10:57:51,283 — exposurescrawler — DEBUG —  ❌ Active Users Dashboard: found no models
raw.website.
analytics.analytics.
ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 10:57:51,284 — exposurescrawler — DEBUG —  ❌ Record a Reply (Anonymous) Custom Metrics: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:57:51,284 — exposurescrawler — DEBUG —  ❌ Cam Frames Events: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 10:57:51,286 — exposurescrawler — DEBUG —  ❌ Transcription Events: found no models
ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
analytics.analytics.reporting_experiment_ab_metric_percentiles
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_experiments
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 10:57:51,291 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard: found no models
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,295 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard (go-enterprise-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 10:57:51,296 — exposurescrawler — DEBUG —  ❌ Create Daily Active Tableau : found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 10:57:51,297 — exposurescrawler — DEBUG —  ❌ Signups: found no models
ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 10:57:51,297 — exposurescrawler — DEBUG —  ❌ Shared Modal AB Fast Follows: found no models
ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 10:57:51,298 — exposurescrawler — DEBUG —  ❌ Organic Search Traffic: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:57:51,299 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - New: found no models
ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 10:57:51,299 — exposurescrawler — DEBUG —  ❌ Home Page Analysis Dashboard: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,300 — exposurescrawler — DEBUG —  ❌ SDK Dashboard: found no models
ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 10:57:51,300 — exposurescrawler — DEBUG —  ❌ SEO Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 10:57:51,301 — exposurescrawler — DEBUG —  ❌ 2023_Planning_User_Segments: found no models
ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 10:57:51,301 — exposurescrawler — DEBUG —  ❌ Behavioral Insights: found no models
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 10:57:51,303 — exposurescrawler — DEBUG —  ❌ Slack Integration Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 10:57:51,304 — exposurescrawler — DEBUG —  ❌ Cam Frames - V2: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 10:57:51,304 — exposurescrawler — DEBUG —  ❌ Recent Activity Feature - Rollout Engagement: found no models
ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 10:57:51,305 — exposurescrawler — DEBUG —  ❌ Brand: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,305 — exposurescrawler — DEBUG —  ❌ MRR Movement Yesterday: found no models
ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,306 — exposurescrawler — DEBUG —  ❌ Workspace Engagement Dashboard (go/workspace-engagement-dash): found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 10:57:51,306 — exposurescrawler — DEBUG —  ❌ SDK Standard Summary: found no models
ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 10:57:51,307 — exposurescrawler — DEBUG —  ❌ Delta Validation Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 10:57:51,307 — exposurescrawler — DEBUG —  ❌ HVSM  Performance Summary: found no models
ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 10:57:51,308 — exposurescrawler — DEBUG —  ❌ 2022 Planning - P&P: Impact of Recording Limits: found no models
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
ANALYTICS.ANALYTICS.REPORTING_VIRALITY
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 10:57:51,310 — exposurescrawler — DEBUG —  ✅ leadership_dev: found models ['ANALYTICS_DEV.analytics.reporting_kpi_foundation']
ANALYTICS.analytics.fact_video_views
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 10:57:51,311 — exposurescrawler — DEBUG —  ❌ Product Marketing: found no models
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 10:57:51,313 — exposurescrawler — DEBUG —  ❌ TTV Stability Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 10:57:51,315 — exposurescrawler — DEBUG —  ❌ Loom For Startups Program: found no models
ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 10:57:51,315 — exposurescrawler — DEBUG —  ❌ Partner Sourcing: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 10:57:51,317 — exposurescrawler — DEBUG —  ❌ Strategic SDK Partner Monthly Reports: found no models
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 10:57:51,319 — exposurescrawler — DEBUG —  ❌ Create Funnel: found no models
ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 10:57:51,320 — exposurescrawler — DEBUG —  ❌ Managed Accounts: found no models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 10:57:51,322 — exposurescrawler — DEBUG —  ❌ Contact Imports: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 10:57:51,326 — exposurescrawler — DEBUG —  ❌ Growth OKR Dashboard: found no models
analytics.analytics.stripe_subscription_events
ANALYTICS.ANALYTICS.REPORTING_STRIPE_CUSTOMER_BALANCE_TRANSACTIONS
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 10:57:51,328 — exposurescrawler — DEBUG —  ❌ Customer Balance as of Date: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 10:57:51,328 — exposurescrawler — DEBUG —  ❌ Integration VFVs: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,329 — exposurescrawler — DEBUG —  ❌ Attribution: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 10:57:51,333 — exposurescrawler — DEBUG —  ❌ SDK Dashboard: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 10:57:51,335 — exposurescrawler — DEBUG —  ❌ Creator Lite Dashboard: found no models
analytics.analytics.staging_stripe_trial_starts
analytics.analytics.fact_workspace_by_day
analytics.analytics.fact_organization
ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
analytics.analytics.fact_mrr_by_subscription_by_day
ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
analytics.analytics.fact_mrr_movement_by_customer_by_week
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
analytics.analytics.fact_mrr_movement_by_customer_by_month
ANALYTICS.ANALYTICS.REPORTING_LTV
analytics.analytics.fact_user_by_workspace_by_day
analytics.analytics.staging_nodejs_auto_join_workspace
analytics.analytics.fact_organization
analytics.analytics.fact_mrr_movement_by_customer_by_day
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 10:57:51,341 — exposurescrawler — DEBUG —  ❌ Monetization KPIs: found no models
ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 10:57:51,342 — exposurescrawler — DEBUG —  ❌ CSM Managed Account Metrics: found no models
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown
2023-10-19 10:57:51,344 — exposurescrawler — DEBUG —  ❌ Slack Connect Event Tracking: found no models
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 10:57:51,350 — exposurescrawler — DEBUG —  ❌ Mobile Health Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 10:57:51,352 — exposurescrawler — DEBUG —  ❌ Loom_Product_CompanyPillar_2022H2: found no models
ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 10:57:51,353 — exposurescrawler — DEBUG —  ❌ Self Serve MRR Movement Yesterday: found no models
analytics.analytics.fact_mrr_movement_by_domain_by_day
2023-10-19 10:57:51,353 — exposurescrawler — DEBUG —  ❌ Domain Retention: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 10:57:51,354 — exposurescrawler — DEBUG —  ❌ ARR Movement Yesterday: found no models
analytics.analytics.fact_self_serve_mrr_by_customer_by_month
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
analytics.analytics.fact_user
analytics.analytics.reporting_score_card_goals
analytics.analytics.fact_organization
analytics.analytics.fact_mrr_movement_by_customer_by_day
analytics.analytics.reporting_metric_recorders_unioned
analytics.analytics.reporting_metric_recordings_unioned
analytics.analytics.reporting_metric_active_users_unioned
analytics.analytics.reporting_metric_revenue_by_month
analytics.analytics.reporting_metric_habit_moment_users_unioned
analytics.analytics.reporting_metric_activated_work_signups_unioned
analytics.analytics.reporting_metric_signups_unioned
analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
analytics.analytics.reporting_metric_video_views_unioned
analytics.analytics.reporting_metric_domain_with_active_users_by_week
analytics.analytics.fact_user
analytics.analytics.reporting_score_card_goals
analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 10:57:51,362 — exposurescrawler — DEBUG —  ✅ Topline Metric: found models ['ANALYTICS_DEV.analytics.reporting_metric_video_first_views_unioned']
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 10:57:51,363 — exposurescrawler — DEBUG —  ❌ Domain MRR: found no models
ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 10:57:51,363 — exposurescrawler — DEBUG —  ❌ NPS: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 10:57:51,364 — exposurescrawler — DEBUG —  ❌ Feature Usage by Power User Group: found no models
ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 10:57:51,365 — exposurescrawler — DEBUG —  ❌ Member Video Limits: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 10:57:51,365 — exposurescrawler — DEBUG —  ❌ Attribution: found no models
ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 10:57:51,366 — exposurescrawler — DEBUG —  ❌ Mandrill Emails Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 10:57:51,366 — exposurescrawler — DEBUG —  ❌ LTV: found no models
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 10:57:51,371 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard Scorecard: found no models
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 10:57:51,371 — exposurescrawler — DEBUG —  ❌ MRR Analysis: found no models
ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 10:57:51,372 — exposurescrawler — DEBUG —  ❌ Forecast: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 10:57:51,372 — exposurescrawler — DEBUG —  ❌ MRR Movement Demo 2022-05: found no models
ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 10:57:51,373 — exposurescrawler — DEBUG —  ❌ Views by Device: found no models
ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 10:57:51,373 — exposurescrawler — DEBUG —  ❌ MRR Exports: found no models
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 10:57:51,373 — exposurescrawler — DEBUG —  ❌ Experiment Timeline: found no models
2023-10-19 10:57:51,373 — exposurescrawler — INFO — ⚙️ Found 2 workbooks with linked models
2023-10-19 10:57:51,373 — exposurescrawler — INFO — 
2023-10-19 10:57:51,373 — exposurescrawler — INFO — 💡 Results merged: 2 + 2 = 4 workbooks
2023-10-19 10:57:51,373 — exposurescrawler — INFO — 
2023-10-19 10:57:51,373 — exposurescrawler — INFO — 🌏 Retrieving workbooks and authors metadata from the Tableau REST API
tableau_viewerx_funnel_core_metrics_monitoring
/Users/sandhya.yadav/Desktop/git-repo/dbt/loom-dbt/models/exposures/tableau_viewerx_funnel_core_metrics_monitoring.yml
2023-10-19 10:58:01,210 — exposurescrawler — DEBUG — ⏩ Skipping workbook: Record a Reply (Anonymous) Custom Metrics (Dev is ignored)
2023-10-19 10:58:06,105 — exposurescrawler — DEBUG — ⏩ Skipping workbook: leadership_dev (Dev is ignored)
2023-10-19 10:58:11,195 — exposurescrawler — DEBUG — ⏩ Skipping workbook: Topline Metric (Dev is ignored)
2023-10-19 10:58:11,196 — exposurescrawler — INFO — 
2023-10-19 10:58:11,196 — exposurescrawler — INFO — 💾 Writing results to file: ../manifest.json
Signed in successfully!
local
2023-10-19 11:06:59,373 — exposurescrawler — INFO — 🔍 Parsing GraphQL result: looking for custom SQL tables
2023-10-19 11:06:59,374 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,374 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Customer MRR Retention | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Cash Flow Forecast | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 11:06:59,375 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Domain Retention | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ ViewerX Funnel & Core Metrics Monitoring | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ [BETA] - Tableau Cockpit Loom | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Monthly ARR Movement Summary | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ ViewerX Funnel & Core Metrics Monitoring | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,376 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,377 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ MRR Exports | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,378 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — INFO — 🔍 Found 25 workbooks with custom SQL
2023-10-19 11:06:59,379 — exposurescrawler — INFO — ⚙️ Parsing SQL: looking for references to models
select 
video_id
, user_id
, client
, recording_client
, recording_type
, service
, recording_start_at_utc
, recording_cancelled_at_utc
, recording_stopped_at_utc
, recording_complete_at_utc
, duration_of_completed_video
, coalesce(upload_method, 'us-west-2') as upload_method
, r.country_code
, cc.country_name
, recording_stability_1d
, case when recording_cancelled_at_utc is null then 0 else 1 end as is_not_cancelled
, latency
, speed_test_result
, upload_throughput
, avg_bit_rate
, width * height as video_resolution
, resolution
, ttv_seconds
, ttv_normalized
from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
    on r.country_code = cc.country_code
where coalesce(ttv_seconds,0) >>= 0
and coalesce(ttv_seconds,0) <<= 1200 
and service not in ('desktop')
and coalesce(date(recording_start_at_utc),'2021-01-01') >>= dateadd('day',-91,current_date)
and coalesce(date(recording_start_at_utc),'2021-01-01') << current_date
select 
  sub.*,
  case 
  when date_trunc('week', week) = date_trunc('week', sysdate()) then '2. current week'
  when date_trunc('week', week) = date_trunc('week', sysdate()) - interval '1 week' then '1. previous week'
  else 'error' end as weekly_status
  from (
        select 
          date_trunc('week',recording_start_at_utc) as week,
          service,
          avg(ttv_seconds) as avg_ttv_seconds,
            count(video_id) as video_count
        from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
        left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
            on r.country_code = cc.country_code
        where coalesce(ttv_seconds,0) >>= 0
          and coalesce(ttv_seconds,0) <<= 1200 
          and date_trunc('week', recording_start_at_utc) <<= date_trunc('week', sysdate())
          and date_trunc('week', recording_start_at_utc) >>= date_trunc('week', sysdate()) - interval '1 week'
        group by 1,2
  ) sub
select 
    sub.*,
    case 
    when date_trunc('quarter', quarter) = date_trunc('quarter', sysdate()) then '2. current quarter'
    when date_trunc('quarter', quarter) = date_trunc('quarter', sysdate()) - interval '1 quarter' then '1. previous quarter'
    else 'error' end as quarterly_status
    from (
          select 
            date_trunc('quarter',recording_start_at_utc) as quarter,
            service,
            avg(ttv_seconds) as avg_ttv_seconds
          from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
          left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
              on r.country_code = cc.country_code
          where coalesce(ttv_seconds,0) >>= 0
            and coalesce(ttv_seconds,0) <<= 1200 
            and date_trunc('quarter', recording_start_at_utc) <<= date_trunc('quarter', sysdate())
            and date_trunc('quarter', recording_start_at_utc) >>= date_trunc('quarter', sysdate()) - interval '1 quarter'
          group by 1,2
    ) sub
2023-10-19 11:06:59,388 — exposurescrawler — DEBUG —  ❌ TTV Stability Dashboard: found no models
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, recorder_device order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, recorder_device ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_total_recorders_by_device
      order by agg_type, recorder_device, date_day)
select *, lag(trailing_4_week) over (partition by agg_type, METRIC_NAME, account_segment order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(METRIC_VALUE, 0))
                                                   OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then SUM(coalesce(METRIC_VALUE, 0))
                                                  OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then SUM(coalesce(METRIC_VALUE, 0))
                                                    OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then SUM(coalesce(METRIC_VALUE, 0))
                                                      OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then SUM(coalesce(METRIC_VALUE, 0))
                                                   OVER (partition by agg_type, METRIC_NAME, account_segment ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_sales_metrics
      order by agg_type, account_segment, date_day)
where date_day <<= (select max(date_day) from ANALYTICS.analytics.reporting_executive_dashboard_sales_metrics
where metric_name = 'total_sql')
select *
from analytics.analytics.reporting_executive_dashboard_top_vfvers
select * from analytics.analytics.reporting_executive_dashboard_domains_with_seats
select *
from analytics.analytics.reporting_executive_dashboard_top_viewers
select *
from analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
select *, lag(trailing_4_week) over (partition by agg_type, subservice_category order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then AVG(coalesce(success_rate, 0))
                                                   OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then AVG(coalesce(success_rate, 0))
                                                  OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then AVG(coalesce(success_rate, 0))
                                                    OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then AVG(coalesce(success_rate, 0))
                                                      OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then AVG(coalesce(success_rate, 0))
                                                   OVER (partition by agg_type, subservice_category ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from ANALYTICS.analytics.reporting_executive_dashboard_recording_stability_metrics
      order by agg_type, subservice_category, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders
select *
from analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, sales_type, user_classification order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from analytics.analytics.reporting_executive_dashboard_revenue_metrics
      order by agg_type, SALES_TYPE, USER_CLASSIFICATION, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
select *, lag(trailing_4_week) over (partition by agg_type, metric_name, sales_type, user_classification order by date_day) as previous_trailing_period
from (select *,
             case
                 when agg_type = 'weekly' then SUM(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 3 PRECEDING AND CURRENT ROW )
                 when agg_type = 'daily' then sum(coalesce(metric_value, 0))
                                                  OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                      ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )
                 when agg_type = 'monthly' then sum(coalesce(metric_value, 0))
                                                    OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'quarterly' then sum(coalesce(metric_value, 0))
                                                      OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                          ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )
                 when agg_type = 'yearly' then sum(coalesce(metric_value, 0))
                                                   OVER (partition by agg_type, metric_name, SALES_TYPE, USER_CLASSIFICATION ORDER BY date_day
                                                       ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) end trailing_4_week
      from analytics.analytics.reporting_executive_dashboard_metrics
      order by agg_type, SALES_TYPE, USER_CLASSIFICATION, date_day)
select *
from analytics.analytics.reporting_executive_dashboard_top_viral_looms
select * from analytics.analytics.reporting_executive_dashboard_domains_with_contractions
select "metric_date" as DATE_DAY,
       TIME_FRAME  as AGG_TYPE,
       PLAN,
       FILTER,
       METRIC as METRIC_NAME,
       "metric_value" as METRIC_VALUE,
       YOY_TO_DATE,
       POP_TO_DATE
from ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
where METRIC_VALUE is not null
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
select * from analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
select * from analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 11:06:59,414 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
select * from analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
select *
from analytics.analytics.reporting_executive_dashboard_top_viral_looms
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders
select *
from ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
select *
from (
select date_day,
    lower("Time Frame") as agg_type,
    "Plan" as plan,
    "Filter" as filter,
    "Metric" as metric_name,
    metric_value,
    case when agg_type = 'monthly' then LAG(metric_value, 12) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY )
         when agg_type = 'quarterly' then LAG(metric_value, 4) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY ) end AS YOY_TO_DATE,
    LAG(metric_value, 1) OVER (partition by metric_name, filter, plan, agg_type ORDER BY DATE_DAY ) AS POP_TO_DATE

from (
    select *, TO_DATE("Date", 'MM/DD/YY') as date_day, CASE WHEN SUBSTR("Value", -1, 1) = '%' THEN (regexp_replace("Value", '[^0-9.-]+', '')/100)::DOUBLE ELSE regexp_replace("Value", '[^0-9.-]+')::DOUBLE END as metric_value
    from analytics_dev.dbt_karan.exec_finance_pivot
    )
    )
where metric_value is not null
select * from analytics.analytics.reporting_executive_dashboard_domains_with_contractions
select *
from analytics.analytics.reporting_executive_dashboard_sales_metrics
select *
from analytics.analytics.reporting_executive_dashboard_top_viewers
select *
from analytics.analytics.reporting_executive_dashboard_top_vfvers
select * from analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
select * from analytics.analytics.reporting_executive_dashboard_domains_with_seats
select *
from analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
select *
    from  ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
    where date_day <<= ( select max(DATE_DAY)
    from  ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
    where metric_name = 'unique_viewers')
select *
from analytics.analytics.reporting_executive_dashboard_revenue_metrics
select *
from analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
select *
from analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 11:06:59,426 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
with 
max_timestamp as (
  select  
    max(date_pt) as last_run_at
  from 
    analytics.analytics.fact_recording_reports hf 
  where 
    date_pt >>= dateadd('day',-1,current_timestamp())

)

select 
hf.*,
split_part(segment, ',', 1) as split,
 recording_attempts::float/sum(recording_attempts) over (partition by date_pt,population) as hour_share,
recording_attempts::float/sum(recording_attempts) over (partition by date_pt,population,split_part(segment, ',', 1)) as segment_hour_share
from analytics.analytics.fact_recording_reports hf 
cross join max_timestamp m 

where date_pt << dateadd('hour',-1,m.last_run_at) -- - date_trunc('hour', convert_timezone('UTC', 'America/Los_Angeles', getdate()))   - interval '1 hours'
 and date_trunc('day', date_pt) >>= date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '7 days'
 and time_Aggregation = 'hourly'
with

base as (
select
sub.*,
datediff('days',date_trunc('day',date_pt),date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))) as days_from_today,
recording_attempts::float/sum(recording_attempts) over (partition by population,split_part(sub.segment,',',1),date_pt) as segment_weight,
recording_attempts::float/sum(recording_attempts) over (partition by population,date_pt) as daily_weight
from (
select * from analytics.analytics.fact_recording_reports f 
 where date_pt << date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
  and time_aggregation = 'daily'

)sub
)


select *
from (
select 
 sub.*,
 split_part(sub.segment,',',1) as micro_segment,
 b1.rate_recording_Stability_1d as first_date_rate,
 b2.rate_recording_Stability_1d as last_success_rate_as_majority,
 b1.segment_weight as first_weight,
 b2.segment_weight as last_weight,
 rank() over (partition by split_part(sub.segment,',',1),sub.population order by sub.last_date_as_majority desc,b2.segment_weight desc) as ranker
from (
select
 population,
 segment,
 min(date_pt) as first_date_as_majority,
 max(date_pt) as last_date_as_majority
from base
where segment_weight >>= 0.1 -- only pull cases where segment weight >>= 0.5

group by 1,2
) sub 
left join base b1 on b1.population = sub.population and b1.segment = sub.segment and b1.date_pt = sub.first_date_as_majority
left join base b2 on b2.population = sub.population and b2.segment = sub.segment and b2.date_pt = sub.last_date_as_majority
)
where ranker <<= 2 
 and population = 'subservice and client version'
 and micro_segment not in ('no subservice data','desktop')
with recent_quarter as (
select date_pt as quarter_comparison,days_from_quarter_start
from (
select 
  sub.*,
  row_number() over (order by days_from_quarter_start asc) as ranker
from (
select distinct 
 date_trunc('quarter',date_pt) as quarter,
 date_pt,
 abs(datediff('days',date_trunc('quarter',date_pt),date_pt)) as days_from_quarter_start
 
from analytics.analytics.fact_recording_reports r 
 where time_aggregation = 'weekly'
 order by date_pt asc
 ) sub
 ) sub2
 where ranker = 1
),


quarter as (
select 
 date_pt,
 segment,
 population,
 time_aggregation,
 rate_recording_stability_1d,
 'beginning of quarter'::text as status
 

from analytics.analytics.fact_recording_reports r 
 join recent_quarter rq on rq.quarter_comparison = r.date_pt
 
where time_aggregation = 'weekly'
 and population in ('subservice','aggregate')
),

recent_week as (

select 
 week as date_pt,
 subservice as segment,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  'weekly' as time_aggregation,
  rate_recording_stability_1d,
  'current week'::text as status
from (
select 
 week,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(weekly_share) as weekly_share_represented
from (
select 
 week,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by week,subservice) as weekly_share
from (
select 
 date_trunc('week', date_pt) as week,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'daily'
 and date_trunc('week', date_pt) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where weekly_share >>= .05
group by 1,2
) sub3
order by subservice,week
)

select * from recent_week 
union all 
select * from quarter
with recent_day as (
select 
 day as date_pt,
   'daily' as time_aggregation,
 subservice as segment,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  rate_recording_stability_1d,
  '2. most recent complete day'::text as status
from (
select 
 day,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(daily_share) as daily_share_represented
from (
select 
 day,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by day,subservice) as daily_share
from (
select 
 date_trunc('day', date_pt) as day,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'hourly'
 and date_trunc('day', date_pt) = date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 day'
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where daily_share >>= .05
group by 1,2
) sub3
  ),
  

  recent_week as (
 select 
   date_pt,
   time_aggregation,
   segment,
   population,
   RATE_RECORDING_STABILITY_1D,
   '1. most recent complete week'::text as status
from analytics.analytics.fact_recording_reports r
where 
  population in ('subservice','aggregate')
  and time_aggregation = 'weekly'
  and date_trunc('week', date_pt) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week'
  )
  
  select * from recent_day 
  union all 
  select * from recent_week
with

base as (
select
sub.*,
datediff('days',date_trunc('day',date_pt),date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) ) as days_from_today,
recording_attempts::float/sum(recording_attempts) over (partition by population,split_part(sub.segment,',',1),date_pt) as segment_weight,
recording_attempts::float/sum(recording_attempts) over (partition by population,date_pt) as daily_weight
from (
select * 
from analytics.analytics.fact_recording_reports 
where 
  date_pt <<= date_trunc('day', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) 
  and time_aggregation = 'daily'
)sub
),



first_day as (
select
 population,
 segment,
 first_date,
 rank() over (partition by split_part(sub.segment,',',1) order by first_date desc) as ranker
from (
select
 population,
 segment,
 min(date_pt) as first_date
from base

group by 1,2
) sub
),

last_day as (
select *
from (
 select
  sub.population,
  sub.segment,
  sub.first_date,
  b.date_pt,
  b.rate_recording_stability_1d,
  rank() over (partition by b.population,split_part(b.segment,',',1) order by b.date_pt desc) as day_ranker
from (
  select population,segment,first_date from first_day where ranker = 2
) sub
left join base b on b.population = sub.population and b.segment = sub.segment and segment_weight >>= 0.5
) sub2
where day_ranker = 1
)


select
 sub.*,
 case
  when segment_version_rank = 1 then 'show'
  when segment_version_rank = 2 then 'dont show'
  else 'dont show' end as show_status,
 ld.segment as last_segment,
 ld.rate_recording_stability_1d as previous_best,
 ld.date_pt as previous_day

from (
select
 b.*,
 fd.first_date,
 split_part(b.segment,',',1) as split,
 rank() over (partition by b.date_pt,b.population,split_part(b.segment,',',1) order by b.segment_weight desc) as segment_weight_rank,
 rank() over (partition by b.date_pt,b.population,split_part(b.segment,',',1) order by fd.first_date desc) as segment_version_rank
from base b
 left join first_day fd on fd.segment = b.segment and fd.population = b.population
) sub
left join last_day ld on ld.population = sub.population and split_part(sub.segment,',',1) = split_part(ld.segment,',',1)


where days_from_today >> 0 and days_from_today <<= 30
select 
 sub3.*,
 subservice as segment,
 week as date_pt,
 case
  when subservice = 'aggregate' then 'aggregate'
  else 'subservice' end as population,
  case 
  when date_trunc('week', week) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) then '2. current week'
  when date_trunc('week', week) = date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week' then '1. previous week'
  else 'error' end as weekly_status
from (
select 
 week,
 subservice,
 sum(successes)::float/sum(recording_attempts) as rate_recording_stability_1d,
 sum(weekly_share) as weekly_share_represented
from (
select 
 week,
 segment,
 subservice,
 recording_attempts,
 successes,
 recording_attempts::float/sum(recording_attempts) over (partition by week,subservice) as weekly_share
from (
select 
 date_trunc('week', date_pt) as week,
 segment,
 split_part(segment,',', 1) as subservice,
 sum(recording_attempts) as recording_attempts,
 sum(RECORDING_STABILITY_1D_VIDEOS) as successes

from analytics.analytics.fact_recording_reports r 
 where population in ('subservice and client version', 'aggregate')
 and time_aggregation = 'daily'
 and date_trunc('week', date_pt) <<= date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate()))
 and date_trunc('week', date_pt) >>= date_trunc('week', convert_timezone('UTC', 'America/Los_Angeles', sysdate())) - interval '1 week'
 and date_pt << date_trunc('day', getdate())
 and (subservice NOT IN ('all_other_subservices','no subservice data') or subservice like '%sdk')

group by 1,2,3
) sub
) sub2
where weekly_share >>= .05
group by 1,2
) sub3
order by subservice,week
select 
 ttv.*,
 split_part(segment,',',1) as segment_split

from analytics.analytics.fact_recording_ttv ttv
2023-10-19 11:06:59,441 — exposurescrawler — DEBUG —  ❌ Recording Stability Dashboard: found no models
with paid_self_serve_orgs as (
    select
        organization_id, date_day, mrr_ending as mrr, seats_ending as seats
    from analytics.analytics.fact_mrr_movement_by_customer_by_day
    where date_day >>= '2022-01-01'
    and mrr>>0
)
select
    a.user_id,
    a.organization_id,
    b.role,
    case when b.role in ('creator', 'admin') then 'Yes' else 'No' end as is_paid_role,
    case when p.organization_id is not null then 'Yes' else 'No' end as is_paid_org,    
    a.segment_timestamp_utc as auto_join_date
from analytics.analytics.staging_nodejs_auto_join_workspace a 
join analytics.analytics.fact_user_by_workspace_by_day b
    on a.user_id = b.user_id
    and a.organization_id = b.organization_id
    and date(a.segment_timestamp_utc) = b.date_day
join analytics.analytics.fact_organization orgs
    on a.organization_id = orgs.organization_id
left join paid_self_serve_orgs p
    on p.organization_id = a.organization_id
    and p.date_day = date(a.segment_timestamp_utc)
where orgs.sales_support_type = 'self_serve'
and b.member_status='active'
and a.segment_timestamp_utc >>= '2022-01-01'
with nav_button as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'P&B via Nav Button' as step_name
from analytics.analytics.staging_website_navigation_item_clicked 
where primary_nav_item='settings_workspace' 
    and secondary_nav_item='plan_billing'
    and segment_timestamp_utc >>= '2022-08-01'
)
, plan_page_visits as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'P&B Page via Link' as step_name
from analytics.analytics.base_website_pages 
where context_page_url like '%?scrollTo=allPlansSectionTitle%' 
    and segment_timestamp_utc >>= '2022-08-01'
)
, modal_rendered as (
select
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    'Change Plan Modal Rendered' as step_name
from analytics.analytics.staging_website_change_plan_modal_rendered
where segment_timestamp_utc >>= '2022-08-01'
)
, upgrade_steps as (
select 
    user_id::varchar as user_id,
    organization_id,
    date(segment_timestamp_utc) as event_date,
    segment_timestamp_utc,
    case
        when step=0 then 'Choose Creators Page'
        when step=1 then 'Payment Details Page'
        when step=2 then 'Upgrade Success Page'
    end as step_name,
    row_number() over (partition by user_id, event_date,step_name order by segment_timestamp_utc) rnk
from analytics.analytics.staging_website_streamline_upgrade_page_step 
where segment_timestamp_utc >>= '2022-08-01'
)
, raw_settings_data as (
select * from nav_button
union all
select * from plan_page_visits
union all
select * from modal_rendered
)
, final_settings_data as (
select
    user_id,
    organization_id,
    event_date,
    segment_timestamp_utc,
    step_name,
    row_number() over (partition by user_id, event_date order by segment_timestamp_utc) rnk
from raw_settings_data
)
select * from final_settings_data where rnk=1
union all
select * from upgrade_steps where rnk=1
select
date_week as the_date,
'Weekly' as period_length,
organization_id,
plan_interval,
sum(mrr_net_change) as mrr_change,
sum(mrr_new) as mrr_new,
sum(mrr_expansion) as mrr_expansion,
sum(mrr_contraction) as mrr_contraction,
sum(mrr_churn) as mrr_churn,
sum(mrr_reactivation) as mrr_reactivation,
sum(mrr_starting) as mrr_starting,
sum(seats_churn) as seats_churn,
sum(seats_contraction) as seats_contraction
from analytics.analytics.fact_mrr_movement_by_customer_by_week
where date_week >>= '2020-10-01'
and sales_support_type_ending='self_serve'
group by 1,2,3,4
union all 
select
date_month as the_date,
'Monthly' as period_length,
organization_id,
plan_interval,
sum(mrr_net_change) as mrr_change,
sum(mrr_new) as mrr_new,
sum(mrr_expansion) as mrr_expansion,
sum(mrr_contraction) as mrr_contraction,
sum(mrr_churn) as mrr_churn,
sum(mrr_reactivation) as mrr_reactivation,
sum(mrr_starting) as mrr_starting,
sum(seats_churn) as seats_churn,
sum(seats_contraction) as seats_contraction
from analytics.analytics.fact_mrr_movement_by_customer_by_month
where date_month >>= '2020-10-01'
and sales_support_type_ending='self_serve'
group by 1,2,3,4
select
d.*,
trim(replace(r.value,'|',',')) as selected_reason
from analytics.analytics.staging_website_workspace_downgraded_with_reason d,
lateral split_to_table(replace(selected_reasons,'This is temporary, I','This is temporary| I'), ',') as r
with invited_via_link as (
    select 
    i.inviter_id as inviter_user_id,
    i.organization_id,
    i.role as invitee_role,
    f.email as invitee_email,
    min(a.segment_timestamp_utc) as segment_timestamp_utc
    from analytics.analytics.base_website_user_copied_invite_link c
    join analytics.analytics.base_app_invite_link i
        on i.inviter_id::varchar = c.user_id::varchar
        and date_trunc('minute',c.segment_timestamp_utc) = date_trunc('minute',i.created_at)
    join analytics.analytics.base_nodejs_invite_link_accessed a
        on a.invite_link_id = i.invite_link_id
    join analytics.analytics.fact_user f
        on f.user_id = a.user_id
    group by 1, 2, 3, 4
),

paid_self_serve_orgs as (
    select
        organization_id, date_day, mrr_ending as mrr, seats_ending as seats
    from analytics.analytics.fact_mrr_movement_by_customer_by_day
    where date_day >>= '2022-01-01'
    and mrr>>0
),

slack_sent as (
    select
        s.segment_timestamp_utc,
        s.user_id as inviter_user_id,
        s.video_workspace_id as organization_id,
        'slack invites' as source,
        parse_json(f1.value):email::varchar as invitee_email,
        parse_json(f1.value):name::varchar as name, --noqa
        parse_json(f1.value):orgInviteToken::varchar as org_invite_token,
        parse_json(f1.value):slackId::varchar as slack_id,
        parse_json(f1.value):orgRole::varchar as invitee_role
    from analytics.analytics.staging_integrations_slack_app_invite_nudge_invites_sent as s,
    lateral flatten(input =>> parse_json(invitees)) as f1
),


unioned_invites as (
    select 
        inviter_user_id, organization_id, invitee_email, invitee_member_role as invitee_role, segment_timestamp_utc,
    null as invite_accepted, case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from analytics.analytics.base_nodejs_teammates_invited
        union all
    select 
        inviter_user_id, organization_id, invitee_email, invitee_role, segment_timestamp_utc,
    null as invite_accepted, case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from invited_via_link
        union all
    select 
        s.inviter_user_id, s.organization_id, s.invitee_email, s.invitee_role,s.segment_timestamp_utc,
        case when sa.org_invite_token is not null then 'Y' else 'N' end as invite_accepted,
        case when coalesce(invitee_role,'creator_lite') in ('creator','admin') then 'Yes' else 'No' end as is_paid_invite
    from slack_sent s
    left join analytics.analytics.staging_nodejs_slack_invite_nudge_dm_accepted as sa
        on s.org_invite_token = sa.org_invite_token
)

select
date_trunc('week', u.segment_timestamp_utc) as invite_week,
--date_trunc('month',segment_timestamp_utc) as invite_month,
is_paid_invite,
case when p.organization_id is not null then 'Yes' else 'No' end as is_paid_org,
count(u.invitee_email) as invite_count,
count(case 
        when accept.invitee_email is not null then u.invitee_email 
        -- when coalesce(u.invite_accepted, 'N') = 'Y' then u.invitee_email
      end) as accepted_invite_count
from unioned_invites u
left join paid_self_serve_orgs p
    on p.organization_id = u.organization_id
    and p.date_day = date(u.segment_timestamp_utc)
left join analytics.analytics.fact_invitee_funnel as accept
    on u.invitee_email = accept.invitee_email
    and u.organization_id::varchar = accept.organization_id::varchar
    and accept.invitee_funnel_step = 'invite accepted'
    and accept.invitee_funnel_step_timestamp >>= u.segment_timestamp_utc
where u.segment_timestamp_utc>>= '2022-01-01'
and u.inviter_user_id not in ('14644139','9767154','11376952')
group by 1,2,3
with first_paying_week as (
select
    organization_id,
    plan_interval,
    min(date_week) as first_paid_week
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
where mrr_ending>>0
group by 1,2
)
, first_active_week as (
    select
        organization_id,
        plan_interval,
        date_trunc('week', min(first_active_day)) as first_active_week
    from analytics.analytics.fact_mrr_by_subscription_by_day
    group by 1,2
)
, orgs_per_start_week as (
select
    first_paid_week,
    plan_interval,
    count(organization_id) as cohort_org_size
from first_paying_week
group by 1,2
)
select 
datediff('week',p.first_paid_week, date_week) as weeks_since_start,
a.first_active_week,
p.first_paid_week,
date_week,
m.organization_id,
m.organization_type,
m.plan_interval,
sales_support_type_ending as sales_support_type,
mrr_ending as mrr,
seats_ending as seats,
mrr_net_change_category as customer_change_category,
case when mrr_ending>>0 then 'Y' else 'N' end as is_paid_yn,
case when mrr_ending=0 then 'Y' else 'N' end as is_churned_yn,
o.cohort_org_size
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week m
join first_paying_week p
    on m.organization_id = p.organization_id
    and m.date_week >>= p.first_paid_week
    and m.plan_interval = p.plan_interval
join orgs_per_start_week o
    on o.first_paid_week = p.first_paid_week
    and o.plan_interval = p.plan_interval
join first_active_week a
    on m.organization_id = a.organization_id
    and m.plan_interval = a.plan_interval
with requests as (
select distinct
    u.user_id,
    u.organization_id,
    u.upgrade_request_id,
    first_value(r.role) over (partition by u.upgrade_request_id order by u.segment_timestamp_utc) as role,
    first_value(u.segment_timestamp_utc) over (partition by u.upgrade_request_id order by u.segment_timestamp_utc) as request_time_utc
from ANALYTICS.analytics.base_nodejs_request_to_upgrade_workspace u
join analytics.analytics.user_role_by_day r
        on r.user_id = u.user_id
        and r.date_day = dateadd('day',-1,date(u.segment_timestamp_utc))
where u.upgrade_type='role'
    and r.role in ('creator_lite','viewer')
)
, approvals as (
select distinct
    requesting_user_id,
    user_id as approving_user_id,
    organization_id,
    upgrade_request_id,
    first_value(segment_timestamp_utc) over (partition by upgrade_request_id order by segment_timestamp_utc) as approval_time_utc
from analytics.analytics.base_nodejs_approve_role_upgrade_request
)
, role_changes as (
select
    user_id,
    organization_id,
    previous_role,
    new_role,
    source,
    segment_timestamp_utc as role_update_utc
from analytics.analytics.base_nodejs_membership_role_updated
where source != 'unknown'
)
select
r.user_id,
r.organization_id,
r.upgrade_request_id,
r.role,
r.request_time_utc,
a.approval_time_utc,
a.approving_user_id,
c.previous_role,
c.new_role,
c.source,
c.role_update_utc,
row_number() over (partition by r.upgrade_request_id order by role_update_utc) as rnk
from requests r
left join role_changes c
    on c.user_id = r.user_id
    and c.organization_id = r.organization_id
    and c.previous_role = r.role
    and c.role_update_utc >>= r.request_time_utc
left join approvals a
    on r.user_id = a.requesting_user_id
    and r.upgrade_request_id = a.upgrade_request_id
    and date_trunc('min',c.role_update_utc) = date_trunc('min',a.approval_time_utc)
where r.request_time_utc >>= '2021-01-01'
qualify rnk=1
with first_paying_month as (
select
    organization_id,
    plan_interval,
    min(date_month) as first_paid_month
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
where mrr_ending>>0
group by 1,2  
)
, orgs_per_start_month as (
select
    first_paid_month,
    plan_interval,
    count(organization_id) as cohort_org_size
from first_paying_month
group by 1,2
)
, final_data as (
select 
datediff('month',p.first_paid_month, date_month) as months_since_start,

p.first_paid_month,
date_month,
m.organization_id,
organization_type,
m.plan_interval,
sales_support_type_ending as sales_support_Type,
mrr_ending as mrr,
seats_ending as seats,
mrr_net_change_category as customer_change_category,
case when mrr_ending>>0 then 'Y' else 'N' end as is_paid_yn,
case when mrr_ending=0 then 'Y' else 'N' end as is_churned_yn,
o.cohort_org_size
from ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month m
join first_paying_month p
    on m.organization_id = p.organization_id
    and m.date_month >>= p.first_paid_month
join orgs_per_start_month o
    on o.first_paid_month = p.first_paid_month
    and o.plan_interval = p.plan_interval
)
select * from final_data
select 
s.*,
o.organization_id,
w_start.date_day as start_day,
w_start.mapped_plan_type as start_type,
w_end.date_day as end_day,
w_end.mapped_plan_type as end_type,
case when w_end.mapped_plan_type in ('enterprise','business') then 'Y' else 'N' end as converted_yn
from analytics.analytics.staging_stripe_trial_starts s
join analytics.analytics.fact_organization o
    on o.external_customer_id = s.customer_id
join analytics.analytics.fact_workspace_by_day w_start
    on w_start.organization_id = o.organization_id
    and w_start.date_day = s.trial_start_date_utc
join analytics.analytics.fact_workspace_by_day w_end
    on w_end.organization_id = o.organization_id
    and w_end.date_day = dateadd('day',1,s.trial_end_date_utc)
where s.trial_start_date_utc >>= '2022-02-01'
and s.trial_end_date_utc << current_date()
2023-10-19 11:06:59,460 — exposurescrawler — DEBUG —  ❌ Monetization KPIs: found no models
with date_boundaries as (
select
    'month' as window,
    date_trunc('month', date_day) as the_date,
    min( case when date_trunc('week', date_day) >>= date_trunc('month', date_day) 
            then date_trunc('week', date_day) end) as first_week,
    max( date_trunc('week', date_day)) as last_week
from analytics.analytics.days
    where date_day >>= '2022-01-01'
    and date_day <<= dateadd('month', 1, current_date())
    group by 1,2
union all
select
    'quarter' as window,
    date_trunc('quarter', date_day) as the_date,
    min( case when date_trunc('week', date_day) >>= date_trunc('month', date_day) 
            then date_trunc('week', date_day) end) as first_week,
    max( date_trunc('week', date_day)) as last_week
from analytics.analytics.days
    where date_day >>= '2022-01-01'
    and date_day <<= dateadd('month', 1, current_date())
    group by 1,2  
)
, weekly_data as (
    select 
        date_day as date_week,  
        sum(total_active_users) as WAU
    from analytics.analytics.reporting_metric_active_users_unioned 
    where agg_type = 'weekly' 
    and user_classification = 'work' 
    group by date_week
)
, monthly_data as (
    select 
        d.the_date as date_month,
        avg(WAU) as month_WAU
    from weekly_data w
    join date_boundaries d
        on w.date_week >>= d.first_week
        and w.date_week <<= d.last_week
    where w.date_week >>= '2021-12-01'
    and w.date_week << date_trunc('week', current_date())
    and d.window='month'
    group by the_date
),
quarterly_data as (
    select 
        d.the_date as date_quarter,
        avg(WAU) as quarter_WAU
    from weekly_data w
    join date_boundaries d
        on w.date_week >>= d.first_week
        and w.date_week <<= d.last_week
    where w.date_week >>= '2021-12-01'
    and w.date_week << date_trunc('week', current_date())
    and d.window='quarter'
    group by the_date
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()
),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Work WAUs'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.month_WAU,
q.quarter_WAU,
yoy.month_WAU as yoy_month_WAU,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Work WAUs'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with traffic_data as (
    select 
        date(event_date_utc) as visit_date, 
        sum(total_visits) as total_visits
    from analytics.analytics.reporting_traffic
    where path_category='marketing_site'
    and event_date_utc >>= dateadd('month',-13,current_date())
    group by 1
)
, views_data as (
    select
        date(f.segment_timestamp_utc) as view_date, 
        count(f.video_id) as total_views,
        count(case when u.user_classification='work' then f.video_id end) as work_views,
        count(case when f.is_logged_in_view=0 and u.user_classification='work' then f.video_id end) as anon_work_views,
        count(case when f.is_logged_in_view=1 and u.user_classification='work' then f.video_id end) as logged_in_work_views
    from analytics.analytics.fact_video_views f
    join analytics.analytics.fact_user u
        on f.owner_id::varchar = u.user_id::varchar
    where f.segment_timestamp_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, vfv_data as (
    select
        date(video_first_view_at_utc) as vfv_date,
        count(video_id) as total_vfvs,
        count(case when u.user_classification='work' then video_id end) as work_vfvs
    from analytics.analytics.fact_recording f
    join analytics.analytics.fact_user u
        on f.user_id::varchar = u.user_id::varchar
    where video_first_view_at_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, total_traffic as (
    select distinct
        t_now.visit_date,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_visits,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_visits 
    from traffic_data t_now
    left join traffic_data t_wow
        on t_now.visit_date = dateadd('day',7,t_wow.visit_date)
    left join traffic_data t_yoy
        on t_now.visit_date = dateadd('year',1,t_yoy.visit_date)
)
, total_views as (
    select distinct
        t_now.view_date,
        sum(t_now.total_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_views,
        sum(t_now.total_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_views,
        sum(t_now.work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_views,  
        sum(t_now.work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_work_views, 
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_anon_work_views, 
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_anon_work_views, 
        sum(t_now.logged_in_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_logged_in_work_views,
        sum(t_wow.logged_in_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_logged_in_work_views,
        sum(t_yoy.logged_in_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_logged_in_work_views , 
        sum(t_now.logged_in_work_views) over (order by t_now.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_logged_in_work_views,
        sum(t_wow.logged_in_work_views) over (order by t_wow.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_logged_in_work_views,
        sum(t_yoy.logged_in_work_views) over (order by t_yoy.view_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_logged_in_work_views
    from views_data t_now
    left join views_data t_wow
        on t_now.view_date = dateadd('day',7,t_wow.view_date)
    left join views_data t_yoy
        on t_now.view_date = dateadd('year',1,t_yoy.view_date)
)
, total_vfvs as (
    select distinct
        t_now.vfv_date,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_vfvs,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_total_vfvs,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_vfvs  ,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as t30_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as wow30_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 29 PRECEDING AND 0 FOLLOWING) as yoy30_work_vfvs
    from vfv_data t_now
    left join vfv_data t_wow
        on t_now.vfv_date = dateadd('day',7,t_wow.vfv_date)
    left join vfv_data t_yoy
        on t_now.vfv_date = dateadd('year',1,t_yoy.vfv_date)
)
, final_data as (
select 'Website Traffic' as metric, visit_date as the_date, t7_total_visits as t7_value, wow_total_visits as wow_value, yoy_total_visits as yoy_value,
            t30_total_visits as t30_value, wow30_total_visits as wow30_value, yoy30_total_visits as yoy30_value from total_traffic
    union all
select 'Total Views' as metric, view_date as the_date, t7_total_views as t7_value, wow_total_views as wow_value, yoy_total_views as yoy_value,
            t30_total_views as t30_value, wow30_total_views as wow30_value, yoy30_total_views as yoy30_value from total_views
    union all
select 'Work Views' as metric, view_date as the_date, t7_work_views as t7_value, wow_work_views as wow_value, yoy_work_views as yoy_value,
             t30_work_views as t30_value, wow30_work_views as wow30_value, yoy30_work_views as yoy30_value from total_views
    union all
select 'Anon Work Views' as metric, view_date as the_date, t7_anon_work_views as t7_value, wow_anon_work_views as wow_value, yoy_anon_work_views as yoy_value,
        t30_anon_work_views as t30_value, wow30_anon_work_views as wow30_value, yoy30_anon_work_views as yoy30_value from total_views
    union all
select 'Logged In Work Views' as metric, view_date as the_date, t7_logged_in_work_views as t7_value, wow_logged_in_work_views as wow_value, yoy_logged_in_work_views as yoy_value,
       t30_logged_in_work_views as t30_value, wow30_logged_in_work_views as wow30_value, yoy30_logged_in_work_views as yoy30_value from total_views
    union all
select 'Total VFVs' as metric, vfv_date as the_date, t7_total_vfvs as t7_value, wow_total_vfvs as wow_value, yoy_total_vfvs as yoy_value,
    t30_total_vfvs as t30_value, wow30_total_vfvs as wow30_value, yoy30_total_vfvs as yoy30_value from total_vfvs
    union all
select 'Work VFVs' as metric, vfv_date as the_date, t7_work_vfvs as t7_value, wow_work_vfvs as wow_value, yoy_work_vfvs as yoy_value,
    t30_work_vfvs as t30_value, wow30_work_vfvs as wow30_value, yoy30_work_vfvs as yoy30_value from total_vfvs
)
select * from final_data
where the_date << current_date()
---- MRR query

with net_monthly_mrr as (
    select
        date_month,
        coalesce(sum(mrr_starting),0) mrr_starting,
        coalesce(sum(case when mrr_net_change_category = 'new' then mrr_net_change end),0) mrr_new,
        coalesce(sum(case when mrr_net_change_category = 'change_from_sales_led' then mrr_net_change end),0) mrr_from_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'reactivation' then mrr_net_change end),0) mrr_reactivation,
        coalesce(sum(case when mrr_net_change_category = 'expansion' then mrr_net_change end),0) mrr_expansion,
        coalesce(sum(case when mrr_net_change_category = 'contraction' then mrr_net_change end),0) mrr_contraction,
        coalesce(sum(case when mrr_net_change_category = 'change_to_sales_led' then mrr_net_change end),0) mrr_to_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'churn' then mrr_net_change end),0) mrr_churn,
        coalesce(sum(mrr_ending),0) mrr_ending
    from analytics.analytics.fact_self_serve_mrr_by_customer_by_month
    group by 1
),

net_monthly_mrr_with_financial_metrics as (
    select
        *,
        -- BEFORE
        -- mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        -- mrr_expansion as mrr_expansion_finance,
        -- mrr_contraction + mrr_churn + mrr_to_sales_led as mrr_churn_finance,
        -- mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        -- mrr_new_finance + mrr_expansion_finance as mrr_total_finance

        -- AFTER
        mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        mrr_expansion as mrr_expansion_finance,
        mrr_contraction + mrr_churn as mrr_churn_finance,
        mrr_new_finance + mrr_expansion_finance + mrr_churn_finance + mrr_to_sales_led as mrr_net_new_finance,
        mrr_new_finance + mrr_expansion_finance as mrr_total_finance,
        mrr_to_sales_led as mrr_graduate_to_sales
    from net_monthly_mrr
)
-- select * from net_monthly_mrr_with_financial_metrics where date_month='2022-09-01'

, dates as (
    select 
        date_trunc('month',date_day) as date_month,
        max(case when date_day << current_date() then date_day end) as month_last_day,
        max(date_part('day',case when date_day << current_date() then date_day end)) as month_last_day_num,
        max(date_part('day',date_day)) as max_month_day_num,
        month_last_day_num/max_month_day_num as percent_thru_month
    from analytics.analytics.days
    group by 1
)

, monthly_data as (   
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Net New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_net_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Total New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_total_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'New + Reactivation' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Expansion' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_expansion_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Churn' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_churn) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Contraction' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_contraction) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Graduate to Sales' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_graduate_to_sales) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
)
, quarterly_data as (
    select
        the_quarter,
        channel,
        max(month_last_day) as quarter_last_day,
        sum(value) as value
    from monthly_data
    group by 1,2
)
, monthly_goals_data as (
    select
        case
            when metric = 'Net New' then 'Net New ARR' 
            when metric = 'New Revenue' then 'Total New ARR'
            when metric = 'New Revenue (New + Reactivation)' then 'New + Reactivation' -- part of 'Total New ARR'
            when metric = 'Expansion Revenue' then 'Expansion' -- part of 'Total New ARR'
            when metric = 'Churn Revenue' then 'Churn' -- part of 'Total New ARR'
            when metric = 'Contraction Revenue' then 'Contraction' -- part of 'Total New ARR'
            when metric = 'Contraction and Churn Revenue' then 'Churn + Contraction'
        end as clean_metric,
        *
    from analytics.analytics.reporting_score_card_goals
    where metric not in ('AWS','Signups')
)
, quarter_goals_data as (
    select
        quarter,
        model_grouping,
        clean_metric,
        sum(metric_value) as metric_value
    from monthly_goals_data
    group by 1, 2, 3
)
select
coalesce(g.clean_metric, m.channel) as channel,
m.the_month,
m.the_quarter,
dateadd('day',-1,dateadd('quarter',1,m.the_quarter)) as quarter_max_day,
coalesce(g.metric_value,m.value) as month_goal,
m.value as month_actual,
m.value/nullif(m.percent_thru_month,0) as month_pacing,
m.value/nullif(month_goal * m.percent_thru_month,0) as month_pacing_pct,
last_year.value as last_year_actual,
(month_pacing/nullif(last_year.value,0)) - 1 as YoY_percent,
coalesce(qg.metric_value,q.value) as quarter_goal,
q.value as quarter_actual,
datediff('day',q.the_quarter, q.quarter_last_day)/nullif(datediff('day', q.the_quarter, quarter_max_day),0) as percent_thru_quarter,
q.value/nullif(quarter_goal * percent_thru_quarter,0) as quarter_pacing
from monthly_data m
left join monthly_goals_data g
    on g.month = m.the_month
    and m.channel = g.clean_metric
left join quarter_goals_data qg
    on qg.quarter = g.quarter
    and qg.model_grouping = g.model_grouping
    and qg.clean_metric = g.clean_metric
join quarterly_data q
    on m.the_quarter = q.the_quarter
    and m.channel = q.channel
left join monthly_data as last_year
    on m.the_month = dateadd('year',1,last_year.the_month)
    and m.channel = last_year.channel
with monthly_data as (
    select 
        date_day as date_month, 
        date_trunc('quarter', date_day) as date_quarter,
        sum(total_video_first_views) as month_vfv
    from analytics.analytics.reporting_metric_video_first_views_unioned
    where agg_type='monthly'
        and user_classification = 'work' 
    group by 1, 2
),
quarterly_data as (
    select 
        date_day as date_quarter, 
        sum(total_video_first_views) as quarter_vfv
    from analytics.analytics.reporting_metric_video_first_views_unioned
    where agg_type='quarterly'
        and user_classification = 'work' 
    group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()
),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        sum(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Work VFVs'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.month_vfv as month_vfv,
q.quarter_vfv as quarter_vfv,
yoy.month_vfv as yoy_month_vfv,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Work VFVs'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with conversions as (
    -- find organizations that converted, and the first day they were paid
select 
    a.organization_id, min(date_day) as conversion_date
  from analytics.analytics.fact_mrr_movement_by_customer_by_day a
  where mrr_net_change_category in ('new')
  and sales_support_type_ending = 'self_serve'
  and date_day >> '2021-01-01'
  and mrr_new>>0
    group by 1
),
new_conversions_data as(
    -- find all organizations and left join to conversion data
    select 
        o.organization_id, o.created_at, c.conversion_date
    from analytics.analytics.fact_organization o
    left join conversions c
        on c.organization_id = o.organization_id
    where o.created_at >>= '2021-01-01'
),
daily_data as (
    -- for each day, look at the orgs that were created in the 30-day window from 51 days ago to 21 days ago
    -- which is 30 days of orgs that have had the full 21 days to convert as of that day
    select
        d.date_day as the_date,
        date_trunc('month', d.date_day) as signup_month,
        date_trunc('quarter', d.date_day) as signup_quarter,
        count(n.organization_id) as org_count,
        count(case when n.conversion_date is not null then n.organization_id end) as converted_org_count,
        count(case when datediff(day, n.created_at, n.conversion_date) <<= 21 then n.organization_id end) as converted_21d_org_count,
        converted_21d_org_count/org_count as conv_rate_21d,
        min(n.created_at) as min_created_at,
        max(n.created_at) as max_created_at,
        row_number() over (partition by signup_month order by d.date_day desc) as month_rnk,
        row_number() over (partition by signup_quarter order by d.date_day desc) as quarter_rnk
    from analytics.analytics.days d
    left join new_conversions_data n
        on n.created_at >>= dateadd('day', -51, d.date_day)
        and n.created_at <<= dateadd('day', -21, d.date_day)
    where d.date_day >>= '2021-08-01'
    and d.date_day << current_date()
    group by 1

),
monthly_data as (
    select
        now.signup_month,
        now.the_date,
        now.org_count,
        now.converted_org_count,
        now.converted_21d_org_count,
        now.conv_rate_21d,
        yoy.org_count as yoy_org_count,
        yoy.converted_org_count as yoy_converted_org_count,
        yoy.converted_21d_org_count as yoy_converted_21d_org_count,
        yoy.conv_rate_21d  as yoy_conv_rate_21d       
    from daily_data as now
    left join daily_data as yoy
        on now.the_date = dateadd('y',1,yoy.the_date)
    where now.month_rnk=1
),
quarterly_data as (
    select
        signup_quarter,
        sum(org_count) as org_count,
        sum(converted_org_count) as converted_org_count,
        sum(converted_21d_org_count) as converted_21d_org_count,
        sum(converted_21d_org_count)/sum(org_count) as conv_rate_21d
    from daily_data
    where month_rnk=1
    group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = '21d Conversion Rate'
    group by 1
)
select
m.signup_month,
q.signup_quarter,
m.org_count as month_org_count,
m.converted_21d_org_count as month_converted_21d_org_count,
m.conv_rate_21d as month_conv_rate_21d,
q.org_count as quarter_org_count,
q.converted_21d_org_count as quarter_converted_21d_org_count,
q.conv_rate_21d as quarter_conv_rate_21d,
m.yoy_org_count,
m.yoy_converted_21d_org_count,
m.yoy_conv_rate_21d,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
-- left join monthly_data yoy
--     on m.signup_month = dateadd('y',1,yoy.signup_month)
left join quarterly_data q
    on date_trunc('quarter', m.signup_month) = q.signup_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.signup_month = mg.month
    and mg.metric='21d Conversion Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.signup_month) = qg.the_quarter
cross join max_date_cte
where m.signup_month >>= '2022-01-01'
with daily_data as (
    -- for each day, look at the prior 28d rolling window
    -- get a distinct count of paying orgs and expanding orgs
    select
        d.date_day as the_date,
        date_trunc('month', d.date_day) as date_month,
        date_trunc('quarter', d.date_day) as date_quarter,
        count(distinct case when mrr_starting >> 0 then organization_id end) as paying_org_count,
        count(distinct case when mrr_expansion >> 0 then organization_id end) as expanding_org_count,
        row_number() over (partition by date_month order by d.date_day desc) as month_rnk,
        row_number() over (partition by date_quarter order by d.date_day desc) as quarter_rnk
    from analytics.analytics.days d
    left join analytics.analytics.fact_mrr_movement_by_customer_by_day m
        on m.date_day <<= d.date_day
        and m.date_day >>= dateadd('day', -28, d.date_day)
    where d.date_day >>= '2021-08-01'
    and d.date_day << current_date()
    group by 1, 2, 3      
)
, monthly_data as (
    select
        now.date_month,
        now.the_date,
        now.paying_org_count,
        now.expanding_org_count,
        now.expanding_org_count/now.paying_org_count as expanding_perc,
        yoy.paying_org_count as yoy_paying_org_count,
        yoy.expanding_org_count as yoy_expanding_org_count,
        yoy.expanding_org_count/yoy.paying_org_count as yoy_expanding_perc
    from daily_data as now
    left join daily_data as yoy
        on now.the_date = dateadd('y',1,yoy.the_date)
    where now.month_rnk=1
)
, quarterly_data as (
    select
        date_quarter,
        sum(paying_org_count) as paying_org_count_quarter,
        sum(expanding_org_count) as expanding_org_count_quarter,
        sum(expanding_org_count)/sum(paying_org_count) as expanding_perc_quarter
    from daily_data
    where month_rnk=1
    group by 1
)
, max_date_cte as (

    select 
        to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

)
, quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Expanding Workspaces Rate'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.paying_org_count as month_org_count,
m.expanding_org_count as month_expanding_org_count,
m.expanding_perc as month_expanding_perc,
q.paying_org_count_quarter as quarter_org_count,
q.expanding_org_count_quarter as quarter_expanding_org_count,
q.expanding_perc_quarter as quarter_expanding_perc,
m.yoy_paying_org_count as yoy_org_count,
m.yoy_expanding_org_count as yoy_expanding_org_count,
m.yoy_expanding_perc as yoy_expanding_perc,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Expanding Workspaces Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
2023-10-19 11:06:59,486 — exposurescrawler — DEBUG —  ❌ Self-Serve Pacing Scorecard: found no models
with experiment_list as (
select
*
from ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
where end_date >>= dateadd('month', -6, current_date())

)
, non_total_kpi as (
select
r.experiment_name, r.metric_name,user_classification, 
replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta::float as delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Y-Pos' 
    when prob_var_beats_con<<=0.05 then 'Y-Neg'
    else 'No' 
end as significant,
LOWER_DELTA_CREDIBLE_INTERVAL, UPPER_DELTA_CREDIBLE_INTERVAL,
is_default_metric,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join experiment_list e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/B'
and is_full_experiment=1
and r.metric_name not like 'Total%'
and (r.metric_name not like 'Average%' or r.metric_name like 'Average Time%')
)
, total_kpi as (
select
r.experiment_name, r.metric_name, user_classification, 
case
    when r.metric_name like 'Average Unique Views per Workspace%' then replace(r.metric_name,'Average Unique Views per Workspace','Workspace with Viewing User')
    when r.metric_name like 'Average VWMs%' then replace(r.metric_name,'Average VWMs','Workspace with VWM')
    when r.metric_name like 'Total Recorder Menu%' then replace(r.metric_name, 'Total Recorder Menu Opens', 'Opened Recorder Menu')
    else replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') 
end as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta::float as delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
annualized_impact,
total_annual_volume,
annualized_impact_percent
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join experiment_list e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/B'
and is_full_experiment=1
and (r.metric_name like 'Total%' or r.metric_name like 'Average%')
and m.simulation_type in  ('permutation', 'gamma')
)

select
n.experiment_name,
n.user_classification,
n.shared_metric_name,
n.control_value as rate_control_value,
n.variant_value as rate_variant_value,
n.control_total_count as rate_control_total_count,
n.variant_total_count as rate_variant_total_count,
n.delta as rate_delta,
n.prob_var_beats_con as rate_prob_var_beats_con,
n.significant as rate_significant,
n.LOWER_DELTA_CREDIBLE_INTERVAL,
n.UPPER_DELTA_CREDIBLE_INTERVAL,
t.control_value as total_control_value,
t.variant_value as total_variant_value,
t.control_total_count as total_control_total_count,
t.variant_total_count as total_variant_total_count,
t.delta as total_delta,
t.prob_var_beats_con as total_prob_var_beats_con,
t.significant as total_significant,
case when n.shared_metric_name like '%exp%' then 'Y' else 'N' end as experiment_length_yn,
n.is_default_metric,
t.annualized_impact,
t.total_annual_volume,
t.annualized_impact_percent,
n.filter_experiment_name
from non_total_kpi n
left join total_kpi t
    on t.experiment_name = n.experiment_name
    and t.user_classification = n.user_classification
    and t.shared_metric_name = n.shared_metric_name
with exp_results as (
select
r.experiment_name, metric_name, user_classification, 
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and e.end_date >>= dateadd('month', -6, current_date())
and is_full_experiment=1
)
, all_percentiles as (
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
where clean_experiment_name not in (select distinct clean_experiment_name
from analytics.analytics.reporting_experiment_ab_metric_percentiles)
union all
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics.analytics.reporting_experiment_ab_metric_percentiles
)
select 
a.clean_experiment_name as experiment_name,
m.clean_metric_name as metric_name,
a.user_classification,
a.percent_group,
case
    when a.percent_group='All Users' then 1
    when a.percent_group='Bottom 10%' then 2
    when a.percent_group='Lower Middle (Middle 11-50%)' then 3
    when a.percent_group='Upper Middle (Middle 51-90%)' then 4
    when a.percent_group='Top 10%' then 5
    when a.percent_group='Top 1%' then 6
end as percent_group_rnk,
a.variant_value,
a.control_value,
a.variant_count,
a.control_count,
a.variant_over_zero,
a.control_over_zero,
case when a.percent_group = 'All Users' then e.variant_base end as variant_base,
case when a.percent_group = 'All Users' then e.control_base end as control_base,
case 
    when a.percent_group = 'All Users' then e.delta 
    when a.control_value=0 then null
    else (a.variant_value - a.control_value)/(a.control_value)
end as delta,
case when a.percent_group = 'All Users' then e.prob_var_beats_con end as prob_var_beats_con,
case when a.percent_group = 'All Users' then e.significant end as significant,
m.default_yn,
e.filter_experiment_name
from all_percentiles a
join analytics.analytics.base_ab_metrics_list m
    on m.metric_col_name = a.metric_col_name
join exp_results e
    on e.experiment_name = a.clean_experiment_name
    and a.user_classification = e.user_classification
    and m.clean_metric_name = e.metric_name
with last_dates as (
    select
        max(r.as_of_date) as last_as_of_date,
        max(r.end_date) as last_end_date,
        max(date(b.end_date)) as expected_last_end_date,
        current_date() as today
    from analytics.analytics.reporting_experiment_ab_bayes_summary r
    join analytics.analytics.base_ab_experiments b
        on b.experiment_name = r.experiment_name
)
select 
*,
datediff('day',last_as_of_date,today) as days_since_as_of,
case
    when expected_last_end_date>>=today then datediff('day',last_end_date,today)
    else 0
end as days_since_end
from last_dates
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
, exp_groups as (
    select
    experiment_flag_name, control_name, count(distinct variant_name)
    from analytics.analytics.staging_ab_experiments_and_holdouts
    where end_date >>= dateadd('month', -6, current_date())
    group by 1,2
    having count(distinct variant_name)>>1
)
, experiment_list as (
select
b.*,
row_number() over (partition by b.experiment_flag_name, b.control_name order by b.variant_name) as exp_number
from analytics.analytics.staging_ab_experiments_and_holdouts b
join exp_groups e
    on b.experiment_flag_name = e.experiment_flag_name
    and b.control_name = e.control_name
where b.end_date >>= dateadd('month', -6, current_date())
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
e.control_name,
e.variant_name,
e.experiment_flag_name,
case when metric_name like '%(1d|7d)%' then 'Y' else 'N' end as longterm_metric,
row_number() over (partition by e.experiment_flag_name, r.metric_name, r.user_classification order by delta desc) as metric_rnk
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join experiment_list e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and is_full_experiment=1
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
case
    when date(e.end_date) >> current_date() then datediff('day',e.start_date,current_date())
    else datediff('day',e.start_date,e.end_date)
end as experiment_days_passed,
e.assignment_level,
concat(r.experiment_name, ' - ', date(e.start_date)) as filter_experiment_name
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/B'
and e.end_date >>= dateadd('month', -6, current_date())
2023-10-19 11:06:59,499 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard: found no models
SELECT
distinct 
o.SALES_SUPPORT_TYPE,
invoices.CREATED_AT_UTC,
DUE_DATE_UTC,
invoices.CUSTOMER_ID,
invoices.SUBSCRIPTION_ID,
base.DESCRIPTION,
invoices.invoice_date_utc,
sp.name as plan_name,
sub.plan_id,
sub.PLAN_INTERVAL,
invoices.INVOICE_ID,
INVOICE_NUMBER,
base.IS_PAID,
invoices.STATUS,
o.organization_id,
o.organization_name,
acc.account_id,
exc.name as account_executive_name,
acc.account_name,
invoices.AMOUNT_DUE,
datediff('day', DATE(base.DUE_DATE_UTC), current_date) as days_overdue,
case when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 0 then base.AMOUNT_DUE
else 0
end as "Open Invoices",

case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 90 then base.AMOUNT_DUE
else 0
end as "AR_aging_>>90",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 90
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 60 then base.AMOUNT_DUE
else 0
end as "AR_aging_90_60",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 60
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 30 then base.AMOUNT_DUE
else 0
end as "AR_aging_60_30",
case
when datediff('day', DATE(base.DUE_DATE_UTC), current_date) <<= 30 
and datediff('day', DATE(base.DUE_DATE_UTC), current_date) >> 0 then base.AMOUNT_DUE
else 0
end as "AR_aging_<<30",
-- csm info
csm.name as csm_name,
csm.username as csm_email
FROM
ANALYTICS.ANALYTICS.STRIPE_INVOICES invoices
join ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES base on base.invoice_id = invoices.invoice_id
JOIN ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS customers on invoices.CUSTOMER_ID = customers.CUSTOMER_ID
left outer JOIN ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS as sub on invoices.SUBSCRIPTION_ID = sub.SUBSCRIPTION_ID
left outer join ANALYTICS.ANALYTICS.stripe_plans sp on sp.plan_id = sub.plan_id
LEFT OUTER JOIN analytics.analytics.fact_organization as o on invoices.customer_id = o.external_customer_id
left outer join analytics.analytics.staging_salesforce_workspace w on w.loom_workspace_id  = o.organization_id
left outer join analytics.staging_salesforce_account as acc on w.account_id = acc.account_id 
left outer join analytics.base_salesforce_user as csm on acc.customer_success_manager = csm.user_id and csm.is_active = 'TRUE'
left outer join analytics.base_salesforce_user as exc on acc.account_executive = exc.user_id --and exc.is_active = 'TRUE'

WHERE
base.IS_PAID = 'false'
AND invoices.STATUS = 'open'
order by invoices.CUSTOMER_ID, invoices.INVOICE_ID
2023-10-19 11:06:59,502 — exposurescrawler — DEBUG —  ❌ Sales Led Accounts Receivables Report: found no models
with non_total_kpi as (
select
r.experiment_name, r.metric_name,user_classification, 
replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Y-Pos' 
    when prob_var_beats_con<<=0.05 then 'Y-Neg'
    else 'No' 
end as significant,
LOWER_DELTA_CREDIBLE_INTERVAL, UPPER_DELTA_CREDIBLE_INTERVAL,
is_default_metric
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/A'
and is_full_experiment=1
and r.metric_name not like 'Total%'
and (r.metric_name not like 'Average%' or r.metric_name like 'Average Time%')
)
, total_kpi as (
select
r.experiment_name, r.metric_name, user_classification, 
case
    when r.metric_name like 'Average Unique Views per Workspace%' then replace(r.metric_name,'Average Unique Views per Workspace','Workspace with Viewing User')
    when r.metric_name like 'Average VWMs%' then replace(r.metric_name,'Average VWMs','Workspace with VWM')
    else replace(replace(replace(r.metric_name,'Total ',''),'Unique ',''),'s ',' ') 
end as shared_metric_name,
control_value, variant_value,control_total_count, variant_total_count,
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant,
annualized_impact
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
left join analytics.analytics.base_ab_metrics_list m
    on r.metric_name = m.clean_metric_name
where e.experiment_type='A/A'
and is_full_experiment=1
and (r.metric_name like 'Total%' or r.metric_name like 'Average%')
and m.simulation_type in  ('permutation', 'gamma')
)

select
n.experiment_name,
n.user_classification,
n.shared_metric_name,
n.control_value as rate_control_value,
n.variant_value as rate_variant_value,
n.control_total_count as rate_control_total_count,
n.variant_total_count as rate_variant_total_count,
n.delta as rate_delta,
n.prob_var_beats_con as rate_prob_var_beats_con,
n.significant as rate_significant,
n.LOWER_DELTA_CREDIBLE_INTERVAL,
n.UPPER_DELTA_CREDIBLE_INTERVAL,
t.control_value as total_control_value,
t.variant_value as total_variant_value,
t.control_total_count as total_control_total_count,
t.variant_total_count as total_variant_total_count,
t.delta as total_delta,
t.prob_var_beats_con as total_prob_var_beats_con,
t.significant as total_significant,
case when n.shared_metric_name like '%exp%' then 'Y' else 'N' end as experiment_length_yn,
n.is_default_metric,
t.annualized_impact
from non_total_kpi n
left join total_kpi t
    on t.experiment_name = n.experiment_name
    and t.user_classification = n.user_classification
    and t.shared_metric_name = n.shared_metric_name
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
, exp_groups as (
    select
    experiment_flag_name, control_name, count(distinct variant_name)
    from analytics.analytics.base_ab_experiments
    group by 1,2
    having count(distinct variant_name)>>1
)
, experiment_list as (
select
b.*,
row_number() over (partition by b.experiment_flag_name, b.control_name order by b.variant_name) as exp_number
from analytics.analytics.base_ab_experiments b
join exp_groups e
    on b.experiment_flag_name = e.experiment_flag_name
    and b.control_name = e.control_name
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
e.control_name,
e.variant_name,
e.experiment_flag_name,
case when metric_name like '%(1d|7d)%' then 'Y' else 'N' end as longterm_metric,
row_number() over (partition by e.experiment_flag_name, r.metric_name, r.user_classification order by delta desc) as metric_rnk
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join experiment_list e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
and is_full_experiment=1
with exp_results as (
select
r.experiment_name, metric_name, user_classification, 
delta, prob_var_beats_con, control_base, variant_base,
case 
    when prob_var_beats_con>>=0.95 then 'Yes' 
    else 'No' 
end as significant
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
and is_full_experiment=1
and metric_name not like '%(exp)%'
)
, all_percentiles as (
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
where clean_experiment_name not in (select distinct clean_experiment_name
from analytics.analytics.reporting_experiment_ab_metric_percentiles)
union all
select clean_experiment_name,user_classification, percent_group,
variant_value,control_value,variant_count,metric_col_name,
control_count,variant_over_zero,control_over_zero
 from analytics.analytics.reporting_experiment_ab_metric_percentiles
)
select 
a.clean_experiment_name as experiment_name,
m.clean_metric_name as metric_name,
a.user_classification,
a.percent_group,
case
    when a.percent_group='All Users' then 1
    when a.percent_group='Bottom 10%' then 2
    when a.percent_group='Lower Middle (Middle 11-50%)' then 3
    when a.percent_group='Upper Middle (Middle 51-90%)' then 4
    when a.percent_group='Top 10%' then 5
    when a.percent_group='Top 1%' then 6
end as percent_group_rnk,
a.variant_value,
a.control_value,
a.variant_count,
a.control_count,
a.variant_over_zero,
a.control_over_zero,
case when a.percent_group = 'All Users' then e.variant_base end as variant_base,
case when a.percent_group = 'All Users' then e.control_base end as control_base,
case 
    when a.percent_group = 'All Users' then e.delta 
    when a.control_value=0 then null
    else (a.variant_value - a.control_value)/(a.control_value)
end as delta,
case when a.percent_group = 'All Users' then e.prob_var_beats_con end as prob_var_beats_con,
case when a.percent_group = 'All Users' then e.significant end as significant,
m.default_yn
from all_percentiles a
join analytics.analytics.base_ab_metrics_list m
    on m.metric_col_name = a.metric_col_name
join exp_results e
    on e.experiment_name = a.clean_experiment_name
    and a.user_classification = e.user_classification
    and m.clean_metric_name = e.metric_name
with first_date as (
select
experiment_name, min(start_date) as first_date
from analytics.analytics.reporting_experiment_ab_bayes_summary
group by 1
)
select 
r.* ,
case
    when r.is_cumulative = 1 then 1
    when r.is_full_experiment = 1 then 1
    when is_daily = 1 and r.start_date = f.first_date then 1
    else 0
end as in_cumulative_charts,
date(e.end_date) as experiment_end_date,
case
    when date(e.end_date) >> current_date() then datediff('day',e.start_date,current_date())
    else datediff('day',e.start_date,e.end_date)
end as experiment_days_passed,
e.assignment_level
from analytics.analytics.reporting_experiment_ab_bayes_summary r
join first_date f
    on f.experiment_name = r.experiment_name
join ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS e
    on r.experiment_name = e.experiment_name
where e.experiment_type='A/A'
with last_dates as (
    select
        max(r.as_of_date) as last_as_of_date,
        max(r.end_date) as last_end_date,
        max(date(b.end_date)) as expected_last_end_date,
        current_date() as today
    from analytics.analytics.reporting_experiment_ab_bayes_summary r
    join analytics.analytics.base_ab_experiments b
        on b.experiment_name = r.experiment_name
)
select 
*,
datediff('day',last_as_of_date,today) as days_since_as_of,
case
    when expected_last_end_date>>=today then datediff('day',last_end_date,today)
    else 0
end as days_since_end
from last_dates
2023-10-19 11:06:59,514 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard - A/A Experiments: found no models
select 
*, 
min(date_month) over (partition by customer_id order by date_month) as customer_first_mrr_month
from analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 11:06:59,515 — exposurescrawler — DEBUG —  ❌ Customer MRR Retention: found no models
select customer_id, min(period_start_utc) period_start, max(period_end_utc) period_end
from analytics.analytics.stripe_subscription_events
group by customer_id
2023-10-19 11:06:59,515 — exposurescrawler — DEBUG —  ❌ Customer Balance as of Date: found no models
with monthly_data as (
    select
        date_month,
        count(case when mrr_starting >> 0 then organization_id end) as paying_org_count,
        count(case when mrr_expansion >> 0 then organization_id end) as expanding_org_count,
        expanding_org_count/paying_org_count as expanding_perc
    from analytics.analytics.fact_mrr_movement_by_customer_by_month
    where date_month >>= '2021-01-01'
    group by 1
)
, quarterly_data as (
    select
        date_trunc('quarter', date_month) as date_quarter,
        sum(paying_org_count) as paying_org_count_quarter,
        sum(expanding_org_count) as expanding_org_count_quarter,
        expanding_org_count_quarter/paying_org_count_quarter as expanding_perc_quarter
    from monthly_data
    group by 1
)
, max_date_cte as (

    select 
        to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

)
, quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = 'Expanding Workspaces Rate'
    group by 1
)
select
m.date_month,
q.date_quarter,
m.paying_org_count as month_org_count,
m.expanding_org_count as month_expanding_org_count,
m.expanding_perc as month_expanding_perc,
q.paying_org_count_quarter as quarter_org_count,
q.expanding_org_count_quarter as quarter_expanding_org_count,
q.expanding_perc_quarter as quarter_expanding_perc,
yoy.paying_org_count as yoy_org_count,
yoy.expanding_org_count as yoy_expanding_org_count,
yoy.expanding_perc as yoy_expanding_perc,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.date_month = dateadd('y',1,yoy.date_month)
left join quarterly_data q
    on date_trunc('quarter', m.date_month) = q.date_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.date_month = mg.month
    and mg.metric='Expanding Workspaces Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.date_month) = qg.the_quarter
cross join max_date_cte
where m.date_month >>= '2022-01-01'
with topline as (
select 'VFV' as metric_type, total_video_first_views as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
union all 
select 'Views' as metric_type, total_views as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_video_views_unioned
union all 
select 'Signups' as metric_type, total_signups as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_signups_unioned
union all
select 'Total Recordings' as metric_type, total_recordings as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_recordings_unioned
union all 
select 'Total Recorders' as metric_type, total_recorders as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_recorders_unioned
union all 
select 'DAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'daily'
union all 
select 'WAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'weekly'
union all 
select 'MAU' as metric_type, total_active_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_active_users_unioned where agg_type = 'monthly'
union all 
select 'Habit' as metric_type, total_habit_moment_users as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_habit_moment_users_unioned
union all 
select 'AwS' as metric_type, total_activated_work_signups as metric_value, date_day, agg_type, user_classification, country, signup_attribution_type, mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_activated_work_signups_unioned
union all
select 'Domain with 7+ WAUs' as metric_type, total_domains_with_7_plus_work_active_users as metric_value, date_day, agg_type, user_classification, '' as country, '' as signup_attribution_type, '' as mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_domain_with_active_users_by_week
union all 
select 'NNARR' as metric_type, net_new_arr as metric_value, date_day, agg_type, '' as user_classification, '' as country, '' as signup_attribution_type, '' as mapped_plan_type, '' as device_type
, date_trunc('week', date_day) as date_week, date_trunc('month', date_day) as date_month
from analytics.analytics.reporting_metric_revenue_by_month
)


select * from topline
where date_day >>= '2020-01-01' and date_day <<= current_date()
with net_monthly_mrr as (
    select
        date_month,
        coalesce(sum(mrr_starting),0) mrr_starting,
        coalesce(sum(case when mrr_net_change_category = 'new' then mrr_net_change end),0) mrr_new,
        coalesce(sum(case when mrr_net_change_category = 'change_from_sales_led' then mrr_net_change end),0) mrr_from_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'reactivation' then mrr_net_change end),0) mrr_reactivation,
        coalesce(sum(case when mrr_net_change_category = 'expansion' then mrr_net_change end),0) mrr_expansion,
        coalesce(sum(case when mrr_net_change_category = 'contraction' then mrr_net_change end),0) mrr_contraction,
        coalesce(sum(case when mrr_net_change_category = 'change_to_sales_led' then mrr_net_change end),0) mrr_to_sales_led,
        coalesce(sum(case when mrr_net_change_category = 'churn' then mrr_net_change end),0) mrr_churn,
        coalesce(sum(mrr_ending),0) mrr_ending
    from analytics.analytics.fact_self_serve_mrr_by_customer_by_month
    group by 1
),

net_monthly_mrr_with_financial_metrics as (
    select
        *,
        -- BEFORE
        -- mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        -- mrr_expansion as mrr_expansion_finance,
        -- mrr_contraction + mrr_churn + mrr_to_sales_led as mrr_churn_finance,
        -- mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        -- mrr_new_finance + mrr_expansion_finance as mrr_total_finance

        -- AFTER
        mrr_new + mrr_reactivation + mrr_from_sales_led as mrr_new_finance,
        mrr_expansion as mrr_expansion_finance,
        mrr_contraction + mrr_churn as mrr_churn_finance,
        mrr_new_finance + mrr_expansion_finance + mrr_churn_finance as mrr_net_new_finance,
        mrr_new_finance + mrr_expansion_finance as mrr_total_finance
    from net_monthly_mrr
)
-- select * from net_monthly_mrr_with_financial_metrics where date_month='2022-09-01'

, dates as (
    select 
        date_trunc('month',date_day) as date_month,
        max(case when date_day << current_date() then date_day end) as month_last_day,
        max(date_part('day',case when date_day << current_date() then date_day end)) as month_last_day_num,
        max(date_part('day',date_day)) as max_month_day_num,
        month_last_day_num/max_month_day_num as percent_thru_month
    from analytics.analytics.days
    group by 1
)

, monthly_data as (   
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Net new ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_net_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Total New ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_total_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'New' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_new_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Expansion' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_expansion_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
    
    union all
    
    select
        m.date_month as the_month,
        date_trunc('quarter',m.date_month) as the_quarter,
        'Churn ARR' as channel,
        d.month_last_day,
        d.percent_thru_month,
        12*sum(mrr_churn_finance) as value
    from net_monthly_mrr_with_financial_metrics m
    join dates d
        on d.date_month = m.date_month
    group by 1, 2, 3, 4, 5
)
, quarterly_data as (
    select
        the_quarter,
        channel,
        max(month_last_day) as quarter_last_day,
        sum(value) as value
    from monthly_data
    group by 1,2
)
, monthly_goals_data as (
    select
        case
            when metric = 'Net New' then 'Net new ARR' 
            when metric = 'New Revenue' then 'Total New ARR'
            when metric = 'New Revenue (New + Reactivation)' then 'New' -- part of 'Total New ARR'
            when metric = 'Expansion Revenue' then 'Expansion' -- part of 'Total New ARR'
            when metric = 'Contraction and Churn Revenue' then 'Churn ARR'
        end as clean_metric,
        *
    from analytics.analytics.reporting_score_card_goals
    where metric not in ('AWS','Signups')
)
, quarter_goals_data as (
    select
        quarter,
        model_grouping,
        clean_metric,
        sum(metric_value) as metric_value
    from monthly_goals_data
    group by 1, 2, 3
)
select
g.clean_metric as channel,
m.the_month,
m.the_quarter,
dateadd('day',-1,dateadd('quarter',1,m.the_quarter)) as quarter_max_day,
g.metric_value as month_goal,
m.value as month_actual,
m.value/m.percent_thru_month as month_pacing,
m.value/(month_goal * m.percent_thru_month) as month_pacing_pct,
last_year.value as last_year_actual,
(month_pacing/last_year.value) - 1 as YoY_percent,
qg.metric_value as quarter_goal,
q.value as quarter_actual,
datediff('day',q.the_quarter, q.quarter_last_day)/datediff('day', q.the_quarter, quarter_max_day) as percent_thru_quarter,
q.value/(quarter_goal * percent_thru_quarter) as quarter_pacing
from monthly_data m
join monthly_goals_data g
    on g.month = m.the_month
    and m.channel = g.clean_metric
join quarter_goals_data qg
    on qg.quarter = g.quarter
    and qg.model_grouping = g.model_grouping
    and qg.clean_metric = g.clean_metric
join quarterly_data q
    on m.the_quarter = q.the_quarter
    and m.channel = q.channel
left join monthly_data as last_year
    on m.the_month = dateadd('year',1,last_year.the_month)
    and m.channel = last_year.channel
with conversions as (
select 
    a.organization_id, min(date_day) as conversion_date
  from analytics.analytics.fact_mrr_movement_by_customer_by_day a
  where mrr_net_change_category in ('new')
  and sales_support_type_ending = 'self_serve'
  and date_day >> '2021-01-01'
  and mrr_new>>0
    group by 1
),
new_conversions_data as(
    select 
        o.organization_id, o.created_at, c.conversion_date
    from analytics.analytics.fact_organization o
    left join conversions c
        on c.organization_id = o.organization_id
    where o.created_at >>= '2021-01-01'
),
monthly_data as (
select
date_trunc('month', created_at) as signup_month,
count(organization_id) as org_count,
count(case when conversion_date is not null then organization_id end) as converted_org_count,
count(case when datediff(day, created_at, conversion_date) <<= 21 then organization_id end) as converted_21d_org_count,
converted_21d_org_count/org_count as conv_rate_21d
from new_conversions_data
where created_at >>= '2021-09-01'
group by 1
),
quarterly_data as (
select
date_trunc('quarter', created_at) as signup_quarter,
count(organization_id) as org_count,
count(case when conversion_date is not null then organization_id end) as converted_org_count,
count(case when datediff(day, created_at, conversion_date) <<= 21 then organization_id end) as converted_21d_org_count,
converted_21d_org_count/org_count as conv_rate_21d
from new_conversions_data
where created_at >>= '2021-09-01'
group by 1
),
max_date_cte as (

    select to_date(max(created_at)) as date_freshness
    from analytics.analytics.fact_user
    where created_at << current_date()

),
quarterly_goals as (
    select
        date_trunc('quarter', month) as the_quarter,
        avg(metric_value) as quarter_goal
    from analytics.analytics.reporting_score_card_goals
    where metric = '21d Conversion Rate'
    group by 1
)
select
m.signup_month,
q.signup_quarter,
m.org_count as month_org_count,
m.converted_21d_org_count as month_converted_21d_org_count,
m.conv_rate_21d as month_conv_rate_21d,
q.org_count as quarter_org_count,
q.converted_21d_org_count as quarter_converted_21d_org_count,
q.conv_rate_21d as quarter_conv_rate_21d,
yoy.org_count as yoy_org_count,
yoy.converted_21d_org_count as yoy_converted_21d_org_count,
yoy.conv_rate_21d as yoy_conv_rate_21d,
max_date_cte.date_freshness,
mg.metric_value as monthly_goal,
qg.quarter_goal as quarterly_goal
from monthly_data m
left join monthly_data yoy
    on m.signup_month = dateadd('y',1,yoy.signup_month)
left join quarterly_data q
    on date_trunc('quarter', m.signup_month) = q.signup_quarter
left join analytics.analytics.reporting_score_card_goals mg
    on m.signup_month = mg.month
    and mg.metric='21d Conversion Rate'
left join quarterly_goals qg
    on date_trunc('quarter', m.signup_month) = qg.the_quarter
cross join max_date_cte
where m.signup_month >>= '2022-01-01'
with traffic_data as (
    select 
        date(event_date_utc) as visit_date, 
        sum(total_visits) as total_visits
    from analytics.analytics.reporting_traffic
    where path_category='marketing_site'
    and event_date_utc >>= dateadd('month',-13,current_date())
    group by 1
)
, views_data as (
    select
        date(f.segment_timestamp_utc) as view_date, 
        count(f.video_id) as total_views,
        count(case when u.user_classification='work' then f.video_id end) as work_views,
        count(case when f.is_logged_in_view=0 and u.user_classification='work' then f.video_id end) as anon_work_views
    from analytics.analytics.fact_video_views f
    join analytics.analytics.fact_user u
        on f.owner_id::varchar = u.user_id::varchar
    where f.segment_timestamp_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, vfv_data as (
    select
        date(video_first_view_at_utc) as vfv_date,
        count(video_id) as total_vfvs,
        count(case when u.user_classification='work' then video_id end) as work_vfvs
    from analytics.analytics.fact_recording f
    join analytics.analytics.fact_user u
        on f.user_id::varchar = u.user_id::varchar
    where video_first_view_at_utc >>= dateadd('month',-15,current_date())
    group by 1
)
, total_traffic as (
    select distinct
        t_now.visit_date,
        sum(t_now.total_visits) over (order by t_now.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_visits,
        sum(t_wow.total_visits) over (order by t_wow.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_visits,
        sum(t_yoy.total_visits) over (order by t_yoy.visit_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_visits    
    from traffic_data t_now
    left join traffic_data t_wow
        on t_now.visit_date = dateadd('day',7,t_wow.visit_date)
    left join traffic_data t_yoy
        on t_now.visit_date = dateadd('year',1,t_yoy.visit_date)
)
, total_views as (
    select distinct
        t_now.view_date,
        sum(t_now.total_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_views,
        sum(t_wow.total_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_views,
        sum(t_yoy.total_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_views,
        sum(t_now.work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_views,
        sum(t_wow.work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_views,
        sum(t_yoy.work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_views,  
        sum(t_now.anon_work_views) over (order by t_now.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_anon_work_views,
        sum(t_wow.anon_work_views) over (order by t_wow.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_anon_work_views,
        sum(t_yoy.anon_work_views) over (order by t_yoy.view_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_anon_work_views  
    from views_data t_now
    left join views_data t_wow
        on t_now.view_date = dateadd('day',7,t_wow.view_date)
    left join views_data t_yoy
        on t_now.view_date = dateadd('year',1,t_yoy.view_date)
)
, total_vfvs as (
    select distinct
        t_now.vfv_date,
        sum(t_now.total_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_total_vfvs,
        sum(t_wow.total_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_total_vfvs,
        sum(t_yoy.total_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_total_vfvs,
        sum(t_now.work_vfvs) over (order by t_now.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as t7_work_vfvs,
        sum(t_wow.work_vfvs) over (order by t_wow.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as wow_work_vfvs,
        sum(t_yoy.work_vfvs) over (order by t_yoy.vfv_date rows between 6 PRECEDING AND 0 FOLLOWING) as yoy_work_vfvs  
    from vfv_data t_now
    left join vfv_data t_wow
        on t_now.vfv_date = dateadd('day',7,t_wow.vfv_date)
    left join vfv_data t_yoy
        on t_now.vfv_date = dateadd('year',1,t_yoy.vfv_date)
)
, final_data as (
select 'Website Traffic' as metric, visit_date as the_date, t7_total_visits as t7_value, wow_total_visits as wow_value, yoy_total_visits as yoy_value from total_traffic
    union all
select 'Total Views' as metric, view_date as the_date, t7_total_views as t7_value, wow_total_views as wow_value, yoy_total_views as yoy_value from total_views
    union all
select 'Work Views' as metric, view_date as the_date, t7_work_views as t7_value, wow_work_views as wow_value, yoy_work_views as yoy_value from total_views
    union all
select 'Anon Work Views' as metric, view_date as the_date, t7_anon_work_views as t7_value, wow_anon_work_views as wow_value, yoy_anon_work_views as yoy_value from total_views
    union all
select 'Total VFVs' as metric, vfv_date as the_date, t7_total_vfvs as t7_value, wow_total_vfvs as wow_value, yoy_total_vfvs as yoy_value from total_vfvs
    union all
select 'Work VFVs' as metric, vfv_date as the_date, t7_work_vfvs as t7_value, wow_work_vfvs as wow_value, yoy_work_vfvs as yoy_value from total_vfvs
)
select * from final_data
where the_date << current_date()
2023-10-19 11:06:59,537 — exposurescrawler — DEBUG —  ❌ Topline Metric: found no models
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_TOTAL_VIDEO_SHARED" AS "COUNT_TOTAL_VIDEO_SHARED",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."COUNT_UNIQUE_VIDEO_SHARED" AS "COUNT_UNIQUE_VIDEO_SHARED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED" "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"."EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_TOTAL_VIDEO_VIEWED" AS "COUNT_TOTAL_VIDEO_VIEWED",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."COUNT_UNIQUE_VIDEO_VIEWED" AS "COUNT_UNIQUE_VIDEO_VIEWED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED" "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"."EVENT_DATE_UTC"  >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNTRY" AS "COUNTRY",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_UNIQUE_DEVICE_ID" AS "COUNT_UNIQUE_DEVICE_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_UNIQUE_USER_ID" AS "COUNT_UNIQUE_USER_ID",
  "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."COUNT_TOTAL_VIDEO_PAGE_VIEWED" AS "COUNT_TOTAL_VIDEO_PAGE_VIEWED"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED" "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
where "REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"."EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_INSTALL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_INSTALL"."COUNT_APP_INSTALLS" AS "COUNT_APP_INSTALLS"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL" "REPORTING_DAILY_MOBILE_APP_INSTALL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."SIGNUP_REFERRER" AS "SIGNUP_REFERRER",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."COUNT_SIGNUP_STARTS" AS "COUNT_SIGNUP_STARTS",
  "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"."COUNT_SIGNUP_COMPLETES" AS "COUNT_SIGNUP_COMPLETES"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL" "REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."SIGNIN_REFERRER" AS "SIGNIN_REFERRER",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."COUNT_SIGNIN_STARTS" AS "COUNT_SIGNIN_STARTS",
  "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"."COUNT_SIGNIN_COMPLETES" AS "COUNT_SIGNIN_COMPLETES"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL" "REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
where "EVENT_DATE_UTC" >>= '2019-12-01'
SELECT "REPORTING_DAILY_MOBILE_APP_OPEN"."EVENT_DATE_UTC" AS "EVENT_DATE_UTC",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."DEVICE_MODEL" AS "DEVICE_MODEL",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."APP_VERSION" AS "APP_VERSION",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."OS_NAME" AS "OS_NAME",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."OS_VERSION" AS "OS_VERSION",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."LOCALE" AS "LOCALE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."TIMEZONE" AS "TIMEZONE",
  "REPORTING_DAILY_MOBILE_APP_OPEN"."COUNT_APP_OPENS" AS "COUNT_APP_OPENS"
FROM "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN" "REPORTING_DAILY_MOBILE_APP_OPEN"
where "EVENT_DATE_UTC" >>= '2019-12-01' and "EVENT_DATE_UTC" <<= '2030-01-01'
2023-10-19 11:06:59,551 — exposurescrawler — DEBUG —  ❌ Mobile Health Dashboard: found no models
-- Cash flow forecast from subscriptions active and trialing
with calendar_day as (
  select
  date,
    date_part(MONTH, date) as month_num,
    monthname(date) as month_name,
    date_part(YEAR, date) as year
  from
    (
      -- from the start of the previous year to the end of the following year ->> 3 year rolling window
      SELECT dateadd(day,seq8(0), DATE_TRUNC(year, dateadd(year,-1, CURRENT_DATE))) AS date
  FROM table (generator(rowcount =>> (1095)+1))
    )
),
subscriptions as (
  select 
  subscription_id, customer_id, s1.created_at_utc, s1.status as sub_status, s1.start_date_utc as start_date, s1.ended_at_utc as ended_at, --s1.current_period_start_utc, s1.current_period_end_utc,
  cancel_at_date_utc as cancel_at, s1.canceled_at_date_utc as canceled_at, s1.trial_start_utc, s1.trial_end_utc,
    s1.plan_interval, s1.plan_interval_count, s1.billing_cycle_anchor_utc, days_until_due,
           s1.plan_id, s1.plan_name, s1.plan_amount, s1.quantity
  from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" s1
),
refunds as (
    select c.customer_id, inv.subscription_id, c.invoice_id, date(c.refund_created_at_utc) as due_date , date(inv.period_start_utc) as period_start, date(inv.period_end_utc) as period_end, date(c.refund_created_at_utc) as updated_at,  inv.is_paid, c.amount_refunded * -1 as amount, null as quantity
--  c.invoice_id, c.customer_id, date(c.created_at_utc) as date_refunded, c.currency, c.amount_refunded
    from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_CHARGES" c
    left join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_INVOICES" inv on inv.invoice_id = c.invoice_id
    left join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" sub on sub.subscription_id = inv.subscription_id and sub.customer_id = inv.customer_id
    where c.is_livemode = true
  and c.amount_refunded <<>> 0
),
subs as (
  select sub.subscription_id, sub.customer_id, 
  sub.sub_status, date(sub.billing_cycle_anchor_utc) as billing_cycle_anchor, 
  sub.start_date, sub.ended_at, sub.cancel_at, sub.canceled_at,  sub.days_until_due,
  sub.trial_start_utc, sub.trial_end_utc,
  sub.quantity, sub.plan_amount as unit_amount, sub.plan_name, 
  sub.plan_interval as price_interval, sub.plan_interval_count as price_interval_count
  from subscriptions sub
  ),
invoice_items as (
  -- Pending invoice items
  select customer_id, subscription_id, null as invoice_id, date(invoice_date_utc) as due_date, date(period_start_utc) as period_start, date(period_end_utc) as period_end, date(created_at_utc) as updated_at, false as is_paid, sum(amount) as amount, max(quantity) as quantity
    from "ANALYTICS"."ANALYTICS"."STRIPE_INVOICE_ITEM_EVENTS" inv
    where invoice_id is null
  and not exists (select 1 from "ANALYTICS"."ANALYTICS"."STRIPE_INVOICE_ITEM_EVENTS" item where item.invoice_item_id = inv.invoice_item_id and (item.invoice_id is not null or item.event_type = 'invoiceitem.deleted'))
    group by customer_id, subscription_id, date(invoice_date_utc) , date(period_start_utc) , date(period_end_utc) , date(created_at_utc), plan_id
  union 
  -- Actual subscription invoices
  select inv.customer_id, inv.subscription_id, inv.invoice_id, date(inv.due_date_utc) as due_date , date(inv.period_start_utc) as period_start, date(inv.period_end_utc) as period_end, date(inv.updated_at_utc) as updated_at,  inv.is_paid, inv.amount_due as amount, sum(quantity) as quantity
  from "ANALYTICS"."ANALYTICS"."BASE_STRIPE_INVOICES" inv
  join "ANALYTICS"."ANALYTICS"."BASE_STRIPE_SUBSCRIPTIONS" sub on sub.subscription_id = inv.subscription_id and sub.customer_id = inv.customer_id
  where inv.subscription_id is not null
  and inv.AMOUNT_DUE >> 0 
  and inv.status not in ('void', 'uncollectible', 'deleted') 
  group by inv.customer_id, inv.subscription_id, inv.invoice_id, date(inv.due_date_utc), date(inv.period_start_utc), date(inv.period_end_utc), date(inv.updated_at_utc),  inv.is_paid, inv.amount_due
  union
  --Refunds
  select customer_id, subscription_id, invoice_id, due_date, period_start, period_end, updated_at, is_paid, amount, quantity
  from refunds
  order by 4
),
actuals as (
    select 'Actuals' as type, inv.subscription_id, inv.customer_id, coalesce(cus.customer_name, cus.email) as customer_name, case when cus.metadata:"Contract" is not null then 'Contract' else 'Self-Serve' end as contract, 
        inv.invoice_id, case when inv.invoice_id is null then due_date + coalesce(subs.days_until_due,0) else case when inv.is_paid then inv.updated_at else inv.due_date end end as date, inv.period_start, inv.period_end, amount as amount, 
        coalesce(inv.quantity, subs.quantity) as quantity,
        subs.plan_name, subs.price_interval, price_interval_count, subs.sub_status
    from invoice_items inv
    join subs on subs.subscription_id = inv.subscription_id
    join "ANALYTICS"."ANALYTICS"."STRIPE_CUSTOMERS" cus on cus.customer_id = inv.customer_id
),
forecast as (
  select 'Forecast' as type, subs.subscription_id, subs.customer_id, coalesce(cus.customer_name, cus.email) as customer_name, case when cus.metadata:"Contract" is not null then 'Contract' else 'Self-Serve' end as contract, subs.sub_status, 
  subs.cancel_at, subs.canceled_at, billing_cycle_anchor,
  subs.plan_name, subs.price_interval, price_interval_count,
  cal.date + coalesce(subs.days_until_due, 0) as date, 
  subs.quantity, subs.quantity * (subs.unit_amount * 0.01) as billable_amount
  --sub.status, count(*)
  from subs
  join "ANALYTICS"."ANALYTICS"."STRIPE_CUSTOMERS" cus on cus.customer_id = subs.customer_id
  join calendar_day cal on cal.date >>= date(subs.billing_cycle_anchor) 
  where ( (subs.cancel_at is null and subs.canceled_at is null) or cal.date << date(coalesce(subs.cancel_at, subs.canceled_at)))
  --and subs.subscription_id in ('sub_1MtZmID0tZaJVqhDlzwIiNFr', 'sub_1MsEJDD0tZaJVqhDZX7ZoQ4u')
  --and cal.date >>= date(subs.current_period_end)
  and date_part(DAY, cal.date) = date_part(DAY, subs.billing_cycle_anchor)  
  and (case when subs.price_interval = 'year' then date_part(MONTH, cal.date) else '1' end) =(case when subs.price_interval = 'year' then date_part(MONTH, subs.billing_cycle_anchor) else '1' end)
  -- bill every 3 months interval
  and case when subs.price_interval_count >> 1 then cast(date_part(MONTH, cal.date) as int) else  0 end in 
    (cast(date_part(MONTH, subs.billing_cycle_anchor) as int), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + subs.price_interval_count, cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + (subs.price_interval_count * 2), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) + (subs.price_interval_count * 3), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) - (subs.price_interval_count), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) -(subs.price_interval_count * 2), cast(date_part(MONTH, subs.billing_cycle_anchor) as int) - (subs.price_interval_count * 3), 0)
  ),
consolidated as (  
  select 
  type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, null as invoice_id, date, quantity, billable_amount as amount
  --contract, sub_status, plan_name, date, sum(quantity) seats_count, sum(billable_amount) as cash_to_receive
  from forecast
  union
  select type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, invoice_id, date, quantity, amount
  from actuals 
  )
select type, subscription_id, customer_id, customer_name, contract, sub_status, plan_name, price_interval, price_interval_count, invoice_id, date, quantity, amount
  from consolidated
2023-10-19 11:06:59,559 — exposurescrawler — DEBUG —  ❌ Cash Flow Forecast: found no models
-- get data from day of domain conversion
with conversion_data as (
    select date_day as conversion_date_day, mapped_domain, domain_classification, primary_subscription_mapped_plan_name, mrr_ending, seats_ending, sales_support_type
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where date_day = domain_first_mrr_day
)

-- get most recent domain churn day per domain
, domain_last_churn_date as (
    select mapped_domain, max(date_day) as churn_date_day
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where mrr_churn << 0
    group by 1
)

-- get data from most recent domain churn day
, churn_data as (
    select domain_last_churn_date.churn_date_day, domain_last_churn_date.mapped_domain, mrr.domain_classification, mrr.mrr_starting, mrr.seats_starting, mrr.sales_support_type, mrr.primary_subscription_mapped_plan_name
    from analytics.analytics.fact_mrr_movement_by_domain_by_day mrr
    inner join domain_last_churn_date
        on domain_last_churn_date.mapped_domain = mrr.mapped_domain
        and domain_last_churn_date.churn_date_day = mrr.date_day
)

-- get current domain data
, current_data as (
    select date_day, mapped_domain, domain_classification, mrr_ending, seats_ending, sales_support_type, primary_subscription_mapped_plan_name
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    where date_day = current_date - 1
)

-- max seats per domain
, max_seats as (
    select mapped_domain, max(seats_ending) as max_seats
    from analytics.analytics.fact_mrr_movement_by_domain_by_day
    group by 1
)

, final as (
    select
        conversion_data.mapped_domain
        , conversion_data.domain_classification -- this is updated for all historical records if it ever changes
        , coalesce(current_data.sales_support_type, churn_data.sales_support_type) as sales_support_type
        , case 
            when current_data.date_day is null then 'churned'
            else 'active' 
          end as domain_status
        , conversion_data.conversion_date_day
        , case 
            when domain_status = 'churned' then churn_data.churn_date_day
            else null
          end as churn_date_day
        , case 
            when domain_status = 'active' then datediff('months', conversion_date_day, current_data.date_day) -- currently active tenure
            else datediff('months', conversion_date_day, churn_date_day) -- churn tenure
          end as tenure_months
        -- metrics
        -- mrr
        , conversion_data.mrr_ending as mrr_at_conversion
        , current_data.mrr_ending as mrr_current
        , case 
            when domain_status = 'churned' then churn_data.mrr_starting
          end as mrr_at_churn
        -- seats
        , conversion_data.seats_ending as seats_at_conversion
        , current_data.seats_ending as seats_current
        , case 
            when domain_status = 'churned' then churn_data.seats_starting 
          end as seats_at_churn
        , max_seats.max_seats

    from conversion_data

    left join churn_data
        on churn_data.mapped_domain = conversion_data.mapped_domain

    left join current_data
        on current_data.mapped_domain = conversion_data.mapped_domain

    left join max_seats
        on max_seats.mapped_domain = conversion_data.mapped_domain
)

select *
from final
2023-10-19 11:06:59,563 — exposurescrawler — DEBUG —  ❌ Domain Retention: found no models
with daily_active_users as(
    select *
    from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS

),

fact_user as (
    select *
    from ANALYTICS.ANALYTICS.FACT_USER

),

transcript_accessed as (

    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_ACCESSED

),

video_views as (
    select *
    from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
),

share_page_viewed as (
    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_PAGES
    where name = 'Individual Video'
),

emoji_reactions as
    (
        select *
        from ANALYTICS.ANALYTICS.fact_emoji_reaction
),

comments_created as (

    select *
    from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_CREATED

),

comment_reply_created  as (
select *
from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_REPLY_CREATED
),

views as (select 'Views' as Source,
                 date(SEGMENT_TIMESTAMP_UTC)  as date,
                 IS_LOGGED_IN_VIEW as is_logged_in,
                 USER_CLASSIFICATION,
                 device_type,
                 country,
                 case
                     when vv.embedded_on is not null and vv.PARENT_LOCATION like '%loom.com/share%' then 'Share Page'
                     when vv.embedded_on is not null and vv.PARENT_LOCATION like '%loom.com%'
                         then 'Embedded Across Loom HQ'
                     when vv.embedded_on is not null then 'Embedded Video'
                     else 'Share Page' end    as Viewed_ON,
                 count(distinct USER_ANON_ID) as users,
                 count(distinct event_id)     as actions
          from video_views vv
          left join fact_user fu on coalesce(vv.user_id, vv.ANONYMOUS_ID)::varchar = fu.user_id::varchar
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and OWNER_ID::varchar <<>>  coalesce(vv.user_id, vv.ANONYMOUS_ID)::varchar -- eliminate self views
          group by 1, 2, 3, 4, 5, 6, 7
),

comments as (
    select 'Comment Created' as Source,
    date(segment_timestamp_utc) as date,
    case when cc.user_id is not null then true else false end as is_logged_in,
    USER_CLASSIFICATION,
    null as device_type,
    country,
    null as Viewed_ON,
    count(distinct coalesce(cc.user_id, cc.ANONYMOUS_ID)) as users,
    count(distinct event_id) as actions
    from comments_created cc
    left join fact_user fu on coalesce(cc.user_id, cc.ANONYMOUS_ID) = fu.user_id
     where (coalesce(domain, 'anon') != 'loom.com' or domain is null)
    group by 1, 2, 3, 4, 5, 6, 7

),

emojis as (select 'Reactions'                                               as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when cc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                      as Viewed_ON,
                  count(distinct coalesce(cc.user_id, cc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                  as actions
           from emoji_reactions cc
                    left join fact_user fu on coalesce(cc.user_id, cc.ANONYMOUS_ID) = fu.user_id
          where (coalesce(domain, 'anon') != 'loom.com' or domain is null)
           group by 1, 2, 3, 4, 5, 6, 7
),

share_page as (select 'Visited Share Page'                                  as Source,
                  date(SEGMENT_TIMESTAMP_UTC)                               as date,
                  case when spv.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(spv.user_id, spv.ANONYMOUS_ID))     as users,
                  count(distinct EVENT_ID)                                          as actions
           from share_page_viewed spv
           left join fact_user fu on coalesce(spv.user_id, spv.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and is_owner = false
           group by 1, 2, 3, 4, 5, 6, 7
),

transcripts as (select 'Transcript Accessed On Share Page'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when ta.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(ta.user_id, ta.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from transcript_accessed ta
           left join fact_user fu on coalesce(ta.user_id, ta.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and current_user_is_owner = false
           group by 1, 2, 3, 4, 5, 6, 7
),
comment_reply_text as (select 'Comment Replies - Text'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when crc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(crc.user_id, crc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from comment_reply_created crc
           left join fact_user fu on coalesce(crc.user_id, crc.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and comment_reply_type = 'text'
           group by 1, 2, 3, 4, 5, 6, 7
),

comment_reply_emoji as (select 'Comment Replies - Emoji'                                  as Source,
                  date(segment_timestamp_utc)                               as date,
                  case when crc.user_id is not null then true else false end as is_logged_in,
                  USER_CLASSIFICATION,
                  null                                                      as device_type,
                  country,
                  null                                                        as Viewed_ON,
                  count(distinct coalesce(crc.user_id, crc.ANONYMOUS_ID))     as users,
                  count(distinct event_id)                                          as actions
           from comment_reply_created crc
           left join fact_user fu on coalesce(crc.user_id, crc.ANONYMOUS_ID) = fu.user_id
           where (coalesce(domain, 'anon') != 'loom.com' or domain is null) and comment_reply_type = 'emojiOnly'
           group by 1, 2, 3, 4, 5, 6, 7
)

select *
from (select *
      from views
      UNION ALL
      select *
      from comments
      UNION ALL
      select *
      from emojis
      UNION ALL
      select *
      from share_page
      UNION ALL
      select *
      from transcripts
      UNION ALL
      select *
      from comment_reply_text
      UNION ALL
      select *
      from comment_reply_emoji      )
where date >>= current_date - 730 and date <<= current_date
select date(timestamp) as date, referral_type, device, started_at, funnel, embedded_on, USER_CLASSIFICATION,
         count(distinct user_anon_id) as users, count(distinct event_id) as events

  from (select (timestamp)                                                                                     as timestamp,
               a.referral_type,
               device,
               started_at,
               funnel,
               embedded_on,
               user_anon_id,
               event_id,
               fu.USER_CLASSIFICATION,
               row_number() over (partition by user_anon_id, date(timestamp) order by user_anon_id, timestamp) as row_num

        from (select funnel,
                     date,
                     USER_ANON_ID,
                     event_id,
                     embedded_on,
                     first_value(referral_type)
                                 IGNORE NULLS over ( partition by (user_anon_id), date order by timestamp asc) as referral_type,
                     first_value(device)
                                 IGNORE NULLS over ( partition by (user_anon_id), date order by timestamp asc) as device,
                     -- num_visits_to_share_page,
                     -- unique_videos,
                     timestamp,
                     max(case when row_number = '1' then funnel else null end)
                         over (partition by user_anon_id, date order by timestamp asc)                            started_at
              from (select *,
                           row_number() over (partition by user_anon_id, date order by user_anon_id, timestamp asc) as row_number,
                           count(distinct funnel) over (partition by user_anon_id)                                  as unique_events_taken_by_user
                    from (select case
                                     when REFERRAL_TYPE = 'Embedded Videos' then 'share_page_view_from_embed'
                                     when REFERRAL_TYPE = 'Slack' then 'share_page_view_from_slack'
                                     else 'share_page_view' end as funnel,
                                 date,
                                 user_anon_id,
                                 embedded_on,
                                 referral_type,
                                 device,
                                 event_id                       as event_id,
                                 video_id                       as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                      AS timestamp
                          from ( (select date(SEGMENT_TIMESTAMP_UTC)                                                                                                          as date,
                                         SEGMENT_TIMESTAMP_UTC,
                                         coalesce(user_id, anonymous_id)                                                                                          as user_anon_id,
                                         null                                                                                                                     as embedded_on,
                                         EVENT_ID                                                                                                                       as event_id,
                                         video_id,
                                         case
                                             when referrer = 'https://www.loom.com/' or
                                                  referrer = 'https://www.loom.com' or
                                                  referrer = 'http://www.loom.com'
                                                 then 'Loom Website Home Page'
                                             when referrer like '%/embed%' then 'Embedded Videos'
                                             when referrer = 'https://www.loom.com/home' then 'Loom HQ'
                                             when referrer = 'https://www.loom.com/looms/archive'
                                                 then 'Loom Archive'
                                             when referrer ilike '%loom.com/looms/videos%'
                                                 then 'Loom Library'
                                             when referrer ilike '%loom.com/share/folder/%' or
                                                  referrer ilike '%loom.com/looms/folders/%'
                                                 then 'Loom Folders'
                                             when referrer = 'https://www.loom.com/history'
                                                 then 'Loom History'
                                             when referrer ilike '%loom.com/oauth-callback%'
                                                 then 'loom.com/oauth-callback'
                                             when referrer ilike '%loom.com/share%' then 'Loom Share Page'
                                             when referrer ilike '%loom.com/tag/' then 'Loom Tags'
                                             when referrer ilike '%loom.com/spaces/%' then 'Loom Spaces'
                                             when referrer ilike '%loom.com%' then 'Other Loom Pages'
                                             when referrer is null then 'Direct'
                                             else 'Other Referral' end                                                                                            as REFERRAL_TYPE,
                                         null                                                                                                                     as device,
                                         count(*) over (partition by user_anon_id)                                                                                as num_visits,
                                         abs(timestampdiff('second', SEGMENT_TIMESTAMP_UTC, lag(SEGMENT_TIMESTAMP_UTC)
                                                                                    over (partition by user_anon_id, date order by user_anon_id, SEGMENT_TIMESTAMP_UTC asc))) as time_to_previous_visit
                                  from ANALYTICS.ANALYTICS.BASE_WEBSITE_PAGES
                                  where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30 and name = 'Individual Video'
                                    and is_owner = false
                                  order by user_anon_id, SEGMENT_TIMESTAMP_UTC, num_visits desc))


                          UNION ALL

                          select case
                                     when embedded_on like '%loom.com/share%' then 'video_viewed_on_share_page'
                                     when embedded_on is not null and device_type != 'slack' then 'video_viewed_on_embed'
                                     when device_type = 'slack' then 'video_viewed_on_slack'
                                     else 'video_viewed_on_share_page' end as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)               as date,
                                 USER_ANON_ID,
                                 parent_location_v2                        as embedded_on,
                                 null                                      as referral_type,
                                 device_type                               as device,
                                 fvv.event_id                              as event_id,
                                 null                                      as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                     as timestamp
                          from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS fvv
                                   left join (select PARENT_LOCATION,
                                                     case
                                                         when running_pct <<= .3 then parent_location_v2
                                                         else 'Other Embedded View' end as parent_location_v2,
                                                     views
                                              from (select *, round(sum(pct) over (order by pct desc), 2) as running_pct
                                                    from (select EMBEDDED_ON
                                                                                                   parent_location
                                                               , case
                                                                     when PARENT_LOCATION like '%loom.com%' then 'Loom HQ'
                                                                     else PARENT_LOCATION end   as parent_location_v2
                                                               , count(*)                       as views
                                                               , ratio_to_report(views) over () as pct
                                                          from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
                                                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                                                            and OWNER_ID::varchar <<>> USER_ANON_ID::varchar
                                                            and parent_location not like '%loom.com/share%'
                                                          group by 1, 2
                                                          order by 4 desc)
                                                    order by pct desc)) embedded_on
                                             on embedded_on.parent_location = fvv.PARENT_LOCATION
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and OWNER_ID::varchar <<>> USER_ANON_ID::varchar

                          UNION ALL

                          select 'video_cta_clicked'             as funnel,
                                 date(timestamp)                 as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device,
                                 id                              as event_id,
                                 null                            as unique_videos,
                                 timestamp
                          from raw.website.video_cta_clicked
                          where owner_click = false
                            and date(timestamp) >>= current_date - 30


                          UNION ALL

                          select 'transcript_accessed'           as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_ACCESSED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and CURRENT_USER_IS_OWNER = false

                          UNION ALL

                          select 'transcript_accessed_by_phrase_click' as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)           as date,
                                 coalesce(user_id, anonymous_id)       as USER_ANON_ID,
                                 null                                  as embedded_on,
                                 null                                  as referral_type,
                                 null                                  as device_type,
                                 event_id                              as event_id,
                                 null                                  as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC                 as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_NAVIGATED_BY_PHRASE_CLICK
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                            and CURRENT_USER_IS_OWNER = false

                          UNION ALL

                          select funnel,
                                 date,
                                 USER_ANON_ID,
                                 embedded_on,
                                 referral_type,
                                 device_type,
                                 event_id,
                                 unique_videos,
                                 timestamp
                          from (select 'transcript_accessed_by_user_scroll'                                                                                                   as funnel,
                                       date(SEGMENT_TIMESTAMP_UTC)                                                                                                            as date,
                                       coalesce(user_id, anonymous_id)                                                                                                        as USER_ANON_ID,
                                       null                                                                                                                                   as embedded_on,
                                       null                                                                                                                                   as referral_type,
                                       null                                                                                                                                   as device_type,
                                       event_id                                                                                                                               as event_id,
                                       null                                                                                                                                   as unique_videos,
                                       SEGMENT_TIMESTAMP_UTC                                                                                                                  as timestamp,
                                       video_id,
                                       row_number() over (partition by coalesce(user_id, anonymous_id), video_id, date(SEGMENT_TIMESTAMP_UTC) order by SEGMENT_TIMESTAMP_UTC) as row_number
                                from ANALYTICS.ANALYTICS.BASE_WEBSITE_TRANSCRIPTION_NAVIGATED_BY_USER_SCROLL
                                where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30
                                  and CURRENT_USER_IS_OWNER = false
                                group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
                          where row_number = 1

                          UNION ALL

                          select 'emoji_reaction'                as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_EMOJI_REACTION
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'extended_reaction_clicked'     as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 ID                              as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_EXTENDED_REACTION_BUTTON_CLICKED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'entered_comment_mode'          as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 EVENT_ID                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_PLAYER_ENTERED_COMMENT_MODE
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL

                          select 'created_comment'               as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_CREATED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30

                          UNION ALL


                          select 'comment_reply_created'         as funnel,
                                 date(SEGMENT_TIMESTAMP_UTC)     as date,
                                 coalesce(user_id, anonymous_id) as USER_ANON_ID,
                                 null                            as embedded_on,
                                 null                            as referral_type,
                                 null                            as device_type,
                                 event_id                        as event_id,
                                 null                            as unique_videos,
                                 SEGMENT_TIMESTAMP_UTC           as timestamp
                          from ANALYTICS.ANALYTICS.BASE_WEBSITE_VIDEO_COMMENT_REPLY_CREATED
                          where date(SEGMENT_TIMESTAMP_UTC) >>= current_date - 30)
                    order by date, user_anon_id, timestamp)) a
                 left join analytics.analytics.fact_user fu on fu.user_id = a.user_anon_id
        where (coalesce(domain, 'anon') != 'loom.com' or domain is null))
  group by 1,2,3,4,5,6,7
2023-10-19 11:06:59,580 — exposurescrawler — DEBUG —  ✅ ViewerX Funnel & Core Metrics Monitoring: found models ['raw.website.video_cta_clicked']
with fact_videos as (
    select date(SEGMENT_TIMESTAMP_UTC) as SEGMENT_TIMESTAMP_UTC, owner_id, count(*) as video_views
    from ANALYTICS.ANALYTICS.FACT_VIDEO_VIEWS
    where OWNER_ID::varchar <<>> USER_ANON_ID::varchar --eliminate self views
    group by 1,2
),
 fact_user as (

     select * from ANALYTICS.ANALYTICS.KPI_USER_CLASSIFICATION
 ),

 fact_recordings as (

     select dau.USER_ANON_ID as user_anon_id,
            date(dau.DAY) as active_day,
            date(RECORDING_START_AT_UTC) as RECORDING_START_AT_UTC,
            date(RECORDING_COMPLETE_AT_UTC)as RECORDING_COMPLETE_AT_UTC,
            date(RECORDING_DELETED_AT_UTC) as RECORDING_DELETED_AT_UTC,
            date(RECORDING_CANCELLED_AT_UTC) as RECORDING_CANCELLED_AT_UTC,
            date(RECORDING_STOPPED_AT_UTC) as RECORDING_STOPPED_AT_UTC,
            date(RECORDING_QUIT_AT_UTC) as RECORDING_QUIT_AT_UTC,
            count(distinct case when service in ('windows', 'mac') then video_id end) as desktop_recordings,
                count(distinct case when SERVICE in ('browser_extension') then video_id end) as extension_recordings,
                  count(distinct case when service in ('ios_cam', 'ios_screen') then video_id end) as ios_recordings,
                 count(distinct case when service in ('sdk_recorder') then video_id end) as sdk_recordings,
                 count(distinct case when SERVICE in ('android') then video_id end) as android_recordings,
                count(distinct case when service in ('no service data') then video_id end) as unknown_recordings,
                count(distinct video_id) as total_recordings
     from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS dau
         LEFT JOIN ANALYTICS.ANALYTICS.FACT_RECORDING fr on date(fr.recording_complete_at_utc) = date(dau.day) and dau.USER_ANON_ID::varchar = fr.USER_ID::varchar
   --  where date(dau.DAY) = current_date - 10 --and user_id = '7773189'
     group by 1,2,3,4,5,6,7,8
 ),

 recordings_by_user_by_day as (

    select

        user_id,
        date_trunc('day', recording_complete_at_utc) as recording_day,
        count(distinct case when service in ('windows', 'mac') then video_id end) as desktop_recordings,
        count(distinct case when SERVICE in ('browser_extension') then video_id end) as extension_recordings,
        count(distinct case when service in ('ios_cam', 'ios_screen') then video_id end) as ios_recordings,
        count(distinct case when service in ('sdk_recorder') then video_id end) as sdk_recordings,
        count(distinct case when SERVICE in ('android') then video_id end) as android_recordings,
        count(distinct case when service in ('no service data') then video_id end) as unknown_recordings,
        count(distinct video_id) as total_recordings,
        count(distinct to_date(recording_complete_at_utc)) as recording_day_count
    from ANALYTICS.ANALYTICS.FACT_RECORDING
    where recording_complete_at_utc is not null
      --and date(RECORDING_COMPLETE_AT_UTC) = current_date - 10
    group by 1, 2

),

  vfv_by_user_by_day as (

    select

        nvfvd.user_id, -- user receiving vfv
        date_trunc('day', nvfvd.event_date_utc) as vfv_day,
        date_trunc('day', fr.recording_complete_at_utc) as recording_day_of_vfv,
        count(distinct nvfvd.video_id) as vfv_count

    from ANALYTICS.ANALYTICS.nodejs_video_first_view_deduped nvfvd
    inner join ANALYTICS.ANALYTICS.FACT_RECORDING fr
        on nvfvd.video_id = fr.video_id
    group by 1, 2, 3

    ),

 emoji_reaction as(
     select date(EVENT_DATE_UTC) as EVENT_DATE_UTC,
            coalesce(user_id, ANONYMOUS_ID) as user_anon_id,
            count(distinct case when (sentiment like 'yay%' or sentiment like 'wow%' or sentiment like 'love%' or sentiment like 'joy%' or
 sentiment like 'down%' or sentiment like 'up%' or sentiment like '+1%' or sentiment like '-1%' or sentiment like 'raised_hands%' or sentiment like 'heart_eyes%' or sentiment like 'open_mouth%')
           then event_id end) as default_emojis_used,
    count(*) - default_emojis_used  as extended_emoji_picker_emoji_used,
    count(*) as total_emojis_used
     from ANALYTICS.ANALYTICS.BASE_WEBSITE_EMOJI_REACTION
  --   where date(EVENT_DATE_UTC) = current_date - 10
     group by 1,2

 ),

    kpi_block as (
select
       dau.DAY as day,
       category as USER_CLASSIFICATION,
       country,
       cast(count(distinct dau.user_anon_id) as int) as "daily_active_user",
       cast(sum(fv_received.video_views)as int) as "video_views_received",
       cast(sum(default_emojis_used)as int) as "default_emojis_used",
       cast(sum(extended_emoji_picker_emoji_used)as int) as "extended_emoji_picker_used",
       cast(sum(total_emojis_used)as int)                as "total_emojis_used",
--completed recordings
       cast(sum(desktop_recordings) as int) as "desktop_recordings_completed",
       cast(sum(extension_recordings) as int) as "extension_recordings_completed",
       cast(sum(ios_recordings) as int) as "ios_recordings_completed",
       cast(sum(sdk_recordings) as int) as "sdk_recordings_completed",
       cast(sum(android_recordings) as int) as "android_recordings_completed",
       cast(sum(unknown_recordings) as int) as "unknown_recordings_completed",
       cast(sum(total_recordings) as int) as "total_recordings_completed",
       cast(sum(vfv_count) as int) as "vfv_count"

from ANALYTICS.ANALYTICS.FACT_DAILY_ACTIVE_USERS dau
left join fact_user fu on dau.user_anon_id::varchar = fu.user_id::varchar
left join fact_videos fv_received on fv_received.owner_id::varchar = dau.user_anon_id::varchar and date(dau.day) = date(fv_received.SEGMENT_TIMESTAMP_UTC)
left join emoji_reaction er on er.user_anon_id::varchar = dau.USER_ANON_ID::varchar and date(er.EVENT_DATE_UTC) = date(dau.DAY)
left join recordings_by_user_by_day fr on fr.USER_ID::varchar = dau.user_anon_id::varchar and date(fr.recording_day) = date(dau.day)
left join vfv_by_user_by_day vfv on vfv.USER_ID::varchar = dau.USER_ANON_ID::varchar and date(vfv.recording_day_of_vfv) = date(dau.DAY)
where year(dau.day) >>= year(current_date()) - 1

group by 1,2,3
)
select day,
       USER_CLASSIFICATION,
       country,
       metric,
       value
    from (
             (select day,
                     USER_CLASSIFICATION,
                     country,
      "daily_active_user",
      "video_views_received",
      "default_emojis_used",
      "extended_emoji_picker_used",
      "total_emojis_used",

--completed recordings
       "desktop_recordings_completed",
       "extension_recordings_completed",
       "ios_recordings_completed",
       "sdk_recordings_completed",
       "android_recordings_completed",
       "unknown_recordings_completed",
       "total_recordings_completed",
       "vfv_count"
             from kpi_block) p
unpivot
(value for metric in
(     "daily_active_user",
      "video_views_received",
      "default_emojis_used",
      "extended_emoji_picker_used",
      "total_emojis_used",

--completed recordings
       "desktop_recordings_completed",
       "extension_recordings_completed",
       "ios_recordings_completed",
       "sdk_recordings_completed",
       "android_recordings_completed",
       "unknown_recordings_completed",
       "total_recordings_completed",
       "vfv_count"))) as unpvt
2023-10-19 11:06:59,587 — exposurescrawler — DEBUG —  ❌ [BETA] - Tableau Cockpit Loom: found no models
select * 
from analytics.analytics.reporting_mrr_movement_by_customer
where date_agg = 'monthly'
and date_utc = date_trunc('month', sysdate()) - interval '1 month'
2023-10-19 11:06:59,588 — exposurescrawler — DEBUG —  ❌ Monthly ARR Movement Summary: found no models
SELECT "ACTIVATION_METRICS"."METRIC_YEAR" AS "METRIC_YEAR",
  "ACTIVATION_METRICS"."METRIC_MONTH" AS "METRIC_MONTH",
  "ACTIVATION_METRICS"."METRIC_YEAR_MONTH" AS "METRIC_YEAR_MONTH",
  "ACTIVATION_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ACTIVATION_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ACTIVATION_METRICS"."SIGNUP_ATTRIBUTION_TYPE" AS "SIGNUP_ATTRIBUTION_TYPE",
  "ACTIVATION_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ACTIVATION_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ACTIVATION_METRICS" "ACTIVATION_METRICS"
WHERE METRIC_YEAR_MONTH >>= '2020-01'
SELECT "ENGAGEMENT_METRICS"."EVENT_YEAR" AS "EVENT_YEAR",
  "ENGAGEMENT_METRICS"."EVENT_MONTH" AS "EVENT_MONTH",
  "ENGAGEMENT_METRICS"."EVENT_YEAR_MONTH" AS "EVENT_YEAR_MONTH",
  "ENGAGEMENT_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ENGAGEMENT_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ENGAGEMENT_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ENGAGEMENT_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ENGAGEMENT_METRICS" "ENGAGEMENT_METRICS"
WHERE EVENT_YEAR_MONTH >>= '2020-01'
SELECT "WORKSPACE_METRICS"."EVENT_YEAR" AS "EVENT_YEAR",
  "WORKSPACE_METRICS"."EVENT_MONTH" AS "EVENT_MONTH",
  "WORKSPACE_METRICS"."EVENT_YEAR_MONTH" AS "EVENT_YEAR_MONTH",
  "WORKSPACE_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "WORKSPACE_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "WORKSPACE_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "WORKSPACE_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_WORKSPACE_METRICS" "WORKSPACE_METRICS"
where event_year_month >>= '2020-10'
SELECT "ACQUISITION_METRICS"."METRIC_YEAR" AS "METRIC_YEAR",
  "ACQUISITION_METRICS"."METRIC_MONTH" AS "METRIC_MONTH",
  "ACQUISITION_METRICS"."METRIC_YEAR_MONTH" AS "METRIC_YEAR_MONTH",
  "ACQUISITION_METRICS"."USER_CLASSIFICATION" AS "USER_CLASSIFICATION",
  "ACQUISITION_METRICS"."PLAN_TYPE" AS "PLAN_TYPE",
  "ACQUISITION_METRICS"."DEVICE_TYPE" AS "DEVICE_TYPE",
  "ACQUISITION_METRICS"."METRIC_TYPE" AS "METRIC_TYPE",
  "ACQUISITION_METRICS"."METRIC_VALUE" AS "METRIC_VALUE"
FROM "ANALYTICS"."REPORTING_ACQUISITION_METRICS" "ACQUISITION_METRICS"
WHERE METRIC_YEAR_MONTH >>= '2020-01'
2023-10-19 11:06:59,592 — exposurescrawler — DEBUG —  ❌ Overall Product Health Dashboard: found no models
with 

assignments as (

    select
        anonymous_id::varchar as anonymous_id,
        experiment_name,
        assignment_group,
        user_classification,
        min(assignment_tstamp_utc) as assignment_tstamp_utc,
        min(assignment_tstamp_pt) as assignment_tstamp_pt

    from analytics.analytics.ab_anon_experiment_users
    where experiment_name = 'experiment-website-record-reply-logged-out-users'
        and date(assignment_tstamp_utc) between '2021-10-23' and '2021-10-29'
    group by 1,2,3,4
),

user_ids as (

    select
        assignments.anonymous_id,
        assignments.experiment_name,
        assignments.assignment_group,
        assignments.user_classification,
        assignments.assignment_tstamp_utc,
        fact_user.user_id::varchar as user_id,
        fact_user.created_at

    from assignments
    left join analytics.analytics.tracks_anonymous_id_user_id_mapping
        on tracks_anonymous_id_user_id_mapping.anonymous_id = assignments.anonymous_id
    left join analytics.analytics.fact_user
        on fact_user.user_id::varchar = tracks_anonymous_id_user_id_mapping.user_id
        and fact_user.created_at >>= assignments.assignment_tstamp_utc
),

joined as (
    select
        user_ids.anonymous_id,
        user_ids.experiment_name,
        user_ids.assignment_group,
        coalesce(video_comment.creation_method,'aggregate') as creation_method,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 1 then video_comment.event_id else null end) total_video_view_comments_1d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 1 then video_comment.anonymous_id else null end) total_video_view_commenters_1d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 7 then video_comment.event_id else null end) total_video_view_comments_7d,
        count(distinct case when datediff('seconds', user_ids.assignment_tstamp_utc, video_comment.segment_timestamp_utc)::float/(60*60*24) <<= 7 then video_comment.anonymous_id else null end) total_video_view_commenters_7d
    from user_ids
    left join analytics.analytics.base_website_video_comment_created as video_comment
      on user_ids.anonymous_id = video_comment.anonymous_id
      and video_comment.segment_timestamp_utc >>= user_ids.assignment_tstamp_utc
      and date(segment_timestamp_utc) between '2021-10-23' and '2021-11-06'
    group by grouping sets (
      (user_ids.anonymous_id, user_ids.experiment_name, user_ids.assignment_group, video_comment.creation_method),
      (user_ids.anonymous_id, user_ids.experiment_name, user_ids.assignment_group)
    )
)

select 
  experiment_name,
  assignment_group,
  creation_method,
  count(distinct anonymous_id) as cnt_users,
  sum(coalesce(total_video_view_comments_1d,0)) as tot_comments_1d,
  sum(coalesce(total_video_view_commenters_1d,0)) as tot_commenters_1d,
  sum(coalesce(total_video_view_comments_1d,0))/count(distinct anonymous_id) as avg_comments_1d,
--  sum(coalesce(total_video_view_comments_1d,0))/sum(coalesce(total_video_view_commenters_1d,0)) as avg_comments_per_commenter_1d,
  sum(coalesce(total_video_view_comments_7d,0)) as tot_comments_7d,
  sum(coalesce(total_video_view_commenters_7d,0)) as tot_commenters_7d,
  sum(coalesce(total_video_view_comments_7d,0))/count(distinct anonymous_id) as avg_comments_7d
--  sum(coalesce(total_video_view_comments_7d,0))/sum(coalesce(total_video_view_commenters_7d,0)) as avg_comments_per_commenter_7d
from joined 
group by 1,2,3
--------------------------------------------------------------------------------------------
------------ sdk recording data
--------------------------------------------------------------------------------------------

with

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_anon' as event_name
    , timestamp
    , anonymous_id
    , video_id
    , id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3,4,5
),

sign_up_button_clicked_base as (
  select anonymous_id, timestamp
  from raw.website.sign_up_in_oauth_button_clicked -- ok, provider is auth0, apple, google rn
  where is_logged_in = false
    and source = 'anon-record-a-reply'

union all 

  select anonymous_id, timestamp
  from raw.website.email_sign_up_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
),

anon_comment_button_click as (
  select 
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.anon_comment_button_click
  group by 1
),

anon_exit_signup_click as (
  select 
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.exit_anon_record_a_reply_signup_modal
  group by 1
),


sign_up_button_clicked as (
    select 
      anonymous_id
      -- , video_id 
      , min(timestamp) as min_timestamp 
    from sign_up_button_clicked_base
    group by 1-- ,2
),

complete_onboarding_step as (
  select
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.complete_onboarding_step      -- ok
  where source = 'anon-record-a-reply'
  group by 1
),

onboarding_flow_complete as (
  select
    anonymous_id
    , min(timestamp) as min_timestamp
  from raw.website.onboarding_flow_complete      -- ok
  where source = 'anon-record-a-reply'
  group by 1
),

copy_link as(
  select anonymous_id
    , sdk_partner_id
    , segment_timestamp_utc
    , video_id
  from analytics.analytics.base_loomsdk_production_sdk_close_preview_modal_confirm_button_clicked
  union all
  select anonymous_id
    , sdk_partner_id
    , segment_timestamp_utc
    , video_id
  from analytics.analytics.base_loomsdk_production_sdk_copy_video_link_buton_clicked
),

min_copy_link as(
  select anonymous_id
    , sdk_partner_id
    , video_id
    , min(segment_timestamp_utc) as segment_timestamp_utc
  from copy_link
  group by 1, 2, 3
),

recording_data_base as(
  select
      r.video_id
      , r.recording_start_at_utc
      , r.recording_complete_at_utc
      , r.user_id
      , r.organization_id
      , r.sdk_partner_id
      , r.anonymous_id
      , i.segment_timestamp_utc as insert_at_utc
      , r.video_first_view_at_utc
      , acbc.min_timestamp as anon_comment_button_click_utc 
      , aesc.min_timestamp as anon_exit_signup_click_utc
      , subc.min_timestamp as sign_up_click_utc
      , onstep.min_timestamp as onboarding_step_utc
      , oncomplete.min_timestamp as onboarding_complete_utc 
      , coalesce(fff.flag_value,'not in experiment') as flag_value
      , coalesce(fff.flag_name,'not in experiment') as flag_name
      , ((datediff('second', r.recording_start_at_utc, r.recording_complete_at_utc)/60)/60)/24 as days_start_to_complete
      , ((datediff('second', r.recording_complete_at_utc, i.segment_timestamp_utc)/60)/60)/24 as days_complete_to_insert
      , ((datediff('second', r.recording_complete_at_utc, vv.segment_timestamp_utc)/60)/60)/24 as days_complete_to_vfv
      , ((datediff('second', r.recording_complete_at_utc, l.segment_timestamp_utc)/60)/60)/24 as days_complete_to_copy_link
      , ((datediff('second', r.recording_start_at_utc, r.recording_deleted_at_utc)/60)/60)/24 as days_start_to_delete
      , ((datediff('seconds', recording_start_at_utc, current_timestamp())/60)/60)/24 as time_passed_start
      , ((datediff('seconds', recording_complete_at_utc, current_timestamp())/60)/60)/24 as time_passed_complete
  from analytics.analytics.fact_recording r

      -- join share_page_record_reply_button_clicked rra
      --     on r.anonymous_id = rra.anonymous_id
      left join analytics.analytics.base_loomsdk_production_sdk_insert_recording_button_clicked i
          on i.video_id = r.video_id
              and i.segment_timestamp_utc >>= r.recording_start_at_utc ---- clicked insert after they started the recording
      left join analytics.analytics.fact_video_views vv --- for SDK need to look at video views, not video first view because event won't fire if sharing the same user id
          on r.video_id = vv.video_id
            and vv.segment_timestamp_utc >>= r.recording_complete_at_utc
              and ifnull(vv.anonymous_id, '-100') != ifnull(r.anonymous_id, '-200')
      left join min_copy_link l
          on l.video_id = r.video_id
            and l.anonymous_id = r.anonymous_id
              and l.sdk_partner_id = r.sdk_partner_id
                and l.segment_timestamp_utc >>= r.recording_complete_at_utc
      join analytics.analytics.base_nodejs_feature_flag_fetched fff
          on fff.anonymous_id = r.anonymous_id
          and fff.flag_name = 'experiment-website-record-reply-logged-out-users'
          and fff.flag_value in ('control','variant')
          and date(fff.segment_timestamp_utc) between '2021-10-23' and '2021-10-29' --  '2021-10-20 00:00:00'
      left join anon_comment_button_click acbc 
          on r.anonymous_id = acbc.anonymous_id 
      left join anon_exit_signup_click aesc 
          on r.anonymous_id = aesc.anonymous_id 
      left join sign_up_button_clicked subc 
          on r.anonymous_id = subc.anonymous_id 
          -- and r.video_id = subc.video_id  
      left join complete_onboarding_step onstep
          on r.anonymous_id = onstep.anonymous_id
      left join onboarding_flow_complete oncomplete
          on r.anonymous_id = oncomplete.anonymous_id 
  where r.recording_client = 'sdk_recorder'
    and date(r.recording_start_at_utc) >>= '2021-10-20'
  ),


recording_data as (
  select
    a.anonymous_id as button_click_anonymous_id
    , a.timestamp as button_click_at_utc
    , a.id as button_click_event_id
    , b.*
  from share_page_record_reply_button_clicked a 
  left join recording_data_base b
    on a.anonymous_id = b.anonymous_id 
),

record_button_click_agg as (
  select 
    'record button clicks' as metric 
    , date(button_click_at_utc) as date_day
    , date_trunc('week',button_click_at_utc)
    , date_trunc('month',button_click_at_utc)
    , 'variant' as flag_value 
    , count(distinct button_click_event_id) as value
    , NULL as base 
  from recording_data
  where button_click_at_utc is not null 
  group by 1,2,3,4,5
),

record_button_click_anonymous_agg as (
  select 
    'record button click anonymous' as metric 
    , date(button_click_at_utc) as date_day
    , date_trunc('week',button_click_at_utc)
    , date_trunc('month',button_click_at_utc)
    , 'variant' as flag_value 
    , count(distinct button_click_anonymous_id) as value
    , NULL as base 
  from recording_data
  where button_click_at_utc is not null 
  group by 1,2,3,4,5
),

recording_start_video_agg as(
  select 'recording start videos' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_start_anonymous_agg as(
  select 'recording start anonymous' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_start_partner_agg as(
  select 'recording start partner' as metric
    , date(recording_start_at_utc) as date_day
    , date_trunc('week', recording_start_at_utc) as date_week
    , date_trunc('month', recording_start_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where recording_start_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_video_agg as(
  select 'recording complete videos' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_anonymous_agg as(
  select 'recording complete anonymous' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_complete_partner_agg as(
  select 'recording complete partner' as metric
    , date(recording_complete_at_utc) as date_day
    , date_trunc('week', recording_complete_at_utc) as date_week
    , date_trunc('month', recording_complete_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where recording_complete_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_video_agg as(
  select 'recording insert videos' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct video_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_anonymous_agg as(
  select 'recording insert anonymous' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

recording_insert_partner_agg as(
  select 'recording insert partner' as metric
    , date(insert_at_utc) as date_day
    , date_trunc('week', insert_at_utc) as date_week
    , date_trunc('month', insert_at_utc) as date_month
    , flag_value
    , count(distinct sdk_partner_id) as value
    , NULL as base
  from recording_data
  where insert_at_utc is not null
  group by 1, 2, 3, 4, 5
),

comment_button_click_anonymous as(
 select 'comment button click anonymous' as metric
   , date(anon_comment_button_click_utc) as date_day
   , date_trunc('week', anon_comment_button_click_utc) as date_week
   , date_trunc('month', anon_comment_button_click_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where anon_comment_button_click_utc is not null
 group by 1, 2, 3, 4, 5
),

exit_signup_click_anonymous as(
 select 'exit signup click anonymous' as metric
   , date(anon_exit_signup_click_utc) as date_day
   , date_trunc('week', anon_exit_signup_click_utc) as date_week
   , date_trunc('month', anon_exit_signup_click_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where anon_exit_signup_click_utc is not null
 group by 1, 2, 3, 4, 5
),

 sign_up_click_anonymous as(
  select 'sign up click anonymous' as metric
    , date(sign_up_click_utc) as date_day
    , date_trunc('week', sign_up_click_utc) as date_week
    , date_trunc('month', sign_up_click_utc) as date_month
    , flag_value
    , count(distinct anonymous_id) as value
    , NULL as base
  from recording_data
  where sign_up_click_utc is not null
  group by 1, 2, 3, 4, 5
),

onboarding_step_anonymous as(
 select 'onboarding step anonymous' as metric
   , date(onboarding_step_utc) as date_day
   , date_trunc('week', onboarding_step_utc) as date_week
   , date_trunc('month', onboarding_step_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where onboarding_step_utc is not null
 group by 1, 2, 3, 4, 5
),

onboarding_complete_anonymous as(
 select 'onboarding complete anonymous' as metric
   , date(onboarding_complete_utc) as date_day
   , date_trunc('week', onboarding_complete_utc) as date_week
   , date_trunc('month', onboarding_complete_utc) as date_month
   , flag_value
   , count(distinct anonymous_id) as value
   , NULL as base
 from recording_data
 where onboarding_complete_utc is not null
 group by 1, 2, 3, 4, 5
),


final as (
select * from record_button_click_agg
union all
select * from record_button_click_anonymous_agg
union all 
select * from recording_start_video_agg
union all
select * from recording_start_anonymous_agg
union all
select * from recording_start_partner_agg
union all
select * from recording_complete_video_agg
union all
select * from recording_complete_anonymous_agg
union all
select * from recording_complete_partner_agg
union all
select * from recording_insert_video_agg
union all
select * from recording_insert_anonymous_agg
union all
select * from recording_insert_partner_agg
union all 
select * from comment_button_click_anonymous
union all 
select * from sign_up_click_anonymous
union all 
select * from exit_signup_click_anonymous
union all 
select * from onboarding_step_anonymous
union all 
select * from onboarding_complete_anonymous
)



select
  date_day
  , flag_value
  , sum(case when metric = 'record button clicks' then value else null end) as cnt_record_button_click
  , sum(case when metric = 'recording start videos' then value else null end) as cnt_video_start
  , sum(case when metric = 'recording complete videos' then value else null end) as cnt_video_complete
  , sum(case when metric = 'recording insert videos' then value else null end) as cnt_video_insert
  , sum(case when metric = 'recording complete videos' then value else null end)/sum(case when metric = 'recording start videos' then value else null end) as pct_video_start_to_complete
  , sum(case when metric = 'recording insert videos' then value else null end)/sum(case when metric = 'recording complete videos' then value else null end) as pct_video_complete_to_insert

  , sum(case when metric = 'record button click anonymous' then value else null end) as cnt_users_button_click
  , sum(case when metric = 'recording start anonymous' then value else null end) as cnt_users_recording_start
  , sum(case when metric = 'recording complete anonymous' then value else null end) as cnt_users_recording_complete
  , sum(case when metric = 'recording insert anonymous' then value else null end) as cnt_users_recording_insert
  , sum(case when metric = 'recording complete anonymous' then value else null end)/sum(case when metric = 'recording start anonymous' then value else null end) as pct_users_start_to_complete
  , sum(case when metric = 'recording insert anonymous' then value else null end)/sum(case when metric = 'recording complete anonymous' then value else null end) as pct_users_complete_to_insert
  , sum(case when metric = 'comment button click anonymous' then value else null end) cnt_users_comment_click 
  , sum(case when metric = 'exit signup click anonymous' then value else null end) as cnt_users_exit_signup_click
  , sum(case when metric = 'sign up click anonymous' then value else null end) as cnt_users_signup_click
  , sum(case when metric = 'onboarding step anonymous' then value else null end) as cnt_users_onboard_step
  , sum(case when metric = 'onboarding complete anonymous' then value else null end) as cnt_users_onboard_complete
from final
-- where date_day between '2021-10-23' and '2021-10-29'
group by 1,2
with
variant as (
  select distinct anonymous_id
  from analytics.analytics.base_nodejs_feature_flag_fetched
  where date(segment_timestamp_pt) >>= '2021-10-20'
    and flag_name = 'experiment-website-record-reply-logged-out-users'
    and flag_value = 'variant'
),

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_anon' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

share_page_record_reply_button_clicked as (
  select
    'share_page_record_reply_button_clicked_signed_in' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.share_page_record_reply_button_clicked  -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = true
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

exit_anon_record_a_reply_signup_modal as (
  select
    'exit_anon_record_a_reply_signup_modal' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.exit_anon_record_a_reply_signup_modal   -- ok, no source needed
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

anon_comment_button_click as (
  select
    'anon_comment_button_click' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.anon_comment_button_click   -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

email_login_button_clicked as (
  select
    'email_login_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.email_login_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

sign_up_in_oauth_button_clicked as (
  select
    'sign_up_in_oauth_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sign_up_in_oauth_button_clicked -- ok, provider is auth0, apple, google rn
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

email_sign_up_button_clicked as (
  select
    'email_sign_up_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.email_sign_up_button_clicked  -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

complete_onboarding_step as (
  select
    'complete_onboarding_step' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.complete_onboarding_step      -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

onboarding_flow_complete as (
  select
    'onboarding_flow_complete' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.onboarding_flow_complete      -- ok
  where is_logged_in = false
    and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_record_button_clicked as (
  select
    'sdk_record_button_clicked' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_record_button_clicked     -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_recording_canceled as (
  select
    'sdk_recording_canceled' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_recording_canceled        -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

sdk_recording_completed as (
  select
    'sdk_recording_completed' as event_name
    , date(timestamp) as event_date_utc
    , anonymous_id
    , count(*) as events
  from raw.website.sdk_recording_completed       -- anon-record-a-reply not in source, but ok bc use is_logged_in = false
  where is_logged_in = false
    -- and source = 'anon-record-a-reply'
  group by 1,2,3
),

events as (
  select * from share_page_record_reply_button_clicked
    union all
  select * from share_page_record_reply_button_clicked
    union all
  select * from exit_anon_record_a_reply_signup_modal
    union all
  select * from anon_comment_button_click
    union all
  select * from email_login_button_clicked
    union all
  select * from sign_up_in_oauth_button_clicked
    union all
  select * from email_sign_up_button_clicked
    union all
  select * from complete_onboarding_step
    union all
  select * from onboarding_flow_complete
    union all
  select * from sdk_record_button_clicked
    union all
  select * from sdk_recording_canceled
    union all
  select * from sdk_recording_completed
)

select
  variant.anonymous_id
  , events.event_date_utc
  , coalesce(events.event_name, 'no events') as event
  , sum(coalesce(events.events,0)) as value
from variant
left join events
  on variant.anonymous_id = events.anonymous_id
group by 1,2,3
2023-10-19 11:06:59,617 — exposurescrawler — DEBUG —  ✅ Record a Reply (Anonymous) Custom Metrics: found models ['raw.website.complete_onboarding_step', 'raw.website.share_page_record_reply_button_clicked', 'raw.website.exit_anon_record_a_reply_signup_modal', 'raw.website.anon_comment_button_click', 'raw.website.sign_up_in_oauth_button_clicked', 'raw.website.email_sign_up_button_clicked', 'raw.website.onboarding_flow_complete', 'raw.website.complete_onboarding_step', 'raw.website.sdk_record_button_clicked', 'raw.website.sdk_recording_canceled', 'raw.website.sdk_recording_completed', 'raw.website.share_page_record_reply_button_clicked', 'raw.website.exit_anon_record_a_reply_signup_modal', 'raw.website.anon_comment_button_click', 'raw.website.email_login_button_clicked', 'raw.website.sign_up_in_oauth_button_clicked', 'raw.website.email_sign_up_button_clicked', 'raw.website.onboarding_flow_complete']
select * from 
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
where 
DATE_END = (select max(date_end) from ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS)
2023-10-19 11:06:59,618 — exposurescrawler — DEBUG —  ❌ Influencers & Network health dashboard: found no models
SELECT "FACT_MRR_BY_DOMAIN_BY_MONTH"."MAPPED_DOMAIN" AS "MAPPED_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."DATE_MONTH" AS "DATE_MONTH",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."FIRST_ACTIVE_MONTH" AS "FIRST_ACTIVE_MONTH",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEATS" AS "SEATS",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PREVIOUS_MONTH_SEATS" AS "PREVIOUS_MONTH_SEATS",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEATS_CHANGE" AS "SEATS_CHANGE",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR" AS "MRR",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PREVIOUS_MONTH_MRR" AS "PREVIOUS_MONTH_MRR",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR_CHANGE" AS "MRR_CHANGE",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."IS_EDUCATION_VERIFIED_DOMAIN" AS "IS_EDUCATION_VERIFIED_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."IS_PUBLIC_DOMAIN" AS "IS_PUBLIC_DOMAIN",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."PAID_ORGANIZATION_CLASSIFICATION" AS "PAID_ORGANIZATION_CLASSIFICATION",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."MRR_CHANGE_CATEGORY" AS "MRR_CHANGE_CATEGORY",
  "FACT_MRR_BY_DOMAIN_BY_MONTH"."SEAT_CHANGE_CATEGORY" AS "SEAT_CHANGE_CATEGORY"
FROM "ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH" "FACT_MRR_BY_DOMAIN_BY_MONTH"
WHERE
    "MRR" >> 0 OR "MRR_CHANGE_CATEGORY" = 'churn'
ORDER BY 1, 2
2023-10-19 11:06:59,619 — exposurescrawler — DEBUG —  ❌ MRR Exports: found no models
select
    count(vv.event_id) as total_videos_viewed,
    count(distinct coalesce(vv.user_id, vv.anonymous_id)) as unique_video_viewers,
    count(case when vv.segment_timestamp_utc >> dateadd('day', -30, localtimestamp)
          then vv.event_id end) as videos_viewed_l30d,
    count(distinct case when vv.segment_timestamp_utc >> dateadd('day', -30, localtimestamp)
          then coalesce(vv.user_id, vv.anonymous_id) end) as unique_video_viewers_l30d
from
    analytics.fact_video_views as vv
where
    vv.owner_id != vv.user_id or vv.user_id is null
2023-10-19 11:06:59,620 — exposurescrawler — DEBUG —  ❌ Product Marketing: found no models
select 
video_id
, user_id
, client
, recording_client
, recording_type
, service
, recording_start_at_utc
, recording_cancelled_at_utc
, recording_stopped_at_utc
, recording_complete_at_utc
, duration_of_completed_video
, coalesce(upload_method, 'us-west-2') as upload_method
, r.country_code
, cc.country_name
, case
    when r.country_code in ('BM','CA','GL','PM','US') then 'North America'
    when r.country_code in ('AW','BB','BS','BQ','KY','CU','CW','DM','DO','GD','GP','HT','JM','MQ','MS','PR','BL','KN','LC','MF','VC','SX','TT','TC','VG','VI') then 'Caribbean'
    when r.country_code in ('BZ','CR','SV','GT','HN','MX','NI','PA') then 'Central America'
    when r.country_code in ('AR','BO','BV','BR','CL','CO','EC','FK','GF','GY','PY','PE','GS','SR','UY','VE') then 'South America'
    when r.country_code in ('DZ','AO','BJ','BW','IO','BF','BI','CV','CM','CF','TD','KM','CG','CD','CI','DJ','EG','GQ','ER','SZ','ET','TF','GA','GM','GH','GN','GW','KE','LS','LR','LY','MG','MW','ML','MR','MU','YT','MA','MZ','NA','NE','NG','RE','RW','SH','ST','SN','SC','SL','SO','ZA','SS','SD','TZ','TG','TN','UG','EH','ZM','ZW') then 'Africa'
    when r.country_code in ('AU','FJ','GU','PF','FM','NR','NC','NZ','NU','NF','MP','PW','PG','PN','WS','SB','TK','TO','TV','UM','VU','WF') then 'Oceania'
    when r.country_code in ('BY','BG','CZ','HU','MD','PL','RO','RU','SK','UA') then 'Europe'
    when r.country_code in ('AX','DK','EE','FO','FI','GG','IS','IE','IM','JE','LV','LT','NO','SJ','SE','GB') then 'Europe'
    when r.country_code in ('XK','AL','AD','BA','HR','GI','GR','VA','IT','MT','ME','MK','PT','SM','RS','SI','ES') then 'Europe'
    when r.country_code in ('AT','BE','FR','DE','LI','LU','MC','NL','CH') then 'Europe'
    when r.country_code in ('CN','HK','JP','KP','KR','MO','MN','TW') then 'Asia'
    when r.country_code in ('KZ','KG','TJ','TM','UZ') then 'Asia'
    when r.country_code in ('BN','KH','ID','LA','MY','MM','PH','SG','TH','TL','VN') then 'Asia'
    when r.country_code in ('AF','BD','BT','IN','IR','MV','NP','PK','LK') then 'Asia'
    when r.country_code in ('AM','AZ','BH','CY','GE','IQ','IL','JO','KW','LB','OM','PS','QA','SA','SY','TR','AE','YE') then 'Asia'
    else 'Other'
   end as region_name
, case
    when r.country_code in ('BM','CA','GL','PM','US') then 'North America'
    when r.country_code in ('AW','BB','BS','BQ','KY','CU','CW','DM','DO','GD','GP','HT','JM','MQ','MS','PR','BL','KN','LC','MF','VC','SX','TT','TC','VG','VI') then 'Caribbean'
    when r.country_code in ('BZ','CR','SV','GT','HN','MX','NI','PA') then 'Central America'
    when r.country_code in ('AR','BO','BV','BR','CL','CO','EC','FK','GF','GY','PY','PE','GS','SR','UY','VE') then 'South America'
    when r.country_code in ('DZ','AO','BJ','BW','IO','BF','BI','CV','CM','CF','TD','KM','CG','CD','CI','DJ','EG','GQ','ER','SZ','ET','TF','GA','GM','GH','GN','GW','KE','LS','LR','LY','MG','MW','ML','MR','MU','YT','MA','MZ','NA','NE','NG','RE','RW','SH','ST','SN','SC','SL','SO','ZA','SS','SD','TZ','TG','TN','UG','EH','ZM','ZW') then 'Africa'
    when r.country_code in ('AU','FJ','GU','PF','FM','NR','NC','NZ','NU','NF','MP','PW','PG','PN','WS','SB','TK','TO','TV','UM','VU','WF') then 'Oceania'
    when r.country_code in ('BY','BG','CZ','HU','MD','PL','RO','RU','SK','UA') then 'Eastern Europe'
    when r.country_code in ('AX','DK','EE','FO','FI','GG','IS','IE','IM','JE','LV','LT','NO','SJ','SE','GB') then 'Northern Europe'
    when r.country_code in ('XK','AL','AD','BA','HR','GI','GR','VA','IT','MT','ME','MK','PT','SM','RS','SI','ES') then 'Southern Europe'
    when r.country_code in ('AT','BE','FR','DE','LI','LU','MC','NL','CH') then 'Western Europe'
    when r.country_code in ('CN','HK','JP','KP','KR','MO','MN','TW') then 'Eastern Asia'
    when r.country_code in ('KZ','KG','TJ','TM','UZ') then 'Central Asia'
    when r.country_code in ('BN','KH','ID','LA','MY','MM','PH','SG','TH','TL','VN') then 'Southeast Asia'
    when r.country_code in ('AF','BD','BT','IN','IR','MV','NP','PK','LK') then 'Southern Asia'
    when r.country_code in ('AM','AZ','BH','CY','GE','IQ','IL','JO','KW','LB','OM','PS','QA','SA','SY','TR','AE','YE') then 'Western Asia'
    else 'Other'
   end as sub_region_name
, case
    when r.country_code in ('GB','DE','US','FR','ES','AU') then 'In Experiment'
    when coalesce(upload_method, 'us-west-2') = 'upload-proxy' then 'In Experiment'
    else 'Not In Experiment'
   end as in_experiment
, recording_stability_1d
, case when recording_cancelled_at_utc is null then 0 else 1 end as is_not_cancelled
, latency
, speed_test_result
, upload_throughput
, avg_bit_rate
, width * height as video_resolution
, resolution
, ttv_seconds
, ttv_normalized
from "ANALYTICS"."ANALYTICS"."FACT_RECORDING" r
left join "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING" cc
    on r.country_code = cc.country_code
where coalesce(ttv_seconds,0) >>= 0
and coalesce(ttv_seconds,0) <<= 1200 
and coalesce(date(recording_start_at_utc),'2021-04-01') >>= dateadd('day',-61,current_date)
and coalesce(date(recording_start_at_utc),'2021-04-01') <<= current_date
2023-10-19 11:06:59,625 — exposurescrawler — DEBUG —  ❌ TTV Experiment Tracking: found no models
select
s.anonymous_id,
s.slack_user_id,
s.slack_team_id,
s.segment_timestamp_utc as nudge_shown_utc,
min(c.segment_timestamp_utc) as nudge_click_utc,
min(i.segment_timestamp_utc) as invite_sent_utc,
count(distinct invitee_slack_id) as invite_count
from analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown s
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked c
    on c.slack_user_id = s.slack_user_id
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',1,s.segment_timestamp_utc)
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent i
    on i.slack_user_id = c.slack_user_id
    and i.slack_team_id = c.slack_team_id
    and i.segment_timestamp_utc >>= c.segment_timestamp_utc
    and i.segment_timestamp_utc <<= dateadd('min',1,c.segment_timestamp_utc)
group by 1,2,3,4
with link_shares as (
    select
        case when is_channel_public is null then 'Unknown'
            when is_channel_public then 'Yes' else 'No' end as is_channel_public,
        case when is_sender_connected is null then 'Unknown'
            when is_sender_connected then 'Yes' else 'No' end as is_sender_connected,
        (case when is_channel_public then 'public' else 'private' end)||'|'||(case when is_sender_connected then 'connected' else 'not_connected' end) as share_bucket,
        segment_timestamp_utc,
        slack_user_id,
        slack_team_id,
        anonymous_id,
        event_id,
        array_size(parse_json(links)) as link_count
    from analytics.analytics.staging_integrations_slack_app_link_shared
)
, workspace_connect as (
select
    l.slack_user_id,
    l.slack_team_id,
    split(l.source,'?')[0]::varchar as source,
    l.segment_timestamp_utc as link_timestamp_utc
from analytics.analytics.base_integrations_slack_connect_link l
where l.source='newly_connected_workspace_connect_prompt'
)
, user_connect_prompts as (
select 
    anonymous_id,
    slack_user_id,
    slack_team_id,
    segment_timestamp_utc as user_connect_prompt_utc,
    source
from analytics.analytics.staging_integrations_slack_app_link_shared_connect_prompt_sent
)
, publish_nudges as (
select 
s.anonymous_id,
s.user_id,
s.slack_user_id,
s.slack_team_id,
parse_json(s.video_info)[0]['id']::varchar as video_id,
s.segment_timestamp_utc as publish_nudge_shown_utc,
a.segment_timestamp_utc as publish_nudge_accepted_utc,
m.segment_timestamp_utc as publish_nudge_muted_utc,
d.segment_timestamp_utc as publish_nudge_dismissed_utc
from analytics.analytics.staging_integrations_slack_app_publish_nudge_shown s
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_accepted a
    on a.user_id = s.user_id
    and parse_json(a.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and a.segment_timestamp_utc >>= s.segment_timestamp_utc
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_muted m
    on m.user_id = s.user_id
    and parse_json(m.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and m.segment_timestamp_utc >>= s.segment_timestamp_utc
left join analytics.analytics.staging_integrations_slack_app_publish_nudge_dismissed d
    on d.user_id = s.user_id
    and parse_json(d.video_info)[0]['id']::varchar = parse_json(s.video_info)[0]['id']::varchar
    and d.segment_timestamp_utc >>= s.segment_timestamp_utc
)
, invite_nudges as (
select 
s.anonymous_id,
s.user_id,
s.slack_user_id,
s.slack_team_id,
s.is_channel_public,
s.segment_timestamp_utc as invite_nudge_shown_utc,
i.segment_timestamp_utc as invite_sent_via_nudge_utc,
array_size(parse_json(invitees)) as invite_count,
d.segment_timestamp_utc as invite_nudge_declined_utc
from analytics.analytics.staging_integrations_slack_app_invite_nudge_shown s
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_invites_sent i
    on i.user_id = s.user_id
    and i.segment_timestamp_utc >>= s.segment_timestamp_utc
    and i.segment_timestamp_utc <<= dateadd('min',15,s.segment_timestamp_utc)
left join analytics.analytics.staging_integrations_slack_app_invite_nudge_declined d
    on d.user_id = s.user_id
    and d.segment_timestamp_utc >>= s.segment_timestamp_utc
    and d.segment_timestamp_utc <<= dateadd('min',15,s.segment_timestamp_utc)
)
, permission_granted as (
select
s.slack_team_id,
s.slack_user_id,
min(cc.segment_timestamp_utc) as grant_permission_utc
from analytics.analytics.staging_integrations_slack_app_link_shared_update_scopes_connect_sent s
left join  analytics.analytics.staging_integrations_slack_app_link_shared_update_scopes_connect c
    on c.slack_user_id = s.slack_user_id
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
left join analytics.analytics.base_integrations_slack_connect_callback cc
    on cc.slack_user_id = s.slack_user_id
    and cc.slack_team_id = s.slack_team_id
    and cc.segment_timestamp_utc >>= s.segment_timestamp_utc
    and cc.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
group by 1,2
)
, received_link_and_joined as (
select
    s.slack_user_id,
    s.slack_team_id,
    min(cc.segment_timestamp_utc) as receiver_granted_utc,
    min(cl.segment_timestamp_utc) as receiver_connected_utc,
    count(distinct s.member) as receiver_count
from analytics.analytics.staging_integrations_slack_app_link_shared_receivers_with_loom_account_connect_sent s
left join analytics.analytics.staging_integrations_slack_app_link_shared_receivers_with_loom_account_connect c
    on c.slack_user_id = s.member
    and c.slack_team_id = s.slack_team_id
    and c.segment_timestamp_utc >>= s.segment_timestamp_utc
    and c.segment_timestamp_utc <<= dateadd('min',10,s.segment_timestamp_utc)
left join analytics.analytics.base_integrations_slack_connect_callback cc
    on cc.slack_user_id = c.slack_user_id
    and cc.slack_team_id = c.slack_team_id
    and cc.segment_timestamp_utc >>= c.segment_timestamp_utc
    and cc.segment_timestamp_utc <<= dateadd('min',10,c.segment_timestamp_utc)
    and cc.source = 'link_shared_update_scopes_connect_prompt'
left join analytics.analytics.base_integrations_slack_connect_link cl
    on cl.slack_user_id = c.slack_user_id
    and cl.slack_team_id = c.slack_team_id
    and cl.segment_timestamp_utc >>= c.segment_timestamp_utc
    and cl.segment_timestamp_utc <<= dateadd('min',10,c.segment_timestamp_utc)
    and cl.source = 'link_shared_update_scopes_connect_prompt'
group by 1,2
)
, first_scope_update as (
select
    slack_user_id,
    slack_team_id,
    min(segment_timestamp_utc) as first_scope_update_utc
from analytics.analytics.base_integrations_slack_connect_callback
where source in ('link_shared_update_scopes_connect_prompt')
group by 1,2
)
, final_data as (
    select    
        ls.is_channel_public,
        ls.is_sender_connected,
        ls.share_bucket,
        ls.segment_timestamp_utc as link_share_utc,
        ls.slack_user_id,
        ls.slack_team_id,
        ls.anonymous_id,
        ls.link_count,
        ls.event_id as link_share_event_id,
    
        max(case when fsu.slack_user_id is not null then 'Y' else 'N' end) as updated_scopes_yn,

        min(wc.link_timestamp_utc) as workspace_connect_link_utc,

        min(pn.publish_nudge_shown_utc) as publish_nudge_shown_utc,
        min(pn.publish_nudge_accepted_utc) as publish_nudge_accepted_utc,
        min(pn.publish_nudge_muted_utc) as publish_nudge_muted_utc,
        min(pn.publish_nudge_dismissed_utc) as publish_nudge_dismissed_utc,

        min(i.invite_nudge_shown_utc) as invite_nudge_shown_utc,
        min(i.invite_sent_via_nudge_utc) as invite_sent_via_nudge_utc,
        max(i.invite_count) as invite_count,
        min(i.invite_nudge_declined_utc) as invite_nudge_declined_utc,

        min(scp.user_connect_prompt_utc) as sender_connect_prompt_utc,
    
        min(pg.grant_permission_utc) as grant_permission_utc,
    
        min(rlj.receiver_connected_utc) as receiver_connected_utc,
        min(rlj.receiver_granted_utc) as receiver_granted_utc,
        min(rlj.receiver_count) as receiver_count
    
    from link_shares ls
    left join workspace_connect wc
        on wc.slack_user_id = ls.slack_user_id
        and wc.slack_team_id = ls.slack_team_id
        and wc.link_timestamp_utc >>= ls.segment_timestamp_utc
        and wc.link_timestamp_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join user_connect_prompts scp
        on scp.slack_user_id = ls.slack_user_id
        and scp.slack_team_id = ls.slack_team_id
        and scp.user_connect_prompt_utc >>= ls.segment_timestamp_utc
        and scp.user_connect_prompt_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join publish_nudges pn
        on pn.slack_user_id = ls.slack_user_id
        and pn.slack_team_id = ls.slack_team_id
        and pn.publish_nudge_shown_utc >>= ls.segment_timestamp_utc
        and pn.publish_nudge_shown_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join invite_nudges i
        on i.slack_user_id = ls.slack_user_id
        and i.slack_team_id = ls.slack_team_id
        and i.invite_nudge_shown_utc >>= ls.segment_timestamp_utc
        and i.invite_nudge_shown_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join permission_granted pg
        on pg.slack_user_id = ls.slack_user_id
        and pg.slack_team_id = ls.slack_team_id
        and pg.grant_permission_utc >>= ls.segment_timestamp_utc
        and pg.grant_permission_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join received_link_and_joined rlj
        on rlj.slack_user_id = ls.slack_user_id
        and rlj.slack_team_id = ls.slack_team_id
        and rlj.receiver_connected_utc >>= ls.segment_timestamp_utc
        and rlj.receiver_connected_utc <<= dateadd('min',10,ls.segment_timestamp_utc)
    left join first_scope_update fsu
        on fsu.slack_user_id = ls.slack_user_id
        and fsu.slack_team_id = ls.slack_team_id
        and fsu.first_scope_update_utc <<= ls.segment_timestamp_utc
    group by 1,2,3,4,5,6,7,8,9
)
select * from final_data
2023-10-19 11:06:59,637 — exposurescrawler — DEBUG —  ❌ Slack Connect Event Tracking: found no models
2023-10-19 11:06:59,637 — exposurescrawler — INFO — ⚙️ Found 2 workbooks with linked models
local
2023-10-19 11:07:03,258 — exposurescrawler — INFO — 
2023-10-19 11:07:03,258 — exposurescrawler — INFO — 🔍 Parsing GraphQL result: looking for native SQL tables
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_SUGGESTION_JOINS] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Workspace Consolidation | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS] => ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Workspace Consolidation | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Go/ROI-Dash | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Go/ROI-Dash | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_INVITATIONS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_ROLE_CHANGES] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_STANDARD_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[SPRIG_SURVEY_RESPONSES] => ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Sprig Survey Responses (Prototype) | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_vfvers
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_seats
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viral_looms
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viewers
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_GOOGLE_SEARCH_ROI] => ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Marketing ROI | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CHANNEL_ROI] => ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 11:07:03,258 — exposurescrawler — DEBUG —  ➕ Marketing ROI | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Lifecycle OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DAGSTER_PIPELINES].[DAGSTER_PIPELINE_RUNS] => ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Dagster Runs | adding native SQL: ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EMAIL_AB_PERFORMANCE] => ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Marketing Email AB Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Marketing Email AB Dashboard | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ attribution backup | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_PAID_SDK_PARTNER_USAGE_BY_DAY] => ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ InfraSDK Invoice Data | adding native SQL: ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_FIRST_VIEWS
2023-10-19 11:07:03,259 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ traffic dashboards with dev source | adding native SQL: ANALYTICS_DEV.DBT_KAMRAN.REPORTING_TRAFFIC
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Net MRR Expansion Rate | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[ACTIVITY_BY_WORKSPACE_BY_MONTH] => ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_RAYMOND].[FACT_ORGANIZATION_MEMBERSHIPS_HISTORY] => ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Workspace Lookup v2 | adding native SQL: ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[TOP_REFERRERS] => ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Referrals WIP | adding native SQL: ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_USAGE] => ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_CLIP_DISTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_COMPLETE_RATE_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EDIT_CLIP_STATS] => ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PERC_EDIT_RECORDING_AND_RECORDER] => ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Create Trim and Add Clip (6) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[CREATOR_LITE_LIMITS_DATA] => ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Creator Lite LImits | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY_BY_USER] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Virality Performance Dashboard (go/virality-performance) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_SUBSCRIPTIONS] => ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICE_LINE_ITEMS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_ACCOUNT] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALESFORCE_USER] => ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_CUSTOMERS] => ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_STRIPE_INVOICES] => ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ STRIPE INVOICES | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_PARTNER_SOURCING] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Partner Sourcing | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_OPPORTUNITY] => ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Sales Pipeline Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_STRIPE_DISCOUNT_REDEMPTIONS] => ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —  ➕ Stripe Coupons Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 11:07:03,260 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Notification Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ TTV Experiment Tracking | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ webform metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FUNNEL_WEBFORMS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MIUROS_SUPPORT_QA] => ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Support QA Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ SDK Summary Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ML_MODELS].[REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS] => ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Influencers & Network health dashboard | adding native SQL: ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PLAN_TYPE_ENGAGEMENT] => ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Plan Type Reporting | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_revenue_metrics
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viral_looms
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_viewers
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_seats
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_contractions
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_top_vfvers
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Executive Dashboard | adding native SQL: analytics.analytics.reporting_executive_dashboard_sales_metrics
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Traffic | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Traffic | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ nithin-poc | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_WORKSPACE_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 11:07:03,261 — exposurescrawler — DEBUG —  ➕ Company View | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_RECORDING] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_INTEGRATION_VIDEO_VIEW] => ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_CORINNA].[REPORTING_CREATE_FUNNEL_OVERALL] => ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Create Funnel (WIP) | adding native SQL: ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_CORINNA].[REPORTING_CREATE_FUNNEL_RECORDING_START] => ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Create Funnel (WIP) | adding native SQL: ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAIN_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAINS_AGGR] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACE_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAINS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Sales Dash (go/sales-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_EXPANSION] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_HEALTH] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_HEALTH] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACE_STRAGGLER_USERS] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Workspace Teams Product Pillar Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[REPORTING_ACTIVE_FREQUENCY_SEGMENTATION] => ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Activity Frequency Segments | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER].[REPORTING_RETENTION] => ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Weekly Cohorts DEV, DATA DOESN'T UPDATE | adding native SQL: ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Recording Stability Dashboard | adding native SQL: analytics.analytics.fact_recording_ttv
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Depth Of Retention Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Depth Of Retention Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Monthly ARR Movement Summary | adding native SQL: analytics.analytics.reporting_mrr_movement_by_customer
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER_ADHOC].[REPORTING_BRAND] => ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 11:07:03,262 — exposurescrawler — DEBUG —  ➕ Brand Summary | adding native SQL: ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[SDK_SIGNUP_CONVERSION_SPEED] => ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ SDK Signup Conversion Speed | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACE_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_WORKSPACES] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_DOMAIN_USERS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT] => ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Customer Success Dash (go/cs-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_USER_ADOPTION] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Adoption Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_USER_VIDEOS] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Adoption Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Future State | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go/enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Support | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ZENDESK_TICKET_RESPONSES] => ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —  ➕ Support | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 11:07:03,263 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Marketing Site Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_APP_WORKSPACE_SETTINGS] => ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Workspace Settings | adding native SQL: ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEHAN].[REPORTING_HV_SALES_ASSIST] => ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ HV  Performance Summary (Adhoc) | adding native SQL: ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_KPI_FOUNDATION] => ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_AGGREGATE] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Leadership Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_experiments
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_AB_METRICS_LIST] => ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_metric_percentiles
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard - A/A Experiments | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEHAN].[USER_ENGAGEMENT_CLASSIFICATION] => ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ engagement prototype | adding native SQL: ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_CONNECT_INIT] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY] => ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL] => ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY] => ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.staging_salesforce_account => ANALYTICS.analytics.staging_salesforce_account
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.analytics.staging_salesforce_account
2023-10-19 11:07:03,264 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: analytics.analytics.staging_salesforce_workspace
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_INVOICES
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.stripe_plans
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.base_salesforce_user => ANALYTICS.analytics.base_salesforce_user
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.analytics.base_salesforce_user
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led Accounts Receivables Report | adding native SQL: analytics.analytics.fact_organization
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION_MEMBERSHIPS_HISTORY] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Workspace Stats | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Total Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Total Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Sales Led MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[ORGANIZATION_SEATS_PREDICTIONS] => ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Churn Forecasting | adding native SQL: ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[MRR_BY_SUBSCRIPTION_BY_WEEK] => ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Churn Forecasting | adding native SQL: ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_ENGAGEMENT_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Engagement Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRACKS_COUNT] => ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Event Totals | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[CURRENT_TRACKS_EVENT_COUNT] => ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Event Totals | adding native SQL: ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SIGNUP_PAGE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Signup Page Analysis | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_user
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_metric_active_users_unioned
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.days
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_self_serve_mrr_by_customer_by_month
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.days
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SCORE_CARDS] => ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.fact_user
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_metric_video_first_views_unioned
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ Self-Serve Pacing Scorecard | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
2023-10-19 11:07:03,265 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - Legacy | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_USERS] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_FOLDERS] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FOLDERS_ANALYSIS_WORKSPACES] => ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Folder Structure | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENGAGEMENT_SEGMENTATION] => ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Creator Engagement | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_OKRS] => ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Creator Engagement | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_CONTENT_DENSITY] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_USAGE] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DESTINATION_TAGS_HEATMAP] => ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Destination Usage | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ENGAGEMENT_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_WORKSPACE_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ACQUISITION_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_ACTIVATION_METRICS" => ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Overall Product Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACTIVE_USERS_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Active Users Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN:  => raw.website.
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: raw.website.
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN:  => analytics.analytics.
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: analytics.analytics.
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[AB_ANON_USER_LEVEL_METRICS] => ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Record a Reply (Anonymous) Custom Metrics | adding native SQL: ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_CAM_FRAMES_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Cam Frames Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Transcription Events | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_AB_METRICS_LIST] => ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 11:07:03,266 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_metric_percentiles
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.base_ab_metrics_list
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.base_ab_experiments
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Loom Experimentation Dashboard | adding native SQL: analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard (go-enterprise-dash) | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DAILY_VIEWING] => ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Create Daily Active Tableau  | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DAILY_ACTIVE] => ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Create Daily Active Tableau  | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Signups | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[SHARED_MODAL_PIVOTED_RESULTS] => ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Shared Modal AB Fast Follows | adding native SQL: ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE] => ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Organic Search Traffic | adding native SQL: ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - New | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ MRR Dashboard - New | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_HOME_PAGE_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Home Page Analysis Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_SDK_SUMMARY] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ SEO Dashboard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_GOOGLE_SEARCH_SEO] => ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ SEO Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[REPORTING_USER_SEGMENTATION_2023_PLANNING] => ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ 2023_Planning_User_Segments | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 11:07:03,267 — exposurescrawler — DEBUG —  ➕ Behavioral Insights | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Slack Integration Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FEATURES_CAM_FRAMES_EVENTS] => ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Cam Frames - V2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_RECENT_ACTIVITY_PAGE] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Recent Activity Feature - Rollout Engagement | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_TYLER_ADHOC].[REPORTING_BRAND] => ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Brand | adding native SQL: ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_APP_ORGANIZATIONS_MEMBERSHIPS] => ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Workspace Engagement Dashboard (go/workspace-engagement-dash) | adding native SQL: ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Workspace Engagement Dashboard (go/workspace-engagement-dash) | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_SDK_SUMMARY] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ SDK Standard Summary | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_VALIDATION].[SNAPSHOT_DELTAS] => ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Delta Validation Dashboard | adding native SQL: ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_VALIDATION].[DAILY_VALIDATION_DELTAS] => ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Delta Validation Dashboard | adding native SQL: ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_HV_SALES_ASSIST] => ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ HVSM  Performance Summary | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF].[USER_POOL_WITH_POST_ENGAGEMENT_INFO] => ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ 2022 Planning - P&P: Impact of Recording Limits | adding native SQL: ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_KPI_FOUNDATION] => ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_AGGREGATE] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_VIRALITY] => ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_VIRALITY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_RECORDING_ACTIVATION_METRICS] => ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ leadership_dev | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: analytics.fact_video_views => ANALYTICS.analytics.fact_video_views
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding native SQL: ANALYTICS.analytics.fact_video_views
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_USER] => ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Product Marketing | adding native SQL: ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."FACT_RECORDING"
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ TTV Stability Dashboard | adding native SQL: "ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY] => ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_FOR_STARTUPS_PROGRAM] => ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOM_FOR_STARTUPS_PROGRAM] => ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Loom For Startups Program | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PARTNER_SOURCING] => ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Partner Sourcing | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 11:07:03,268 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SIGNUP_METRICS] => ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_STATS] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_MRR] => ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Strategic SDK Partner Monthly Reports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_OVERALL] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START] => ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Create Funnel | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACCOUNT_OVERVIEW] => ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_ACCOUNT_ACTIVITY] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANAGED_ACCOUNT_RETENTION] => ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Managed Accounts | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT] => ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_WORKSPACES_INVITES] => ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CONTACT_IMPORTS] => ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_CONTACT_IMPORT_ENTRYPOINTS] => ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Contact Imports | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_STEP_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_INVITEE_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_ACTIVATION_CYCLE] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LIFECYCLE_SUMMARY_USER] => ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Growth OKR Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: analytics.analytics.stripe_subscription_events
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_STRIPE_CUSTOMER_BALANCE_TRANSACTIONS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Customer Balance as of Date | adding native SQL: ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[REPORTING_IVFV_TEST] => ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[INTEGRATION_RECORDINGS_VIEWS_TEST_6] => ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Integration VFVs | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,269 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_MRR] => ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ENGAGEMENT] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ACTION] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_PERMISSION] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_SIGNUP_METRICS] => ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_ACTION_FLOW] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER] => ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ SDK Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_INVITATIONS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_STANDARD_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_ROLE_CHANGES] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS_ADHOC].[REPORTING_CREATOR_LITE_COMPARABLE_METRICS] => ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Creator Lite Dashboard | adding native SQL: ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.staging_stripe_trial_starts
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_workspace_by_day
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_organization
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_by_subscription_by_day
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_week
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LTV] => ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_user_by_workspace_by_day
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.staging_nodejs_auto_join_workspace
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_organization
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_day
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_RETENTION_BY_ORGANIZATION] => ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Monetization KPIs | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACCOUNT_SUMMARY] => ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ CSM Managed Account Metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_PAID_WORKSPACE_BY_MONTH] => ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ CSM Managed Account Metrics | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK] => ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Slack Connect Event Tracking | adding native SQL: analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
2023-10-19 11:07:03,270 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_RECORDING_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: ANALYTICS_intermediate.intermediate_active_work_users_with_mobile => ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS] => ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_MAWU] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_NOTIFICATION_BY_TYPE] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL" => ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MOBILE_VIEWERS_AND_RECORDERS] => ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Mobile Health Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE] => ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LOOMHQ_ACTIVE_USERS] => ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_DOMAIN_WORKSPACE_DENSITY] => ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Loom_Product_CompanyPillar_2022H2 | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY] => ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Self Serve MRR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Domain Retention | adding native SQL: analytics.analytics.fact_mrr_movement_by_domain_by_day
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MRR_MOVEMENT_BY_CUSTOMER] => ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ ARR Movement Yesterday | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_self_serve_mrr_by_customer_by_month
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.days
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SCORE_CARDS] => ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED] => ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_user
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_organization
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_day
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_recorders_unioned
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_recordings_unioned
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_active_users_unioned
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_revenue_by_month
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_habit_moment_users_unioned
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_activated_work_signups_unioned
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_signups_unioned
2023-10-19 11:07:03,271 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_video_views_unioned
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_metric_domain_with_active_users_by_week
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_user
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Topline Metric | adding native SQL: analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Domain MRR | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_NPS_SURVEY_RESPONSES] => ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ NPS | adding native SQL: ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FEATURE_USAGE_BY_POWER_USER_GROUP_20230615] => ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Feature Usage by Power User Group | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_JEFF_ADHOC].[FEATURE_USAGE_BY_POWER_USER_GROUP_20221214] => ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Feature Usage by Power User Group | adding native SQL: ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [DBT_BRIAN].[CREATOR_LITE_TEMP_20220412] => ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Member Video Limits | adding native SQL: ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_ATTRIBUTION] => ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_TRAFFIC] => ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Attribution | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_MANDRILL_EMAIL_FUNNEL] => ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Mandrill Emails Dashboard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_LTV] => ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ LTV | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALES_LED_MONTHLY_PQA_DOMAINS] => ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL] => ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_TOPLINE_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_KPIS] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE] => ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SUMMARY_COMPARISON] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[BASE_SALES_LED_PERFORMANCE_TARGETS] => ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_SALES_LED_SCORECARD] => ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Enterprise Dashboard Scorecard | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_BY_CUSTOMER] => ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ MRR Analysis | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_ORGANIZATION] => ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ MRR Analysis | adding native SQL: ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_FORECAST] => ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Forecast | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH] => ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ MRR Movement Demo 2022-05 | adding native SQL: ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[VIDEO_VIEWED] => ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ Views by Device | adding native SQL: ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: "ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH" => ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —  ➕ MRR Exports | adding native SQL: ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 11:07:03,272 — exposurescrawler — DEBUG —   ❓ Fixing incomplete FQN: [ANALYTICS].[REPORTING_EXPERIMENT_AB_CATALOG] => ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,273 — exposurescrawler — DEBUG —  ➕ Experiment Timeline | adding native SQL: ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,273 — exposurescrawler — INFO — 🔍 Found 136 workbooks with native SQL
2023-10-19 11:07:03,273 — exposurescrawler — INFO — ⚙️ Parsing SQL: looking for references to models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_SUGGESTION_JOINS
ANALYTICS.ANALYTICS.REPORTING_ONBOARDING_WORKSPACE_SUGGESTIONS
2023-10-19 11:07:03,274 — exposurescrawler — DEBUG —  ❌ Workspace Consolidation: found no models
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,275 — exposurescrawler — DEBUG —  ❌ Go/ROI-Dash: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
2023-10-19 11:07:03,277 — exposurescrawler — DEBUG —  ❌ Creator Lite Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.SPRIG_SURVEY_RESPONSES
2023-10-19 11:07:03,277 — exposurescrawler — DEBUG —  ❌ Sprig Survey Responses (Prototype): found no models
ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
analytics.analytics.reporting_executive_dashboard_top_vfvers
analytics.analytics.reporting_executive_dashboard_domains_with_seats
analytics.analytics.reporting_executive_dashboard_top_viral_looms
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_viewers
analytics.analytics.reporting_executive_dashboard_top_influencers_with_views_received
analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_recorders
ANALYTICS.ANALYTICS.reporting_executive_dashboard_finance_metrics
analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
2023-10-19 11:07:03,286 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_ROI
ANALYTICS.ANALYTICS.REPORTING_CHANNEL_ROI
2023-10-19 11:07:03,287 — exposurescrawler — DEBUG —  ❌ Marketing ROI: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
ANALYTICS_DEV.DBT_BRIAN.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,291 — exposurescrawler — DEBUG —  ❌ Lifecycle OKR Dashboard: found no models
ORCHESTRATION.DAGSTER_PIPELINES.DAGSTER_PIPELINE_RUNS
2023-10-19 11:07:03,292 — exposurescrawler — DEBUG —  ❌ Dagster Runs: found no models
ANALYTICS.ANALYTICS.REPORTING_EMAIL_AB_PERFORMANCE
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,292 — exposurescrawler — DEBUG —  ❌ Marketing Email AB Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
2023-10-19 11:07:03,296 — exposurescrawler — DEBUG —  ❌ Growth OKR Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS_ADHOC.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,298 — exposurescrawler — DEBUG —  ❌ attribution backup: found no models
ANALYTICS.ANALYTICS.FACT_PAID_SDK_PARTNER_USAGE_BY_DAY
2023-10-19 11:07:03,298 — exposurescrawler — DEBUG —  ❌ InfraSDK Invoice Data: found no models
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_FIRST_VIEWS
2023-10-19 11:07:03,299 — exposurescrawler — DEBUG —  ❌ Integration VFVs: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS_DEV.DBT_KAMRAN.REPORTING_TRAFFIC
2023-10-19 11:07:03,300 — exposurescrawler — DEBUG —  ❌ traffic dashboards with dev source: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 11:07:03,300 — exposurescrawler — DEBUG —  ❌ Net MRR Expansion Rate: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.ACTIVITY_BY_WORKSPACE_BY_MONTH
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.DBT_RAYMOND.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
2023-10-19 11:07:03,302 — exposurescrawler — DEBUG —  ❌ Workspace Lookup v2: found no models
ANALYTICS.DBT_BRIAN.TOP_REFERRERS
2023-10-19 11:07:03,303 — exposurescrawler — DEBUG —  ❌ Referrals WIP: found no models
ANALYTICS.ANALYTICS.REPORTING_EDIT_USAGE
ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_DISTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_EDIT_COMPLETE_RATE_BY_TYPE
ANALYTICS.ANALYTICS.REPORTING_EDIT_CLIP_STATS
ANALYTICS.ANALYTICS.REPORTING_PERC_EDIT_RECORDING_AND_RECORDER
2023-10-19 11:07:03,305 — exposurescrawler — DEBUG —  ❌ Create Trim and Add Clip (6): found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.CREATOR_LITE_LIMITS_DATA
2023-10-19 11:07:03,305 — exposurescrawler — DEBUG —  ❌ Creator Lite LImits: found no models
ANALYTICS.ANALYTICS.REPORTING_VIRALITY_BY_USER
2023-10-19 11:07:03,306 — exposurescrawler — DEBUG —  ❌ Virality Performance Dashboard (go/virality-performance): found no models
ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICE_LINE_ITEMS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_ACCOUNT
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.BASE_SALESFORCE_USER
ANALYTICS.ANALYTICS.BASE_STRIPE_CUSTOMERS
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
2023-10-19 11:07:03,308 — exposurescrawler — DEBUG —  ❌ STRIPE INVOICES: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_PARTNER_SOURCING
2023-10-19 11:07:03,309 — exposurescrawler — DEBUG —  ❌ Partner Sourcing: found no models
ANALYTICS.ANALYTICS.REPORTING_OPPORTUNITY
2023-10-19 11:07:03,309 — exposurescrawler — DEBUG —  ❌ Sales Pipeline Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_STRIPE_DISCOUNT_REDEMPTIONS
2023-10-19 11:07:03,310 — exposurescrawler — DEBUG —  ❌ Stripe Coupons Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USER_ACTIVITY
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_TRAY_CLICKTHROUGH_EVENT
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_EVENTS_USERS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_NOTIFICATIONS_PERMISSION_EVENTS
2023-10-19 11:07:03,312 — exposurescrawler — DEBUG —  ❌ Notification Events: found no models
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 11:07:03,312 — exposurescrawler — DEBUG —  ❌ TTV Experiment Tracking: found no models
ANALYTICS.ANALYTICS.REPORTING_FUNNEL_WEBFORMS
2023-10-19 11:07:03,313 — exposurescrawler — DEBUG —  ❌ webform metrics: found no models
ANALYTICS.ANALYTICS.REPORTING_MIUROS_SUPPORT_QA
2023-10-19 11:07:03,313 — exposurescrawler — DEBUG —  ❌ Support QA Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,313 — exposurescrawler — DEBUG —  ❌ SDK Summary Dashboard: found no models
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_STATS_SUMMARY
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTER_DOMAIN_EXTERNAL_INFLUENCERS
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_INTRA_DOMAIN_INFLUENCERS
ANALYTICS.ANALYTICS_ML_MODELS.REPORTING_INFLUENCER_DASH_DOMAIN_MONTHLY_TRENDS
2023-10-19 11:07:03,315 — exposurescrawler — DEBUG —  ❌ Influencers & Network health dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_PLAN_TYPE_ENGAGEMENT
2023-10-19 11:07:03,316 — exposurescrawler — DEBUG —  ❌ Plan Type Reporting: found no models
analytics.analytics.reporting_executive_dashboard_top_deals_in_pipeline
analytics.analytics.reporting_executive_dashboard_revenue_metrics
ANALYTICS.ANALYTICS.reporting_executive_dashboard_metrics
ANALYTICS.ANALYTICS.reporting_executive_dashboard_recording_stability_metrics
analytics.analytics.reporting_executive_dashboard_top_recorders
analytics.analytics.reporting_executive_dashboard_top_viral_looms
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_closed_sales_deals
analytics.analytics.reporting_executive_dashboard_top_viewers
analytics.analytics.reporting_executive_dashboard_domains_with_seats
analytics.analytics.reporting_executive_dashboard_top_recorders_with_views_received
analytics.analytics.reporting_executive_dashboard_domains_with_contractions
analytics.analytics.reporting_executive_dashboard_top_recorders_with_unique_viewers
analytics.analytics.reporting_executive_dashboard_domains_with_new_seats
analytics.analytics.reporting_executive_dashboard_top_deals_for_renewal
analytics.analytics.reporting_executive_dashboard_top_vfvers
analytics.analytics.reporting_executive_dashboard_sales_metrics
2023-10-19 11:07:03,323 — exposurescrawler — DEBUG —  ❌ Executive Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,324 — exposurescrawler — DEBUG —  ❌ Traffic: found no models
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,325 — exposurescrawler — DEBUG —  ❌ nithin-poc: found no models
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_SUMMARY
2023-10-19 11:07:03,326 — exposurescrawler — DEBUG —  ❌ Company View: found no models
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_O_EMBED_REQUESTED
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_RECORDING
ANALYTICS.ANALYTICS.REPORTING_INTEGRATION_VIDEO_VIEW
2023-10-19 11:07:03,327 — exposurescrawler — DEBUG —  ❌ Integration Dashboard: found no models
ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_OVERALL
ANALYTICS_DEV.DBT_CORINNA.REPORTING_CREATE_FUNNEL_RECORDING_START
2023-10-19 11:07:03,328 — exposurescrawler — DEBUG —  ❌ Create Funnel (WIP): found no models
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS_AGGR
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_PROSPECTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAINS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,332 — exposurescrawler — DEBUG —  ❌ Sales Dash (go/sales-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_EXPANSION
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_HEALTH
ANALYTICS.ANALYTICS.REPORTING_WORKSPACE_STRAGGLER_USERS
2023-10-19 11:07:03,334 — exposurescrawler — DEBUG —  ❌ Workspace Teams Product Pillar Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_ACTIVE_FREQUENCY_SEGMENTATION
2023-10-19 11:07:03,334 — exposurescrawler — DEBUG —  ❌ Activity Frequency Segments: found no models
ANALYTICS.DBT_TYLER.REPORTING_RETENTION
2023-10-19 11:07:03,335 — exposurescrawler — DEBUG —  ❌ Weekly Cohorts DEV, DATA DOESN'T UPDATE: found no models
analytics.analytics.fact_recording_ttv
2023-10-19 11:07:03,335 — exposurescrawler — DEBUG —  ❌ Recording Stability Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_PAID_RETENTION
ANALYTICS.ANALYTICS.REPORTING_RETENTION
2023-10-19 11:07:03,336 — exposurescrawler — DEBUG —  ❌ Depth Of Retention Dashboard: found no models
analytics.analytics.reporting_mrr_movement_by_customer
2023-10-19 11:07:03,336 — exposurescrawler — DEBUG —  ❌ Monthly ARR Movement Summary: found no models
ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 11:07:03,337 — exposurescrawler — DEBUG —  ❌ Brand Summary: found no models
ANALYTICS_DEV.DBT_BRIAN.SDK_SIGNUP_CONVERSION_SPEED
2023-10-19 11:07:03,337 — exposurescrawler — DEBUG —  ❌ SDK Signup Conversion Speed: found no models
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACE_USERS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES_AGGR
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_DOMAIN_SNAPSHOT
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_WORKSPACES
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_DOMAIN_USERS
ANALYTICS.ANALYTICS.REPORTING_LOOM_CUSTOMER_ROI_USER_SNAPSHOT
2023-10-19 11:07:03,340 — exposurescrawler — DEBUG —  ❌ Customer Success Dash (go/cs-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_ADOPTION
ANALYTICS.ANALYTICS.REPORTING_MANAGED_USER_VIDEOS
2023-10-19 11:07:03,340 — exposurescrawler — DEBUG —  ❌ Adoption Analysis: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,342 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - Future State: found no models
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
2023-10-19 11:07:03,346 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard (go/enterprise-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKETS_BY_SLICE_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_ZENDESK_TICKET_RESPONSES
2023-10-19 11:07:03,347 — exposurescrawler — DEBUG —  ❌ Support: found no models
ANALYTICS.ANALYTICS.REPORTING_PRE_SIGNUP_WEBSITE_TRAFFIC
2023-10-19 11:07:03,347 — exposurescrawler — DEBUG —  ❌ Marketing Site Analysis: found no models
ANALYTICS.ANALYTICS.BASE_APP_WORKSPACE_SETTINGS
2023-10-19 11:07:03,347 — exposurescrawler — DEBUG —  ❌ Workspace Settings: found no models
ANALYTICS_DEV.DBT_JEHAN.REPORTING_HV_SALES_ASSIST
2023-10-19 11:07:03,348 — exposurescrawler — DEBUG —  ❌ HV  Performance Summary (Adhoc): found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
ANALYTICS.ANALYTICS.REPORTING_VIRALITY
ANALYTICS.ANALYTICS.REPORTING_KPI_FOUNDATION
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
2023-10-19 11:07:03,350 — exposurescrawler — DEBUG —  ❌ Leadership Dashboard: found no models
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_experiments
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
analytics.analytics.reporting_experiment_ab_bayes_summary
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
analytics.analytics.reporting_experiment_ab_metric_percentiles
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
ANALYTICS.ANALYTICS.BASE_AB_EXPERIMENTS
2023-10-19 11:07:03,355 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard - A/A Experiments: found no models
ANALYTICS_DEV.DBT_JEHAN.USER_ENGAGEMENT_CLASSIFICATION
2023-10-19 11:07:03,355 — exposurescrawler — DEBUG —  ❌ engagement prototype: found no models
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_INIT
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_RECORDING_METRICS_TOTAL
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_CONNECT_INIT_CALLBACK_SUMMARY
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.SLACK_AUTHORIZATION_BY_WORKSPACE_BY_USER_BY_DAY
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_APP_USER_DISCONNECTED
2023-10-19 11:07:03,360 — exposurescrawler — DEBUG —  ❌ Slack Integration Dashboard: found no models
ANALYTICS.analytics.staging_salesforce_account
analytics.analytics.staging_salesforce_workspace
ANALYTICS.ANALYTICS.BASE_STRIPE_INVOICES
ANALYTICS.ANALYTICS.STRIPE_INVOICES
ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
ANALYTICS.ANALYTICS.stripe_plans
ANALYTICS.analytics.base_salesforce_user
ANALYTICS.ANALYTICS.BASE_STRIPE_SUBSCRIPTIONS
analytics.analytics.fact_organization
2023-10-19 11:07:03,363 — exposurescrawler — DEBUG —  ❌ Sales Led Accounts Receivables Report: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION_MEMBERSHIPS_HISTORY
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
2023-10-19 11:07:03,364 — exposurescrawler — DEBUG —  ❌ Workspace Stats: found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,365 — exposurescrawler — DEBUG —  ❌ Total Signups: found no models
ANALYTICS.ANALYTICS.FACT_SALES_LED_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,365 — exposurescrawler — DEBUG —  ❌ Sales Led MRR Movement Yesterday: found no models
ANALYTICS.ANALYTICS.ORGANIZATION_SEATS_PREDICTIONS
ANALYTICS.ANALYTICS.MRR_BY_SUBSCRIPTION_BY_WEEK
2023-10-19 11:07:03,366 — exposurescrawler — DEBUG —  ❌ Churn Forecasting: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_ENGAGEMENT_EVENTS
2023-10-19 11:07:03,367 — exposurescrawler — DEBUG —  ❌ Engagement Events: found no models
ANALYTICS.ANALYTICS.REPORTING_TRACKS_COUNT
ANALYTICS.ANALYTICS.CURRENT_TRACKS_EVENT_COUNT
2023-10-19 11:07:03,367 — exposurescrawler — DEBUG —  ❌ Event Totals: found no models
ANALYTICS.ANALYTICS.REPORTING_SIGNUP_PAGE_TRAFFIC
2023-10-19 11:07:03,368 — exposurescrawler — DEBUG —  ❌ Signup Page Analysis: found no models
analytics.analytics.fact_user
analytics.analytics.reporting_metric_active_users_unioned
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
analytics.analytics.fact_self_serve_mrr_by_customer_by_month
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
analytics.analytics.fact_user
analytics.analytics.reporting_metric_video_first_views_unioned
analytics.analytics.reporting_score_card_goals
2023-10-19 11:07:03,372 — exposurescrawler — DEBUG —  ❌ Self-Serve Pacing Scorecard: found no models
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER_BY_DAY
ANALYTICS.ANALYTICS.FACT_USER
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,374 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - Legacy: found no models
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_USERS
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_FOLDERS
ANALYTICS.DBT_JEFF_ADHOC.FOLDERS_ANALYSIS_WORKSPACES
2023-10-19 11:07:03,375 — exposurescrawler — DEBUG —  ❌ Folder Structure: found no models
ANALYTICS.ANALYTICS.REPORTING_ENGAGEMENT_SEGMENTATION
ANALYTICS.ANALYTICS.REPORTING_CREATE_OKRS
2023-10-19 11:07:03,376 — exposurescrawler — DEBUG —  ❌ Creator Engagement: found no models
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_CONTENT_DENSITY
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_USAGE
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_VIDEOS_PER_GROUPING
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_DISTRIBUTION_GROUPINGS_PER_VIDEO
ANALYTICS.ANALYTICS.REPORTING_DESTINATION_TAGS_HEATMAP
2023-10-19 11:07:03,378 — exposurescrawler — DEBUG —  ❌ Destination Usage: found no models
ANALYTICS."ANALYTICS"."REPORTING_ENGAGEMENT_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_WORKSPACE_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_ACQUISITION_METRICS"
ANALYTICS."ANALYTICS"."REPORTING_ACTIVATION_METRICS"
2023-10-19 11:07:03,379 — exposurescrawler — DEBUG —  ❌ Overall Product Health Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_ACTIVE_USERS_BY_MONTH
2023-10-19 11:07:03,380 — exposurescrawler — DEBUG —  ❌ Active Users Dashboard: found no models
raw.website.
analytics.analytics.
ANALYTICS.ANALYTICS.AB_ANON_USER_LEVEL_METRICS
2023-10-19 11:07:03,381 — exposurescrawler — DEBUG —  ❌ Record a Reply (Anonymous) Custom Metrics: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 11:07:03,382 — exposurescrawler — DEBUG —  ❌ Cam Frames Events: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_TRANSCRIPTION_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_FILLER_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_ENGAGEMENT_EVENTS
ANALYTICS.ANALYTICS.REPORTING_FEATURES_TRANSCRIPTIONS_CAPTIONS_EVENTS
2023-10-19 11:07:03,383 — exposurescrawler — DEBUG —  ❌ Transcription Events: found no models
ANALYTICS.ANALYTICS.BASE_AB_METRICS_LIST
analytics_dev.dbt_jim_static.reporting_experiment_ab_metric_percentiles_old
ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
analytics.analytics.reporting_experiment_ab_metric_percentiles
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_metrics_list
analytics.analytics.reporting_experiment_ab_bayes_summary
analytics.analytics.base_ab_experiments
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
ANALYTICS.ANALYTICS.staging_ab_experiments_and_holdouts
analytics.analytics.reporting_experiment_ab_bayes_summary
2023-10-19 11:07:03,388 — exposurescrawler — DEBUG —  ❌ Loom Experimentation Dashboard: found no models
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,392 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard (go-enterprise-dash): found no models
ANALYTICS.ANALYTICS.REPORTING_DAILY_VIEWING
ANALYTICS.ANALYTICS.REPORTING_DAILY_ACTIVE
2023-10-19 11:07:03,392 — exposurescrawler — DEBUG —  ❌ Create Daily Active Tableau : found no models
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
2023-10-19 11:07:03,393 — exposurescrawler — DEBUG —  ❌ Signups: found no models
ANALYTICS.DBT_JEFF_ADHOC.SHARED_MODAL_PIVOTED_RESULTS
2023-10-19 11:07:03,393 — exposurescrawler — DEBUG —  ❌ Shared Modal AB Fast Follows: found no models
ANALYTICS.ANALYTICS.BASE_GOOGLE_SEARCH_CONSOLE_QUERY_PERFORMANCE
2023-10-19 11:07:03,394 — exposurescrawler — DEBUG —  ❌ Organic Search Traffic: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER_PIVOT_EXTENDED
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 11:07:03,395 — exposurescrawler — DEBUG —  ❌ MRR Dashboard - New: found no models
ANALYTICS.ANALYTICS.REPORTING_HOME_PAGE_TRAFFIC
2023-10-19 11:07:03,395 — exposurescrawler — DEBUG —  ❌ Home Page Analysis Dashboard: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,396 — exposurescrawler — DEBUG —  ❌ SDK Dashboard: found no models
ANALYTICS.ANALYTICS.STAGING_GOOGLE_SEARCH_CONSOLE_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_GOOGLE_SEARCH_SEO
2023-10-19 11:07:03,396 — exposurescrawler — DEBUG —  ❌ SEO Dashboard: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.REPORTING_USER_SEGMENTATION_2023_PLANNING
2023-10-19 11:07:03,397 — exposurescrawler — DEBUG —  ❌ 2023_Planning_User_Segments: found no models
ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_INSIGHTS_BY_MONTH
2023-10-19 11:07:03,397 — exposurescrawler — DEBUG —  ❌ Behavioral Insights: found no models
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_TOTAL
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_NOTIFICATION_METRICS_BREAKDOWN
ANALYTICS.ANALYTICS.REPORTING_SLACK_INTEGRATION_AUTHORIZATION_METRICS_TOTAL
2023-10-19 11:07:03,399 — exposurescrawler — DEBUG —  ❌ Slack Integration Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_FEATURES_CAM_FRAMES_EVENTS
2023-10-19 11:07:03,399 — exposurescrawler — DEBUG —  ❌ Cam Frames - V2: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_RECENT_ACTIVITY_PAGE
2023-10-19 11:07:03,399 — exposurescrawler — DEBUG —  ❌ Recent Activity Feature - Rollout Engagement: found no models
ANALYTICS_DEV.DBT_TYLER_ADHOC.REPORTING_BRAND
2023-10-19 11:07:03,400 — exposurescrawler — DEBUG —  ❌ Brand: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,400 — exposurescrawler — DEBUG —  ❌ MRR Movement Yesterday: found no models
ANALYTICS.ANALYTICS.STAGING_APP_ORGANIZATIONS_MEMBERSHIPS
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,401 — exposurescrawler — DEBUG —  ❌ Workspace Engagement Dashboard (go/workspace-engagement-dash): found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_SDK_SUMMARY
2023-10-19 11:07:03,401 — exposurescrawler — DEBUG —  ❌ SDK Standard Summary: found no models
ANALYTICS.ANALYTICS_VALIDATION.SNAPSHOT_DELTAS
ANALYTICS.ANALYTICS_VALIDATION.DAILY_VALIDATION_DELTAS
2023-10-19 11:07:03,402 — exposurescrawler — DEBUG —  ❌ Delta Validation Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_HV_SALES_ASSIST
2023-10-19 11:07:03,402 — exposurescrawler — DEBUG —  ❌ HVSM  Performance Summary: found no models
ANALYTICS.DBT_JEFF.USER_POOL_WITH_POST_ENGAGEMENT_INFO
2023-10-19 11:07:03,403 — exposurescrawler — DEBUG —  ❌ 2022 Planning - P&P: Impact of Recording Limits: found no models
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
ANALYTICS.ANALYTICS.REPORTING_MRR_BY_CUSTOMER_DATE_AGGREGATE
ANALYTICS_DEV.ANALYTICS.REPORTING_KPI_FOUNDATION
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_AGGREGATE
ANALYTICS.ANALYTICS.REPORTING_VIRALITY
ANALYTICS.ANALYTICS.REPORTING_RECORDING_ACTIVATION_METRICS
2023-10-19 11:07:03,405 — exposurescrawler — DEBUG —  ✅ leadership_dev: found models ['ANALYTICS_DEV.analytics.reporting_kpi_foundation']
ANALYTICS.analytics.fact_video_views
ANALYTICS.ANALYTICS.FACT_USER
2023-10-19 11:07:03,406 — exposurescrawler — DEBUG —  ❌ Product Marketing: found no models
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
"ANALYTICS"."ANALYTICS"."FACT_RECORDING"
"ANALYTICS"."ANALYTICS"."COUNTRY_CODE_MAPPING"
2023-10-19 11:07:03,408 — exposurescrawler — DEBUG —  ❌ TTV Stability Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_MULTIMEMBER_WORKSPACE_BY_DAY
ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_LOOM_FOR_STARTUPS_PROGRAM
2023-10-19 11:07:03,409 — exposurescrawler — DEBUG —  ❌ Loom For Startups Program: found no models
ANALYTICS.ANALYTICS.REPORTING_PARTNER_SOURCING
2023-10-19 11:07:03,410 — exposurescrawler — DEBUG —  ❌ Partner Sourcing: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_VIEW_BY_PLATFORM
ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_STATS
ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
2023-10-19 11:07:03,412 — exposurescrawler — DEBUG —  ❌ Strategic SDK Partner Monthly Reports: found no models
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_CLICK
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_DESKTOP_MENU_USAGE
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_OVERALL
ANALYTICS.ANALYTICS.REPORTING_CREATE_FUNNEL_ACTIVATE_TO_START
2023-10-19 11:07:03,413 — exposurescrawler — DEBUG —  ❌ Create Funnel: found no models
ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_OVERVIEW
ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_ACTIVITY
ANALYTICS.ANALYTICS.REPORTING_MANAGED_ACCOUNT_RETENTION
2023-10-19 11:07:03,415 — exposurescrawler — DEBUG —  ❌ Managed Accounts: found no models
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_WALL_TO_WALL_ADOPTION
ANALYTICS_DEV.DBT_JEFF_ADHOC.PIVOT_CONTACT_IMPORTS_UI_ENGAGEMENT
ANALYTICS.ANALYTICS.REPORTING_WORKSPACES_INVITES
ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORTS
ANALYTICS.ANALYTICS.REPORTING_CONTACT_IMPORT_ENTRYPOINTS
2023-10-19 11:07:03,417 — exposurescrawler — DEBUG —  ❌ Contact Imports: found no models
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITE_SENT_ACCEPTED
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_STEP_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_N_DAYS
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SIGNUP_PAGE_CONVERSION
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_ANONYMOUS_USER
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_INVITEE_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_ACTIVATION_CYCLE
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_WORKSPACE_MEMBER_ALL_TIME
ANALYTICS.ANALYTICS.REPORTING_LIFECYCLE_SUMMARY_USER
2023-10-19 11:07:03,420 — exposurescrawler — DEBUG —  ❌ Growth OKR Dashboard: found no models
analytics.analytics.stripe_subscription_events
ANALYTICS.ANALYTICS.REPORTING_STRIPE_CUSTOMER_BALANCE_TRANSACTIONS
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
ANALYTICS.ANALYTICS.STRIPE_CUSTOMERS
2023-10-19 11:07:03,422 — exposurescrawler — DEBUG —  ❌ Customer Balance as of Date: found no models
ANALYTICS_DEV.DBT_BRIAN.REPORTING_IVFV_TEST
ANALYTICS_DEV.DBT_BRIAN.INTEGRATION_RECORDINGS_VIEWS_TEST_6
2023-10-19 11:07:03,422 — exposurescrawler — DEBUG —  ❌ Integration VFVs: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,423 — exposurescrawler — DEBUG —  ❌ Attribution: found no models
ANALYTICS.ANALYTICS.REPORTING_SDK_MRR
ANALYTICS.ANALYTICS.REPORTING_SDK_VFVS_POST_SIGNUP_BY_ORGANIZATION
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_BEFORE_SIGNUP_BY_PARTNER
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ENGAGEMENT
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_PERMISSION
ANALYTICS.ANALYTICS.REPORTING_SDK_SIGNUP_METRICS
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_ACTION_FLOW
ANALYTICS.ANALYTICS.REPORTING_SDK_RECORDING_INSERTS_BY_PARTNER
2023-10-19 11:07:03,427 — exposurescrawler — DEBUG —  ❌ SDK Dashboard: found no models
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_PRODUCT_SPECIFIC_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_INVITATIONS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_STANDARD_METRICS
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_ROLE_CHANGES
ANALYTICS.ANALYTICS_ADHOC.REPORTING_CREATOR_LITE_COMPARABLE_METRICS
2023-10-19 11:07:03,429 — exposurescrawler — DEBUG —  ❌ Creator Lite Dashboard: found no models
analytics.analytics.staging_stripe_trial_starts
analytics.analytics.fact_workspace_by_day
analytics.analytics.fact_organization
ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_month
analytics.analytics.fact_mrr_by_subscription_by_day
ANALYTICS.ANALYTICS.fact_mrr_movement_by_customer_by_week
analytics.analytics.fact_mrr_movement_by_customer_by_week
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
analytics.analytics.fact_mrr_movement_by_customer_by_month
ANALYTICS.ANALYTICS.REPORTING_LTV
analytics.analytics.fact_user_by_workspace_by_day
analytics.analytics.staging_nodejs_auto_join_workspace
analytics.analytics.fact_organization
analytics.analytics.fact_mrr_movement_by_customer_by_day
ANALYTICS.ANALYTICS.REPORTING_MRR_RETENTION_BY_ORGANIZATION
2023-10-19 11:07:03,435 — exposurescrawler — DEBUG —  ❌ Monetization KPIs: found no models
ANALYTICS.ANALYTICS.REPORTING_ACCOUNT_SUMMARY
ANALYTICS.ANALYTICS.REPORTING_PAID_WORKSPACE_BY_MONTH
2023-10-19 11:07:03,436 — exposurescrawler — DEBUG —  ❌ CSM Managed Account Metrics: found no models
ANALYTICS.ANALYTICS.BASE_INTEGRATIONS_SLACK_CONNECT_CALLBACK
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_sent
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_clicked
analytics.analytics.staging_integrations_slack_app_invite_nudge_from_anon_vfv_shown
2023-10-19 11:07:03,438 — exposurescrawler — DEBUG —  ❌ Slack Connect Event Tracking: found no models
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNUP_FUNNEL"
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_VIEWED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_RECORDING_BY_TYPE
ANALYTICS.ANALYTICS_intermediate.intermediate_active_work_users_with_mobile
ANALYTICS.ANALYTICS.REPORTING_MOBILE_WORK_SIGNUPS_WITH_7D_VFV
ANALYTICS.ANALYTICS.REPORTING_ACTIVE_WORK_USERS_WITH_MOBILE_VIEWS
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_SHARED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_MAWU
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_VIDEO_PAGE_VIEWED"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_NOTIFICATION_BY_TYPE
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_INSTALL"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_PUSH_NOTIFICATION_FAILED
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_OPEN"
ANALYTICS."ANALYTICS"."REPORTING_DAILY_MOBILE_APP_SIGNIN_FUNNEL"
ANALYTICS.ANALYTICS.REPORTING_MOBILE_VIEWERS_AND_RECORDERS
2023-10-19 11:07:03,444 — exposurescrawler — DEBUG —  ❌ Mobile Health Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_NPLUS_CATEGORIES
ANALYTICS.ANALYTICS.REPORTING_ENTERPRISE_ADOPTION_SCORE_BY_FEATURE
ANALYTICS.ANALYTICS.REPORTING_LOOMHQ_ACTIVE_USERS
ANALYTICS.ANALYTICS.REPORTING_DOMAIN_WORKSPACE_DENSITY
2023-10-19 11:07:03,446 — exposurescrawler — DEBUG —  ❌ Loom_Product_CompanyPillar_2022H2: found no models
ANALYTICS.ANALYTICS.FACT_SELF_SERVE_MRR_BY_CUSTOMER_BY_DAY
2023-10-19 11:07:03,447 — exposurescrawler — DEBUG —  ❌ Self Serve MRR Movement Yesterday: found no models
analytics.analytics.fact_mrr_movement_by_domain_by_day
2023-10-19 11:07:03,447 — exposurescrawler — DEBUG —  ❌ Domain Retention: found no models
ANALYTICS.ANALYTICS.REPORTING_MRR_MOVEMENT_BY_CUSTOMER
2023-10-19 11:07:03,447 — exposurescrawler — DEBUG —  ❌ ARR Movement Yesterday: found no models
analytics.analytics.fact_self_serve_mrr_by_customer_by_month
analytics.analytics.reporting_score_card_goals
analytics.analytics.days
ANALYTICS.ANALYTICS.REPORTING_SCORE_CARDS
ANALYTICS_DEV.ANALYTICS.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
analytics.analytics.fact_user
analytics.analytics.reporting_score_card_goals
analytics.analytics.fact_organization
analytics.analytics.fact_mrr_movement_by_customer_by_day
analytics.analytics.reporting_metric_recorders_unioned
analytics.analytics.reporting_metric_recordings_unioned
analytics.analytics.reporting_metric_active_users_unioned
analytics.analytics.reporting_metric_revenue_by_month
analytics.analytics.reporting_metric_habit_moment_users_unioned
analytics.analytics.reporting_metric_activated_work_signups_unioned
analytics.analytics.reporting_metric_signups_unioned
analytics.analytics.REPORTING_METRIC_VIDEO_FIRST_VIEWS_UNIONED
analytics.analytics.reporting_metric_video_views_unioned
analytics.analytics.reporting_metric_domain_with_active_users_by_week
analytics.analytics.fact_user
analytics.analytics.reporting_score_card_goals
analytics.analytics.fact_mrr_movement_by_customer_by_month
2023-10-19 11:07:03,456 — exposurescrawler — DEBUG —  ✅ Topline Metric: found models ['ANALYTICS_DEV.analytics.reporting_metric_video_first_views_unioned']
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_DOMAIN_BY_MONTH
2023-10-19 11:07:03,456 — exposurescrawler — DEBUG —  ❌ Domain MRR: found no models
ANALYTICS.ANALYTICS.FACT_NPS_SURVEY_RESPONSES
2023-10-19 11:07:03,457 — exposurescrawler — DEBUG —  ❌ NPS: found no models
ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20230615
ANALYTICS_DEV.DBT_JEFF_ADHOC.FEATURE_USAGE_BY_POWER_USER_GROUP_20221214
2023-10-19 11:07:03,458 — exposurescrawler — DEBUG —  ❌ Feature Usage by Power User Group: found no models
ANALYTICS_DEV.DBT_BRIAN.CREATOR_LITE_TEMP_20220412
2023-10-19 11:07:03,458 — exposurescrawler — DEBUG —  ❌ Member Video Limits: found no models
ANALYTICS.ANALYTICS.REPORTING_ATTRIBUTION
ANALYTICS.ANALYTICS.REPORTING_TRAFFIC
2023-10-19 11:07:03,459 — exposurescrawler — DEBUG —  ❌ Attribution: found no models
ANALYTICS.ANALYTICS.REPORTING_MANDRILL_EMAIL_FUNNEL
2023-10-19 11:07:03,459 — exposurescrawler — DEBUG —  ❌ Mandrill Emails Dashboard: found no models
ANALYTICS.ANALYTICS.REPORTING_LTV
2023-10-19 11:07:03,460 — exposurescrawler — DEBUG —  ❌ LTV: found no models
ANALYTICS.ANALYTICS.STAGING_SALES_LED_MONTHLY_PQA_DOMAINS
ANALYTICS.ANALYTICS.SALESFORCE_LEAD_OPPORTUNITY_CONVERSION_FUNNEL
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_TOPLINE_PERFORMANCE
ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_KPIS
ANALYTICS.ANALYTICS.STAGING_SALESFORCE_CAMPAIGNMEMBER_PERFORMANCE
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SUMMARY_COMPARISON
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.BASE_SALES_LED_TARGETS
ANALYTICS.ANALYTICS.BASE_SALES_LED_PERFORMANCE_TARGETS
ANALYTICS.ANALYTICS.REPORTING_SALES_LED_SCORECARD
2023-10-19 11:07:03,464 — exposurescrawler — DEBUG —  ❌ Enterprise Dashboard Scorecard: found no models
ANALYTICS.ANALYTICS.FACT_MRR_BY_CUSTOMER
ANALYTICS.ANALYTICS.FACT_ORGANIZATION
2023-10-19 11:07:03,465 — exposurescrawler — DEBUG —  ❌ MRR Analysis: found no models
ANALYTICS.ANALYTICS.REPORTING_FORECAST
2023-10-19 11:07:03,465 — exposurescrawler — DEBUG —  ❌ Forecast: found no models
ANALYTICS.ANALYTICS.FACT_MRR_MOVEMENT_BY_CUSTOMER_BY_MONTH
2023-10-19 11:07:03,466 — exposurescrawler — DEBUG —  ❌ MRR Movement Demo 2022-05: found no models
ANALYTICS.ANALYTICS.VIDEO_VIEWED
2023-10-19 11:07:03,466 — exposurescrawler — DEBUG —  ❌ Views by Device: found no models
ANALYTICS."ANALYTICS"."FACT_MRR_BY_DOMAIN_BY_MONTH"
2023-10-19 11:07:03,467 — exposurescrawler — DEBUG —  ❌ MRR Exports: found no models
ANALYTICS.ANALYTICS.REPORTING_EXPERIMENT_AB_CATALOG
2023-10-19 11:07:03,467 — exposurescrawler — DEBUG —  ❌ Experiment Timeline: found no models
2023-10-19 11:07:03,467 — exposurescrawler — INFO — ⚙️ Found 2 workbooks with linked models
2023-10-19 11:07:03,467 — exposurescrawler — INFO — 
2023-10-19 11:07:03,467 — exposurescrawler — INFO — 💡 Results merged: 2 + 2 = 4 workbooks
2023-10-19 11:07:03,467 — exposurescrawler — INFO — 
2023-10-19 11:07:03,467 — exposurescrawler — INFO — 🌏 Retrieving workbooks and authors metadata from the Tableau REST API
Signed in successfully!
local
Signed in successfully!
Signed in successfully!
Signed in successfully!
Signed in successfully!
Signed in successfully!
Signed in successfully!
